{"version":3,"sources":["redux/actions/login-status.ts","redux/state.ts","redux/reducers/login-status.ts","redux/actions/snackbar.ts","redux/reducers/snakbar.ts","redux/reducers/root-reducers.ts","redux/configure-store.ts","theme.tsx","utils/use-full-height.tsx","components/login/commons/login-common.tsx","components/commons/form-button.tsx","utils/use-input-field.tsx","utils/validators.ts","requests/urls.ts","requests/useLogin.tsx","components/commons/error-message.tsx","components/login/login.tsx","requests/useRegister.tsx","components/login/register.tsx","components/commons/theme-button.tsx","requests/useLogout.tsx","components/header/logged-in-user-panel.tsx","components/header/anonymous-user-panel.tsx","components/commons/logo.tsx","components/header/header.tsx","containers/header-container.tsx","requests/useGetAuthorizationHeader.tsx","requests/useVerifyToken.tsx","requests/useGetPostList.tsx","utils/get-time-string.tsx","utils/use-redirect-to-login.tsx","requests/useLike.tsx","components/commons/like-buttons.tsx","components/post-list/post.tsx","components/post-list/post-list.tsx","containers/post-list-container.tsx","components/commons/generic-button.tsx","components/side-bar/side-bar.tsx","components/main-page/main-page.tsx","components/snackbar/snackbar.tsx","containers/snackbar-container.tsx","components/footer/footer-column.tsx","components/footer/footer.tsx","utils/protected-router.tsx","requests/usePostSubmission.tsx","components/post-editor/post-editor.tsx","utils/use-set-title.ts","requests/useGetPostDetail.tsx","utils/use-reload.tsx","requests/useCommentSubmission.tsx","components/post-detail/comment-input.tsx","components/post-detail/item-info.tsx","components/post-detail/sub-comment-item.tsx","components/post-detail/comment-item.tsx","components/post-detail/comment-list.tsx","components/post-detail/post-detail.tsx","utils/router-scroll-restoration.tsx","inner-app.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["LoginStatusActionTypes","defaultState","loginStatus","isLogin","username","token","access","refresh","snackbar","open","message","updateLoginStatus","newStatus","type","UPDATE_LOGIN_STATUS","SnackbarActionTypes","state","action","LOGOUT","REFRESH_TOKEN","Object","assign","newAccessToken","openSnackbar","OPEN","CLOSE","rootReducers","combineReducers","loggerMiddleware","createLogger","theme","createMuiTheme","palette","primary","main","contrastText","secondary","text","background","default","typography","responsiveFontSizes","h1","fontFamily","join","fontWeight","fontSize","breakpoints","up","useFullHeight","ref","useState","height","setHeight","useEffect","current","getBoundingClientRect","useStyles","makeStyles","root","width","margin","spacing","display","flexDirection","alignItems","justifyContent","image","objectFit","down","content","padding","textField","link","color","LoginCommon","children","imageUrl","classes","containerRef","useRef","Paper","elevation","className","src","process","alt","style","title","button","backgroundColor","textTransform","borderBottom","borderRadius","opacity","FormButton","disabled","form","variant","disableElevation","useInputField","defaultValue","validator","value","setValue","error","setError","errorMessage","setErrorMessage","e","target","reference","validatorResult","isValid","usernameValidator","length","emailValidator","indexOf","passwordValidator","confirmPasswordValidator","postTitleValidator","commentValidator","execValidators","validators","validationResults","map","_","i","base","postBase","urls","login","accountBase","register","verifySession","getPostList","getPostDetail","id","createPost","createComment","commentBase","like","userActionsBase","useLogin","loading","setLoading","dispatch","useDispatch","history","useHistory","location","useLocation","email","password","fetch","method","headers","body","JSON","stringify","then","res","json","status","data","from","pathname","replace","catch","ErrorMessage","Typography","component","Box","CircularProgress","Login","setEmail","emailError","emailErrorMessage","validateEmail","setPassword","passwordError","passwordErrorMessage","validatePassword","onSubmit","preventDefault","Grid","container","item","xs","textAlign","justify","TextField","label","name","onChange","helperText","Divider","to","useRegister","confirmPassword","Register","setUsername","usernameError","usernameErrorMessage","validateUsername","setConfirmPassword","confirmPasswordError","confirmPasswordErrorMessage","validateConfirmPassword","validationCheck1","validationCheck2","md","letterSpacing","ThemeButton","url","onClick","Link","useLogout","clientSideLogout","LoggedInUserPanel","logout","size","AnonymousUserPanel","Logo","headerDimension","position","zIndex","appBar","left","top","placeholder","Header","HeaderContainer","connect","useGetAuthorizationHeader","accessToken","useStore","getState","useVerifyToken","refreshToken","accessHeader","Promise","resolve","reject","a","refreshRes","refreshJson","console","log","useGetPostList","validateToken","setData","fetchPostList","hasValidToken","months","getTimeString","ISOString","date","Date","hour","getHours","minute","getMinutes","getDate","getMonth","getFullYear","useRedirectToLogin","push","useLike","updatedData","setUpdatedData","redirectToLogin","likeButtons","marginLeft","buttonText","lineHeight","grey","LikeButtons","likes","dislikes","isLiked","likeLoading","undefined","likedByUser","dislikedByUser","IconButton","aria-label","green","red","paper","minHeight","avatar","light","author","actionArea","actionItem","Post","Avatar","owner","charAt","is_liked","comments","created","PostList","Array","fill","my","key","Skeleton","animation","PostListContainer","maxWidth","GenericClickButton","Button","GenericLinkButton","SideBar","right","MainPage","createStyles","Snackbar","closeSnackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","SnackbarContent","SnackbarContainer","userStyles","listStyleType","header","FooterColumn","href","rel","column1","copyright","Footer","PrivateRoute","rest","render","usePostSubmission","submitted","setSubmitted","editor","marginBottom","PostEditor","useParams","postID","quill","setQuill","titleChangeHandler","titleError","titleErrorMessage","validateTitle","submit","quillInstance","Quill","modules","toolbar","FormControl","InputLabel","htmlFor","Input","aria-describedby","FormHelperText","innerHTML","useSetTitle","document","useGetPostDetail","fetchPostDetail","useReload","useCommentSubmission","reload","parentPost","parentComment","input","CommentInput","comment","commentChangeHandler","commentError","commentErrorMessage","validateComment","postInfo","avatarSmall","postInfoItem","ItemInfo","small","SubCommentItem","commentButton","subCommentPanel","border","CommentItem","isCommentPanelOpen","setIsCommentPanelOpen","startIcon","prev","sub_comments","Fade","in","timeout","loginToLeaveMessage","CommentList","itemData","postContent","marginTop","PostDetail","parseInt","dangerouslySetInnerHTML","__html","comments_data","RouterScrollRestoration","window","scrollTo","widthWrapper","InnerAppContainer","basename","path","exact","store","createStore","applyMiddleware","App","ThemeProvider","CssBaseline","Boolean","hostname","match","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.873bee80.chunk.js","sourcesContent":["import {State, defaultState} from \"../state\";\n\nexport enum LoginStatusActionTypes {\n    'UPDATE_LOGIN_STATUS'='UPDATE_LOGIN_STATUS',\n    'LOGOUT'='LOGOUT',\n    'REFRESH_TOKEN'='REFRESH_TOKEN'\n}\n\n// export type LoginStatusAction =\n//     {\n//         type: typeof LoginStatusActionTypes.LOGOUT,\n//         newStatus: State['loginStatus']\n//     } |\n//     {\n//         type: typeof LoginStatusActionTypes.UPDATE_LOGIN_STATUS,\n//         newStatus: State['loginStatus']\n//     } |\n//     {\n//         type: typeof LoginStatusActionTypes.REFRESH_TOKEN,\n//         newStatus: State['loginStatus']\n//     }\n\nexport type LoginStatusAction = ReturnType<typeof logout> | ReturnType<typeof updateLoginStatus> | ReturnType<typeof refreshToken>\n\nexport function logout() {\n    return {\n        type: LoginStatusActionTypes.LOGOUT as typeof LoginStatusActionTypes.LOGOUT,\n        newStatus: defaultState.loginStatus\n    }\n}\n\nexport function updateLoginStatus(newStatus: State['loginStatus']) {\n    return {\n        type: LoginStatusActionTypes.UPDATE_LOGIN_STATUS as typeof LoginStatusActionTypes.UPDATE_LOGIN_STATUS,\n        newStatus\n    }\n}\n\nexport function refreshToken(newAccessToken: State['loginStatus']['token']['access']) {\n    return {\n        type: LoginStatusActionTypes.REFRESH_TOKEN as typeof LoginStatusActionTypes.REFRESH_TOKEN,\n        newAccessToken\n    }\n}","export interface State {\n    loginStatus: {\n        isLogin: boolean,\n        username: string,\n        token: {\n            access: string,\n            refresh: string\n        }\n    },\n    snackbar: {\n        open: boolean,\n        message: string\n    }\n}\n\nexport const defaultState: State = {\n    loginStatus: {\n        isLogin: false,\n        username: '',\n        token: {\n            access: '',\n            refresh: ''\n        }\n    },\n    snackbar: {\n        open: false,\n        message: ''\n    }\n};","import {defaultState, State} from \"../state\";\nimport {LoginStatusAction, LoginStatusActionTypes} from \"../actions/login-status\";\n\n\nfunction loginStatus(\n    state = defaultState.loginStatus,\n    action: LoginStatusAction\n): State['loginStatus'] {\n    switch (action.type) {\n        case LoginStatusActionTypes.UPDATE_LOGIN_STATUS:\n            return action.newStatus;\n        case LoginStatusActionTypes.LOGOUT:\n            return action.newStatus;\n        case LoginStatusActionTypes.REFRESH_TOKEN:\n            const newStatus = Object.assign({}, state);\n            newStatus.token.access = action.newAccessToken;\n            return newStatus;\n        default:\n            return state\n    }\n}\n\nexport default loginStatus;","export enum SnackbarActionTypes {\n    'CLOSE'='CLOSE',\n    'OPEN'='OPEN',\n}\n\nexport type SnackbarAction = ReturnType<typeof openSnackbar> | ReturnType<typeof closeSnackbar>\n\nexport function openSnackbar(message: string) {\n    return {\n        type: SnackbarActionTypes.OPEN as typeof SnackbarActionTypes.OPEN,\n        message\n    }\n}\n\nexport function closeSnackbar() {\n    return {\n        type: SnackbarActionTypes.CLOSE as typeof SnackbarActionTypes.CLOSE,\n    }\n}\n","import {defaultState, State} from \"../state\";\nimport {SnackbarAction, SnackbarActionTypes} from \"../actions/snackbar\";\n\n\nfunction snackbar (\n    state = defaultState.snackbar,\n    action: SnackbarAction\n): State['snackbar'] {\n    switch (action.type) {\n        case SnackbarActionTypes.OPEN:\n            return {\n                open: true,\n                message: action.message\n            };\n        case SnackbarActionTypes.CLOSE:\n            return defaultState.snackbar;\n        default:\n            return state\n    }\n}\n\nexport default snackbar;","import {combineReducers} from \"redux\";\nimport loginStatus from \"./login-status\";\nimport snackbar from \"./snakbar\";\n\nconst rootReducers = combineReducers({\n    loginStatus,\n    snackbar\n});\n\nexport default rootReducers;","import { createStore, applyMiddleware } from 'redux'\nimport thunkMiddleware from 'redux-thunk'\nimport rootReducers from \"./reducers/root-reducers\";\nimport {defaultState} from \"./state\";\n// import rootReducers from \"./reducers/root-reducers\";\n\nimport { createLogger } from 'redux-logger'\nconst loggerMiddleware = createLogger();\n\n\nexport default function configureStore() {\n    return createStore(\n        rootReducers,\n        defaultState,\n        // applyMiddleware(thunkMiddleware)\n        // applyMiddleware(thunkMiddleware, loggerMiddleware)\n        applyMiddleware(loggerMiddleware)\n    )\n}","import {createMuiTheme, responsiveFontSizes} from \"@material-ui/core/styles\";\n\nlet theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: '#41b3a3',\n            contrastText: '#fff',\n        },\n        secondary: {\n            main: '#e8a87c',\n            contrastText: '#fff',\n        },\n        text: {\n            primary: '#4a5568'\n        },\n        background: {\n            default: 'rgb(241, 242, 245)'\n        }\n    },\n    typography: {\n        \"fontFamily\": \"system-ui,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,Noto Sans,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol,Noto Color Emoji\",\n        \"fontSize\": 14,\n        \"fontWeightLight\": 300,\n        \"fontWeightRegular\": 400,\n        \"fontWeightMedium\": 500\n    }\n});\ntheme = responsiveFontSizes(theme);\ntheme.typography.h1 = {\n    fontFamily: [\n        'Open-sans',\n        'sans-serif',\n    ].join(','),\n    fontWeight: 800,\n    fontSize: '1.25rem',\n    [theme.breakpoints.up('md')]: {\n        fontSize: '1.5rem',\n    },\n    fontStyle: \"normal\",\n    color: \"inherit\"\n};\n\nexport default theme;","import React, {useEffect, useState} from \"react\";\n\nconst useFullHeight = (ref: React.RefObject<HTMLDivElement>) => {\n    const [height, setHeight] = useState(0);\n\n    useEffect(() => {\n        if (!ref.current) return;\n        setHeight(ref.current.getBoundingClientRect().height)\n    }, [ref]);\n\n    return height\n};\n\nexport default useFullHeight","import React, {useRef} from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Paper} from \"@material-ui/core\";\nimport useFullHeight from \"../../../utils/use-full-height\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        margin: theme.spacing(2, 0),\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'center'\n    },\n    image: {\n        width: '40%',\n        height: '100%',\n        '& img': {\n            width: '100%',\n            height: '100%',\n            objectFit: 'cover'\n        },\n        [theme.breakpoints.down('sm')]: {\n            display:'none'\n        }\n    },\n    content: {\n        width: '60%',\n        padding: theme.spacing(10, 5),\n        [theme.breakpoints.down('sm')]: {\n            width: '100%'\n        }\n    },\n    textField: {\n        width: '100%',\n        fontWeight: 700\n    },\n    link: {\n        fontWeight: 700,\n        '& a:link': {\n            color: theme.palette.primary.main\n        },\n        '& a:visited': {\n            color: theme.palette.primary.main\n        },\n        '& a:hover': {\n            color: theme.palette.secondary.main\n        }\n    }\n}));\n\ninterface LoginCommonProps {\n    imageUrl: string\n}\n\nconst LoginCommon: React.FC<LoginCommonProps> = ({children, imageUrl}) => {\n    const classes = useStyles();\n\n    const containerRef = useRef<HTMLDivElement>(null);\n    const height = useFullHeight(containerRef);\n\n    return (\n        <Paper elevation={0} className={classes.root} ref={containerRef}>\n            <div className={classes.image}>\n                <img\n                    src={process.env.PUBLIC_URL + imageUrl}\n                    alt={'login background'}\n                    style={{height: `${height}px`}}\n                    title={'login background'}\n                />\n            </div>\n            <div className={classes.content}>\n                { children }\n            </div>\n        </Paper>\n    )\n};\n\nexport default LoginCommon","import React from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Button as MuiButton} from \"@material-ui/core\";\nimport {Link} from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n    button: {\n        width: '100%',\n        backgroundColor: theme.palette.primary.main,\n        color: '#fff',\n        fontWeight: 700,\n        textTransform: 'none',\n        borderBottom: '2px solid rgba(0,0,0,0.1)',\n        borderRadius: '5px',\n        '&:hover': {\n            backgroundColor: theme.palette.secondary.main\n        },\n        '&:disabled': {\n            backgroundColor: theme.palette.secondary.main,\n            opacity: 0.7\n        }\n    }\n}));\n\ninterface ButtonProps {\n    text: string,\n    disabled: boolean,\n    form: string\n}\n\nconst FormButton: React.FC<ButtonProps> = ({text, disabled, form}) => {\n    const classes = useStyles();\n\n    return (\n        <MuiButton variant=\"contained\" classes={{root: classes.button}} disableElevation type={'submit'} form={form} disabled={disabled}>\n            { text }\n        </MuiButton>\n    )\n};\n\nexport default FormButton\n","import React, {ChangeEvent, useEffect, useState} from \"react\";\nimport {Validator} from \"./validators\";\n\ntype ChangeHandler = (e: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => void\n\nconst useInputField = (\n    defaultValue: string,\n    validator: Validator\n) => {\n    const [value, setValue] = useState(defaultValue);\n    const [error, setError] = useState(false);\n    const [errorMessage, setErrorMessage] = useState('');\n\n    const validate = (reference?: string) => {\n        const validatorResult = reference ? validator(value, reference) : validator(value);\n        setError(!validatorResult.isValid);\n        setErrorMessage(validatorResult.message);\n\n        return validatorResult.isValid as boolean\n    };\n\n    const changeHandler: ChangeHandler = (e) => {\n        if (error) setError(false);\n        setValue(e.target.value)\n    };\n\n    return [value, changeHandler, error, errorMessage, validate] as [string, ChangeHandler, boolean, string, typeof validate]\n};\n\nexport default useInputField","export type Validator = (value: string, reference?: string) => {isValid: boolean, message: string}\n\nconst usernameValidator: Validator = (value) => {\n    let isValid = true;\n    let message = '';\n\n    if (value.length >= 30) {\n        isValid = true;\n        message = 'Username length must be less than 30 characters';\n    } else if (value.length === 0) {\n        isValid = true;\n        message = 'Username cannot be empty';\n    }\n\n    return {\n        isValid,\n        message\n    }\n};\n\nconst emailValidator: Validator = (value) => {\n    let isValid = true;\n    let message = '';\n\n    if (value.indexOf('@') === -1) {\n        isValid = false;\n        message = 'Invalid Email format'\n    } else if (value.indexOf('.') === -1) {\n        isValid = false;\n        message = 'Invalid Email format'\n    } else if (value.length === 0) {\n        isValid = false;\n        message = 'Email cannot be empty';\n    } else if (value.length >= 60) {\n        isValid = false;\n        message = 'Email too long';\n    }\n\n    return {\n        isValid,\n        message\n    }\n};\n\nconst passwordValidator: Validator = (value) => {\n    let isValid = true;\n    let message = '';\n\n    if (value.length === 0) {\n        isValid = false;\n        message = 'Email cannot be empty';\n    }\n\n    return {\n        isValid,\n        message\n    }\n};\n\nconst confirmPasswordValidator: Validator = (value, reference) => {\n    let isValid = true;\n    let message = '';\n\n    if (value !== reference) {\n        message = 'Not same as the password';\n        isValid = false;\n    }\n\n    return {\n        isValid,\n        message\n    }\n};\n\nconst postTitleValidator: Validator = (value) => {\n    let isValid = true;\n    let message = '';\n\n    if (value.length === 0) {\n        message = 'Title cannot be empty';\n        isValid = false;\n    }\n\n    return {\n        isValid,\n        message\n    }\n};\n\nconst commentValidator: Validator = (value) => {\n    let isValid = true;\n    let message = '';\n\n    if (value.length === 0) {\n        message = 'Comment cannot be empty';\n        isValid = false;\n    } else if (value.length < 5) {\n        message = 'Comment needs to be at least 5 characters';\n        isValid = false;\n    }\n\n    return {\n        isValid,\n        message\n    }\n};\n\nconst execValidators = (validators: (()=>boolean)[]) => {\n    const validationResults = validators.map(_ => _());\n    for (let i=0; i<validationResults.length; i++) {\n        if (!validationResults[i]) {\n            return false\n        }\n    }\n\n    return true\n};\n\nexport {\n    usernameValidator,\n    emailValidator,\n    passwordValidator,\n    confirmPasswordValidator,\n    execValidators,\n    postTitleValidator,\n    commentValidator\n}","const base = 'https://django-api-xiaoxihome.herokuapp.com/api/discussion_board/';\n\nconst accountBase = base + 'account/';\nconst login = accountBase + 'login/';\nconst register = accountBase + 'register/';\nconst verifySession = accountBase + 'verify_session/';\nconst refresh = accountBase + 'refresh/';\n\nconst postBase = base + 'post/';\nconst getPostList = postBase + 'all/';\nconst getPostDetail = (id: number) => `${postBase}${id}/`;\nconst createPost = postBase + 'create/';\n\nconst commentBase = base + 'comment/';\nconst createComment = commentBase + 'create/';\n\nconst userActionsBase = base + 'user_actions/';\nconst like = userActionsBase + 'like/';\n\nconst urls = {\n    login,\n    register,\n    verifySession,\n    refresh,\n    getPostList,\n    getPostDetail,\n    createPost,\n    createComment,\n    like\n};\n\nexport default urls","import {useState} from \"react\";\nimport urls from \"./urls\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { useDispatch } from 'react-redux'\nimport { updateLoginStatus } from \"../redux/actions/login-status\";\nimport { openSnackbar } from \"../redux/actions/snackbar\";\n\nconst useLogin = () => {\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(false);\n    const [errorMessage, setErrorMessage] = useState('');\n    const dispatch = useDispatch();\n    let history = useHistory();\n    let location = useLocation();\n\n    const login = (\n        email: string,\n        password: string\n    ) => {\n        if (loading) return;\n\n        // reset states\n        setError(false);\n        setErrorMessage('');\n\n        // start fetching\n        setLoading(true);\n        fetch(urls.login, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                email,\n                password\n            })\n        })\n            .then((res) => res.json())\n            .then(json => {\n                setLoading(false);\n\n                if (json.status === 'success') {\n                    const username = json.data.username;\n                    dispatch(updateLoginStatus({\n                        isLogin: true,\n                        username: username,\n                        token: {\n                            access: json.data.access,\n                            refresh: json.data.refresh\n                        }\n                    }));\n                    let { from }: any = location.state || { from: { pathname: \"/\" } };\n                    history.replace(from);\n                    dispatch(openSnackbar(`Welcome back ${username}`))\n                } else {\n                    setError(true);\n                    if (json.status === 'error') {\n                        setErrorMessage(json.message)\n                    } else {\n                        setErrorMessage('Server unavailable, please try again later.')\n                    }\n                }\n            })\n            .catch(e => {\n                setLoading(false);\n\n                setError(true);\n                setErrorMessage('Server unavailable, please try again later.')\n            });\n    };\n\n    return [loading, error, errorMessage, login] as [boolean, boolean, string, typeof login]\n\n};\n\nexport default useLogin","import {Box, CircularProgress, Typography} from \"@material-ui/core\";\nimport React from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    errorMessage: {\n        fontWeight: 700,\n        color: theme.palette.error.main\n    }\n}));\n\ninterface ErrorMessageProps {\n    loading: boolean,\n    error: boolean,\n    errorMessage: string\n\n}\n\nconst ErrorMessage:React.FC<ErrorMessageProps> = ({loading, errorMessage, error}) => {\n    const classes = useStyles();\n\n    return (\n        <Typography variant={'body1'} component={'div'}>\n            <Box className={classes.errorMessage} height={40}>\n                {   loading ?\n                        <CircularProgress color=\"primary\" /> :\n                        error && errorMessage ?\n                            errorMessage :\n                            ' '\n                }\n            </Box>\n        </Typography>\n    )\n};\n\nexport default ErrorMessage","import React, {FormEvent} from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport LoginCommon from \"./commons/login-common\";\nimport {Box, CircularProgress, Divider, Grid, TextField, Typography} from \"@material-ui/core\";\nimport FormButton from \"../commons/form-button\";\nimport {Link} from \"react-router-dom\";\nimport useInputField from \"../../utils/use-input-field\";\nimport {emailValidator, execValidators, passwordValidator} from \"../../utils/validators\";\nimport useLogin from \"../../requests/useLogin\";\nimport ErrorMessage from \"../commons/error-message\";\n\nconst useStyles = makeStyles((theme) => ({\n    textField: {\n        width: '100%',\n        fontWeight: 700\n    },\n    link: {\n        fontWeight: 700,\n        '& a:link': {\n            color: theme.palette.primary.main\n        },\n        '& a:visited': {\n            color: theme.palette.primary.main\n        },\n        '& a:hover': {\n            color: theme.palette.secondary.main\n        }\n    }\n}));\n\ninterface LoginProps {\n\n}\n\nconst Login: React.FC<LoginProps> = () => {\n    const classes = useStyles();\n    const [email, setEmail, emailError, emailErrorMessage, validateEmail] = useInputField('', emailValidator);\n    const [password, setPassword, passwordError, passwordErrorMessage, validatePassword] = useInputField('', passwordValidator);\n\n    const [loading, error, errorMessage, login] = useLogin();\n\n    const submitHandler = (e: FormEvent) => {\n        e.preventDefault();\n\n        if (execValidators([validateEmail, validatePassword])) {\n            login(email, password)\n        }\n    };\n\n    return (\n        <LoginCommon imageUrl={'/images/login_bg.jpg'}>\n            <form onSubmit={submitHandler} id={'login-form'}>\n                <Grid container spacing={2}>\n                    <Grid item xs={12}>\n                        <Typography variant={'h1'} component={'h1'} color={\"textPrimary\"}>\n                            <Box textAlign={'center'}>\n                                Log In\n                            </Box>\n                        </Typography>\n                    </Grid>\n\n                    <Grid item xs={12}>\n                        <Grid container justify={'center'}>\n                            <TextField\n                                error={emailError}\n                                label=\"Email\"\n                                name=\"email\"\n                                value={email}\n                                onChange={setEmail}\n                                variant=\"outlined\"\n                                helperText={emailError ? emailErrorMessage: ' '}\n                                className={classes.textField}\n                            />\n                        </Grid>\n                    </Grid>\n\n                    <Grid item xs={12}>\n                        <Grid container justify={'center'}>\n                            <TextField\n                                error={passwordError}\n                                type=\"password\"\n                                label=\"Password\"\n                                name=\"password\"\n                                value={password}\n                                onChange={setPassword}\n                                variant=\"outlined\"\n                                helperText={passwordError ? passwordErrorMessage : ' '}\n                                className={classes.textField}\n                            />\n                        </Grid>\n                    </Grid>\n\n                    <Grid item xs={12}>\n                        <Grid container justify={'center'}>\n                            <FormButton text={'Log me in!'} form={'login-form'} disabled={loading}/>\n                        </Grid>\n                    </Grid>\n\n                    <Grid item xs={12}>\n                        <Grid container justify={'center'}>\n                            <ErrorMessage loading={loading} error={error} errorMessage={errorMessage}/>\n                        </Grid>\n                    </Grid>\n\n                    <Grid item xs={12}>\n                        <Divider />\n                    </Grid>\n\n                    <Grid item xs={12} className={classes.link}>\n                        <Grid container justify={'center'}>\n                            <Link to={'/register'}>\n                                Need an account?\n                            </Link>\n                        </Grid>\n                    </Grid>\n\n                </Grid>\n            </form>\n        </LoginCommon>\n    )\n\n};\n\nexport default Login","import {useState} from \"react\";\nimport urls from \"./urls\";\nimport {useHistory, useLocation} from \"react-router-dom\";\nimport { useDispatch } from 'react-redux'\nimport { updateLoginStatus } from \"../redux/actions/login-status\";\nimport {openSnackbar} from \"../redux/actions/snackbar\";\n\nconst useRegister = () => {\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(false);\n    const [errorMessage, setErrorMessage] = useState('');\n    const dispatch = useDispatch();\n    let history = useHistory();\n    let location = useLocation();\n\n    const register = (\n        username: string,\n        email: string,\n        password: string,\n        confirmPassword: string\n    ) => {\n        if (loading) return;\n\n        // reset states\n        setError(false);\n        setErrorMessage('');\n\n        // start fetching\n        setLoading(true);\n        fetch(urls.register, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                username,\n                email,\n                password,\n                'confirm_password': confirmPassword\n            })\n        })\n            .then((res) => res.json())\n            .then(json => {\n                setLoading(false);\n\n                if (json.status === 'success') {\n                    dispatch(updateLoginStatus({\n                        isLogin: true,\n                        username: json.data.username,\n                        token: {\n                            access: json.data.access,\n                            refresh: json.data.refresh\n                        }\n                    }));\n                    let { from }: any = location.state || { from: { pathname: \"/\" } };\n                    history.replace(from);\n\n                    dispatch(openSnackbar(`Welcome ${username}!`))\n                } else {\n                    setError(true);\n                    if (json.status === 'error') {\n                        setErrorMessage(json.message)\n                    } else {\n                        setErrorMessage('Server unavailable, please try again later.')\n                    }\n                }\n            })\n            .catch(e => {\n                setLoading(false);\n\n                setError(true);\n                setErrorMessage('Server unavailable, please try again later.')\n            });\n    };\n\n    return [loading, error, errorMessage, register] as [boolean, boolean, string, typeof register]\n\n};\n\nexport default useRegister","import React, {FormEvent} from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Box, Divider, Grid, TextField, Typography} from \"@material-ui/core\";\nimport FormButton from \"../commons/form-button\";\nimport {Link} from \"react-router-dom\";\nimport LoginCommon from \"./commons/login-common\";\nimport useInputField from \"../../utils/use-input-field\";\nimport {\n    confirmPasswordValidator,\n    emailValidator,\n    execValidators,\n    passwordValidator,\n    usernameValidator\n} from \"../../utils/validators\";\nimport ErrorMessage from \"../commons/error-message\";\nimport useRegister from \"../../requests/useRegister\";\n\nconst useStyles = makeStyles((theme) => ({\n    textField: {\n        width: '100%',\n        fontWeight: 700\n    },\n    link: {\n        fontWeight: 700,\n        '& a:link': {\n            color: theme.palette.primary.main\n        },\n        '& a:visited': {\n            color: theme.palette.primary.main\n        },\n        '& a:hover': {\n            color: theme.palette.secondary.main\n        }\n    }\n}));\n\ninterface RegisterProps {\n\n}\n\nconst Register: React.FC<RegisterProps> = () => {\n    const classes = useStyles();\n\n    const [username, setUsername, usernameError, usernameErrorMessage, validateUsername] = useInputField('', usernameValidator);\n    const [email, setEmail, emailError, emailErrorMessage, validateEmail] = useInputField('', emailValidator);\n    const [password, setPassword, passwordError, passwordErrorMessage, validatePassword] = useInputField('', passwordValidator);\n    const [confirmPassword, setConfirmPassword, confirmPasswordError, confirmPasswordErrorMessage, validateConfirmPassword] = useInputField('', confirmPasswordValidator);\n\n    const [loading, error, errorMessage, register] = useRegister();\n\n    const submitHandler = (e: FormEvent) => {\n        e.preventDefault();\n        const validationCheck1 = execValidators([validateUsername, validateEmail, validatePassword]);\n        const validationCheck2 =  validateConfirmPassword(password);\n        if (validationCheck1 && validationCheck2) {\n            register(username, email, password, confirmPassword)\n        }\n    };\n\n    const formID = 'register-form';\n\n    return (\n        <LoginCommon imageUrl={'/images/register_bg.jpg'}>\n            <form onSubmit={submitHandler} id={formID}>\n                <Grid container spacing={2}>\n                    <Grid item xs={12}>\n                        <Typography variant={'h1'} component={'h1'} color={\"textPrimary\"}>\n                            <Box textAlign={'center'}>\n                                Join Us\n                            </Box>\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Grid container justify={'center'}>\n                            <TextField\n                                error={usernameError}\n                                label=\"Username\"\n                                name=\"username\"\n                                value={username}\n                                onChange={setUsername}\n                                helperText={usernameError ? usernameErrorMessage: ' '}\n                                variant=\"outlined\"\n                                className={classes.textField}\n                            />\n                        </Grid>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Grid container justify={'center'}>\n                            <TextField\n                                error={emailError}\n                                label=\"Email\"\n                                name=\"email\"\n                                value={email}\n                                onChange={setEmail}\n                                helperText={emailError ? emailErrorMessage: ' '}\n                                variant=\"outlined\"\n                                className={classes.textField}\n                            />\n                        </Grid>\n                    </Grid>\n                    <Grid item xs={12} md={6}>\n                        <Grid container justify={'center'}>\n                            <TextField\n                                error={passwordError}\n                                label=\"Password\"\n                                name=\"password\"\n                                type=\"password\"\n                                value={password}\n                                onChange={setPassword}\n                                helperText={passwordError ? passwordErrorMessage: ' '}\n                                variant=\"outlined\"\n                                className={classes.textField}\n                            />\n                        </Grid>\n                    </Grid>\n                    <Grid item xs={12} md={6}>\n                        <Grid container justify={'center'}>\n                            <TextField\n                                error={confirmPasswordError}\n                                label=\"Confirm Password\"\n                                name=\"confirm-password\"\n                                type=\"password\"\n                                value={confirmPassword}\n                                onChange={setConfirmPassword}\n                                helperText={confirmPasswordError ? confirmPasswordErrorMessage: ' '}\n                                variant=\"outlined\"\n                                className={classes.textField}\n                            />\n                        </Grid>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Grid container justify={'center'}>\n                            <FormButton text={'I\\'m in!'} form={formID} disabled={false}/>\n                        </Grid>\n                    </Grid>\n\n                    <Grid item xs={12}>\n                        <Grid container justify={'center'}>\n                            <ErrorMessage loading={loading} error={error} errorMessage={errorMessage}/>\n                        </Grid>\n                    </Grid>\n\n                    <Grid item xs={12}>\n                        <Divider />\n                    </Grid>\n                    <Grid item xs={12} className={classes.link}>\n                        <Grid container justify={'center'}>\n                            <Link to={'/login'}>\n                                Already have an account?\n                            </Link>\n                        </Grid>\n                    </Grid>\n\n                </Grid>\n            </form>\n        </LoginCommon>\n    )\n};\n\nexport default Register","import React from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Button as MuiButton} from \"@material-ui/core\";\nimport {Link, useLocation} from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n    button: {\n        backgroundColor: 'rgba(255,255,255,0.3)',\n        color: '#fff',\n        fontWeight: 700,\n        textTransform: 'capitalize',\n        letterSpacing: 'inherit',\n        borderBottom: '2px solid rgba(0,0,0,0.1)',\n        borderRadius: '5px',\n        // margin: '0 4px',\n        padding: '4px 10px',\n        '&:hover': {\n            backgroundColor: theme.palette.secondary.main\n        }\n    }\n}));\n\ninterface ButtonProps {\n    text: string,\n    url?: string,\n    onClick?: () => void\n}\n\nconst ThemeButton: React.FC<ButtonProps> = ({text, url, onClick}) => {\n    const classes = useStyles();\n    const location = useLocation();\n\n    if (url) {\n        const to = {\n            pathname: url,\n            state: {\n                from: location.pathname\n            }\n        };\n        return (\n            <MuiButton variant=\"contained\" classes={{root: classes.button}} disableElevation component={Link} to={to}>\n                { text }\n            </MuiButton>\n        )\n    } else {\n        return (\n            <MuiButton variant=\"contained\" classes={{root: classes.button}} disableElevation onClick={onClick}>\n                { text }\n            </MuiButton>\n        )\n    }\n};\n\nexport default ThemeButton\n","import {useState} from \"react\";\nimport urls from \"./urls\";\nimport {useHistory, useLocation} from \"react-router-dom\";\nimport { useDispatch } from 'react-redux'\nimport {logout as logoutAction} from \"../redux/actions/login-status\";\nimport {openSnackbar} from \"../redux/actions/snackbar\";\n\nconst useLogout = () => {\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(false);\n    const [errorMessage, setErrorMessage] = useState('');\n    const dispatch = useDispatch();\n    let history = useHistory();\n    let location = useLocation();\n\n    const clientSideLogout = () => {\n        dispatch(logoutAction());\n        let { from }: any = location.state || { from: { pathname: \"/\" } };\n        history.replace(from);\n\n        dispatch(openSnackbar('Logout succeeded'))\n    };\n\n    const logout = () => {\n        clientSideLogout()\n    };\n\n    return [loading, error, errorMessage, logout] as [boolean, boolean, string, typeof logout]\n\n};\n\nexport default useLogout","import ThemeButton from \"../commons/theme-button\";\nimport React from \"react\";\nimport {Box, CircularProgress, Grid, Typography} from \"@material-ui/core\";\nimport useLogout from \"../../requests/useLogout\";\n\ninterface LoggedInUserPanelProps {\n    username: string\n}\n\nconst LoggedInUserPanel: React.FC<LoggedInUserPanelProps> = ({username}) => {\n    const [loading, error, errorMessage, logout] = useLogout();\n\n    return (\n        <Grid container alignItems={\"center\"} justify={\"center\"} spacing={1}>\n            <Grid item>\n                <Typography component={'div'}>\n                    <Box>\n                        { username }\n                    </Box>\n                </Typography>\n            </Grid>\n            <Grid item>\n                {\n                    loading ?\n                        <CircularProgress color=\"secondary\" size={'1rem'}/> :\n                        <ThemeButton text={'Logout'} onClick={logout}/>\n                }\n            </Grid>\n        </Grid>\n    )\n};\n\nexport default LoggedInUserPanel","import ThemeButton from \"../commons/theme-button\";\nimport React from \"react\";\nimport {Grid} from \"@material-ui/core\";\n\nconst AnonymousUserPanel: React.FC = () => {\n    return (\n        <Grid container alignItems={\"center\"} justify={\"center\"} spacing={1}>\n            <Grid item>\n                <ThemeButton text={'Join'} url={'/register'}/>\n            </Grid>\n            <Grid item>\n                <ThemeButton text={'Login'} url={'/login'}/>\n            </Grid>\n        </Grid>\n    )\n};\n\nexport default AnonymousUserPanel","import {Box, Typography} from \"@material-ui/core\";\nimport {Link} from \"react-router-dom\";\nimport React from \"react\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        fontFamily: [\n            'Oleo Script Swash Caps',\n            'sans-serif',\n        ].join(','),\n        fontWeight: 700,\n        fontSize: '1.5rem',\n        [theme.breakpoints.up('md')]: {\n            fontSize: '1.75rem',\n        },\n        fontStyle: \"normal\",\n        color: \"#fff\",\n        whiteSpace: 'nowrap'\n    }\n}));\n\nconst Logo: React.FC = () => {\n    const classes = useStyles();\n\n    return (\n        <Typography variant={'h1'} component={'h1'} className={classes.root}>\n            <Box fontWeight={700} textAlign={\"center\"}>\n                <Link to={'/'}>\n                    Blog | XiaoxiHome\n                </Link>\n            </Box>\n        </Typography>\n    )\n};\n\nexport default Logo","import React, {useContext} from 'react';\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Box, Grid, Typography} from \"@material-ui/core\";\nimport {Link} from \"react-router-dom\";\nimport LoggedInUserPanel from \"./logged-in-user-panel\";\nimport AnonymousUserPanel from \"./anonymous-user-panel\";\nimport Logo from \"../commons/logo\";\n\ninterface HeaderProps {\n    isLogin: boolean,\n    username: string,\n}\n\nconst useStyles = makeStyles((theme) => ({\n    headerDimension: {\n        width: '100%',\n        height: '80px',\n    },\n    root: {\n        backgroundColor: theme.palette.primary.main,\n        position: 'fixed',\n        zIndex: theme.zIndex.appBar,\n        left: 0,\n        top: 0,\n        color: theme.palette.primary.contrastText,\n        padding: theme.spacing(0, 1)\n    },\n    placeholder: {\n        position: 'relative',\n    },\n    button: {\n        backgroundColor: 'rgba(255,255,255,0.5)',\n        color: '#fff',\n        fontWeight: 700,\n        textTransform: 'capitalize',\n        '&:hover': {\n            backgroundColor: theme.palette.secondary.main\n        }\n    }\n}));\n\n\nconst Header: React.FC<HeaderProps> = ({isLogin, username}) => {\n    const classes = useStyles();\n\n    return (\n        <header className={`${classes.placeholder} ${classes.headerDimension}`}>\n            <Grid container alignItems={\"center\"} justify={\"center\"} className={`${classes.root} ${classes.headerDimension}`}>\n                <Grid item xs={6} md={4}>\n                    <Logo/>\n                </Grid>\n                <Grid item xs={1} md={4}>\n\n                </Grid>\n                <Grid item xs={5} md={4}>\n                    {\n                        isLogin ?\n                            <LoggedInUserPanel username={username}/> :\n                            <AnonymousUserPanel />\n                    }\n                </Grid>\n            </Grid>\n        </header>\n    )\n};\n\n\n\nexport default Header;\n","import {connect} from \"react-redux\";\nimport Header from \"../components/header/header\";\nimport {State} from \"../redux/state\";\n\nfunction mapStateToProps(state: State) {\n    return {\n        isLogin: state.loginStatus.isLogin,\n        username: state.loginStatus.username\n    }\n}\n\nconst HeaderContainer = connect(\n    mapStateToProps\n)(Header);\n\nexport default HeaderContainer;\n","import {useStore} from \"react-redux\";\nimport {State} from \"../redux/state\";\n\nconst useGetAuthorizationHeader = () => {\n    const state = useStore<State>().getState();\n    const accessToken = state.loginStatus.token.access;\n\n    const accessHeader = {\n        'Authorization': `Bearer ${accessToken}`\n    };\n\n    return accessHeader\n};\n\nexport default useGetAuthorizationHeader","import urls from \"./urls\";\nimport {useDispatch, useStore} from 'react-redux'\nimport useGetAuthorizationHeader from \"./useGetAuthorizationHeader\";\nimport { refreshToken as refreshTokenAction } from '../redux/actions/login-status'\nimport {State} from \"../redux/state\";\n\nconst useVerifyToken = () => {\n    const state = useStore<State>().getState();\n    const isLogin = state.loginStatus.isLogin;\n    const refreshToken = state.loginStatus.token.access;\n\n    const accessHeader = useGetAuthorizationHeader();\n    const dispatch = useDispatch();\n\n    const validate = () => {\n        return new Promise<boolean>(async (resolve, reject) => {\n            try {\n                // not login\n                if (!isLogin) {\n                    resolve(false);\n                    return\n                }\n\n                // verify if access token still valid\n                const res = await fetch(urls.verifySession, {\n                            method: 'POST',\n                            headers: {\n                                'Content-Type': 'application/json',\n                                ...accessHeader\n                            }\n                });\n                const json = await res.json();\n                if (json.status === 'success') {\n                    // access token still valid\n                    resolve(true);\n                    return\n                }\n\n                // access token not valid\n                // try refresh\n                const refreshRes = await fetch(urls.refresh, {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json',\n                    },\n                    body: JSON.stringify({\n                        refresh: refreshToken\n                    })\n                });\n                const refreshJson = await refreshRes.json();\n                if (refreshJson.status === 'success') {\n                    // refresh successful\n                    dispatch(refreshTokenAction(refreshJson.data.access));\n                    resolve(true);\n                    return\n                }\n\n                // refresh failed\n                resolve(false);\n\n            } catch (e) {\n                console.log(e);\n                resolve(false)\n            }\n        });\n    };\n\n    return validate\n\n};\n\nexport default useVerifyToken","import {useEffect, useState} from \"react\";\nimport urls from \"./urls\";\nimport {PostData} from \"../components/post-list/post\";\nimport {useStore} from \"react-redux\";\nimport {State} from \"../redux/state\";\nimport useGetAuthorizationHeader from \"./useGetAuthorizationHeader\";\nimport useVerifyToken from \"./useVerifyToken\";\n\nconst useGetPostList = () => {\n    const isLogin = useStore<State>().getState().loginStatus.isLogin;\n    const accessHeader = useGetAuthorizationHeader();\n    const validateToken = useVerifyToken();\n\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(false);\n    const [data, setData] = useState<PostData[] | null>(null);\n\n    useEffect(() => {\n        fetchPostList()\n    }, [isLogin]);\n\n    const fetchPostList = async (\n    ) => {\n        try {\n            if (loading) return;\n\n            // reset states\n            setError(false);\n\n            // validate token if logged in\n            let hasValidToken = false;\n            if (isLogin) {\n                hasValidToken  = await validateToken()\n            }\n\n            // start fetching\n            setLoading(true);\n            const res = await fetch(urls.getPostList, {\n                method: 'GET',\n                headers: hasValidToken ? {...accessHeader} : {}\n            });\n            const json = await res.json();\n            setLoading(false);\n            console.log(json);\n\n            if (json.status === 'success') {\n                console.log(json.data);\n                setData(json.data)\n            } else {\n                console.log(json);\n                setError(true);\n            }\n        } catch (e) {\n            setLoading(false);\n            console.log(e);\n            setError(true);\n        }\n    };\n\n    return [loading, error, data] as [typeof loading, typeof error, typeof data]\n\n};\n\nexport default useGetPostList","const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n\nconst getTimeString = (ISOString: string) => {\n    const date = new Date(ISOString);\n    const hour = date.getHours() < 10 ? `0${date.getHours()}` : date.getHours();\n    const minute = date.getMinutes() < 10 ? `0${date.getMinutes()}` : date.getMinutes();\n    return `${date.getDate()} ${months[date.getMonth()]}, ${date.getFullYear()} - ${hour}:${minute}`\n};\n\nexport default getTimeString","import {useHistory, useLocation} from \"react-router-dom\";\n\nconst useRedirectToLogin = () => {\n    const history = useHistory();\n    const location = useLocation();\n\n    const redirectToLogin = () => {\n        history.push({\n            pathname: \"/login\",\n            state: {\n                from: location.pathname\n            }\n        });\n    };\n\n    return redirectToLogin\n};\n\nexport default useRedirectToLogin","import useGetAuthorizationHeader from \"./useGetAuthorizationHeader\";\nimport useVerifyToken from \"./useVerifyToken\";\nimport {useState} from \"react\";\nimport {useDispatch} from \"react-redux\";\nimport urls from \"./urls\";\nimport {openSnackbar} from \"../redux/actions/snackbar\";\nimport {PostData} from \"../components/post-list/post\";\nimport useRedirectToLogin from \"../utils/use-redirect-to-login\";\n\ntype Type = 'post' | 'comment';\ntype Action = 1 | 0 | -1;\n\nconst useLike = (type: Type, id: string) => {\n    const accessHeader = useGetAuthorizationHeader();\n    const validateToken = useVerifyToken();\n\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(false);\n    const [updatedData, setUpdatedData] = useState<PostData | null>(null);\n    const dispatch = useDispatch();\n    const redirectToLogin = useRedirectToLogin();\n\n    const like = async (\n        action: Action\n    ) => {\n        try {\n            console.log(JSON.stringify({\n                \"target_type\": type,\n                \"target_id\": id,\n                action\n            }));\n            if (loading) return;\n\n            // reset states\n            setError(false);\n            setLoading(true);\n\n            // redirect to login if token not valid\n            const isTokenValid = await validateToken();\n            if (!isTokenValid) {\n                setLoading(false);\n                redirectToLogin();\n                return\n            }\n\n            //\n            const res = await fetch(urls.like, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    ...accessHeader\n                },\n                body: JSON.stringify({\n                    \"target_type\": type,\n                    \"target_id\": id,\n                    action\n                })\n            });\n            const json = await res.json();\n            setLoading(false);\n            if (json.status === 'success') {\n                setUpdatedData(json.data)\n            } else {\n                dispatch(openSnackbar(json.message));\n                setError(true)\n            }\n        } catch (e) {\n            console.log(e);\n            setLoading(false);\n            setError(true);\n            dispatch(openSnackbar('Server is not available please try again later'));\n        }\n    };\n\n    return [loading, error, updatedData, like] as [typeof loading, typeof error, typeof updatedData, typeof like]\n};\n\nexport default useLike","import IconButton from \"@material-ui/core/IconButton\";\nimport ThumbUpRoundedIcon from \"@material-ui/icons/ThumbUpRounded\";\nimport green from \"@material-ui/core/colors/green\";\nimport ThumbDownRoundedIcon from \"@material-ui/icons/ThumbDownRounded\";\nimport red from \"@material-ui/core/colors/red\";\nimport React from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport useLike from \"../../requests/useLike\";\n\nconst useStyles = makeStyles((theme) => ({\n    likeButtons: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'center',\n        marginLeft: '-14px'\n    },\n    buttonText: {\n        lineHeight: 1,\n        color: theme.palette.grey[\"500\"],\n        fontSize: '0.875rem',\n        fontWeight: 700,\n    },\n    button: {\n        color: theme.palette.grey[\"400\"],\n        fontSize: '1.25rem'\n    },\n}));\n\ninterface LikeButtonsProps {\n    type: 'post' | 'comment',\n    id: string\n    likes: number,\n    dislikes: number,\n    isLiked: 0 | 1 | -1 | undefined\n}\n\nconst LikeButtons: React.FC<LikeButtonsProps> = ({type, id, likes, dislikes, isLiked}) => {\n    const classes = useStyles();\n\n    const [likeLoading, likeError, updatedData, like] = useLike(type, id);\n    if (updatedData !== null) {\n        likes = updatedData.likes;\n        dislikes = updatedData.dislikes;\n        if (updatedData['is_liked'] !== undefined) {\n            isLiked = updatedData['is_liked']\n        }\n    }\n\n    const likedByUser = isLiked === 1;\n    const dislikedByUser = isLiked === -1;\n\n    const likeToggler = () => {\n        likedByUser ? like(0) : like(1);\n    };\n\n    const dislikeToggler = () => {\n        dislikedByUser ? like(0) : like(-1);\n    };\n\n    return (\n        <div className={classes.likeButtons}>\n            <IconButton aria-label={`like ${type}`} disabled={likeLoading} onClick={likeToggler}>\n                <ThumbUpRoundedIcon className={classes.button} style={likedByUser ? {color: green[300]} : {}}/>\n            </IconButton>\n            <div className={classes.buttonText}>\n                { likes }\n            </div>\n            <IconButton aria-label={`dislike ${type}`} disabled={likeLoading} onClick={dislikeToggler}>\n                <ThumbDownRoundedIcon className={classes.button} style={dislikedByUser ? {color: red[300]} : {}}/>\n            </IconButton>\n            <div className={classes.buttonText}>\n                { dislikes }\n            </div>\n        </div>\n    )\n};\n\nexport default LikeButtons","import React, {useEffect} from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Box, Paper, Typography} from \"@material-ui/core\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ThumbUpRoundedIcon from '@material-ui/icons/ThumbUpRounded';\nimport ThumbDownRoundedIcon from '@material-ui/icons/ThumbDownRounded';\nimport useLike from \"../../requests/useLike\";\nimport red from '@material-ui/core/colors/red';\nimport green from '@material-ui/core/colors/green';\nimport {Link} from \"react-router-dom\";\nimport getTimeString from \"../../utils/get-time-string\";\nimport LikeButtons from \"../commons/like-buttons\";\n\nexport interface PostData {\n    id: string\n    title: string,\n    content: string,\n    likes: number,\n    dislikes: number,\n    created: string,\n    comments: number\n    owner: {\n        email: string,\n        username: string\n    },\n    \"is_liked\"?: 0 | 1 | -1\n}\n\ninterface PostProps {\n    isLogin: boolean,\n    data: PostData\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        margin: theme.spacing(1, 0)\n    },\n    paper: {\n        width: '100%',\n        minHeight: '100px',\n        padding: theme.spacing(2),\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'flex-start'\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.primary.light\n    },\n    content: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'flex-start',\n        justifyContent: 'center',\n    },\n    title: {\n        margin: theme.spacing(0, 2),\n        '& h2': {\n            fontSize: '1.25rem',\n            fontWeight: 700,\n            color: theme.palette.text.primary,\n            margin: theme.spacing(0),\n            lineHeight: 1.2\n        },\n        '& h2:hover': {\n            color: theme.palette.primary.main,\n        }\n    },\n    author: {\n        margin: theme.spacing(0, 2),\n    },\n    actionArea: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'flex-start',\n        color: theme.palette.grey[\"500\"],\n        fontSize: '0.875rem',\n        fontWeight: 700,\n        [theme.breakpoints.down('md')]: {\n            flexDirection: 'column',\n            alignItems: 'flex-start',\n            justifyContent: 'center',\n        }\n    },\n    actionItem: {\n        margin: theme.spacing(0, 2)\n    }\n}));\n\nconst Post: React.FC<PostProps> = ({isLogin, data}) => {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <Paper className={classes.paper} elevation={0}>\n                <Avatar variant=\"rounded\" className={classes.avatar}>\n                    { data.owner.username.charAt(0) }\n                </Avatar>\n                <div className={classes.content}>\n                    <div className={classes.title}>\n                        <Link to={`/post/${data.id}`}>\n                            <h2>\n                                { data.title }\n                            </h2>\n                        </Link>\n                    </div>\n                    <div className={classes.author}>\n                        <Typography variant={'caption'} component={'div'}>\n                            <Box>\n                                { data.owner.username }\n                            </Box>\n                        </Typography>\n                    </div>\n                    <div className={classes.actionArea}>\n                        <div className={classes.actionItem}>\n                            <LikeButtons type={'post'} id={data.id} likes={data.likes} dislikes={data.dislikes} isLiked={data.is_liked}/>\n                        </div>\n                        <div className={classes.actionItem}>\n                            { `${data.comments} ${data.comments > 1 ? 'comments' : 'comment'}` }\n                        </div>\n                        <div className={classes.actionItem}>\n                            { getTimeString(data.created) }\n                        </div>\n                    </div>\n                </div>\n            </Paper>\n        </div>\n    )\n};\n\nexport default Post","import React from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport useGetPostList from \"../../requests/useGetPostList\";\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport {Box, CircularProgress, Typography} from \"@material-ui/core\";\nimport Post, {PostData} from \"./post\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        // padding: theme.spacing(0, 2)\n    }\n}));\n\ninterface PostListProps {\n    isLogin: boolean\n}\n\nconst PostList: React.FC<PostListProps> = ({isLogin}) => {\n    const classes = useStyles();\n\n    const [loading, error, data] = useGetPostList();\n\n    let content;\n    if (loading) {\n        content = (new Array(10)).fill(0).map((_, i) => {\n                return (\n                    <Box width='100%' my={2} key={i}>\n                        <Skeleton variant=\"rect\" animation=\"wave\" width={'100%'} height={100}/>\n                    </Box>\n                )\n            })\n    } else if (error) {\n        content = (\n            <Typography variant={'body1'} component={'h2'}>\n                <Box fontWeight={700} color={'primary.main'} textAlign={'center'}>\n                    Server is unavailable now, please try again later\n                </Box>\n            </Typography>\n        )\n    } else {\n        content = data?.map((_, i) => {\n            return (\n                <Post key={i} isLogin={isLogin} data={_}/>\n            )\n        })\n    }\n\n    return (\n        <div className={classes.root}>\n            { content }\n        </div>\n    )\n};\n\nexport default PostList","import {connect} from \"react-redux\";\nimport {State} from \"../redux/state\";\nimport PostList from \"../components/post-list/post-list\";\n\nfunction mapStateToProps(state: State) {\n    return {\n        isLogin: state.loginStatus.isLogin\n    }\n}\n\n// function mapDispatchToProps(dispatch: Dispatch) {\n//     return {\n//         closeSnackbar: () => dispatch(closeSnackbar())\n//     }\n// }\n\nconst PostListContainer = connect(\n    mapStateToProps\n)(PostList);\n\nexport default PostListContainer;\n","import {Button} from \"@material-ui/core\";\nimport React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\n\nconst useStyles = makeStyles((theme) => ({\n    button: {\n        backgroundColor: theme.palette.primary.light,\n        maxWidth: '100%',\n        color: '#fff',\n        fontWeight: 700,\n        textTransform: 'capitalize',\n        letterSpacing: 'inherit',\n        borderBottom: '2px solid rgba(0,0,0,0.1)',\n        borderRadius: '5px',\n        padding: '4px 10px',\n        '& span': {\n            color: '#fff',\n        },\n        '&:hover': {\n            backgroundColor: theme.palette.secondary.main\n        }\n    }\n}));\n\ninterface BaseButtonProps {\n    width: string,\n    text: string\n}\n\ninterface GenericClickButtonProps extends BaseButtonProps {\n    onClick: any,\n    disabled?: boolean\n}\n\nconst GenericClickButton: React.FC<GenericClickButtonProps> = ({width, text, onClick, disabled}) => {\n    const classes = useStyles();\n\n    return (\n            <Button variant=\"contained\" classes={{root: classes.button}} disableElevation onClick={onClick} style={{width: width}} disabled={disabled}>\n                { text }\n            </Button>\n    )\n};\n\ninterface GenericLinkButtonProps extends BaseButtonProps {\n    link: string\n}\n\nconst GenericLinkButton: React.FC<GenericLinkButtonProps> = ({width, text, link}) => {\n    const classes = useStyles();\n\n    return (\n        <Button variant=\"contained\" classes={{root: classes.button}} disableElevation component={Link} to={link} style={{width: width}}>\n            { text }\n        </Button>\n    )\n};\n\nexport {GenericClickButton, GenericLinkButton};","import React from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport {GenericLinkButton} from \"../commons/generic-button\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: 'calc(100% - 16px)',\n        minHeight: '100px',\n        margin: '8px',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        [theme.breakpoints.down('md')]: {\n            width: '100%',\n            margin: '8px 0',\n        }\n    }\n}));\n\nconst SideBar: React.FC = () => {\n    const classes = useStyles();\n\n    return (\n        <Paper className={classes.root} elevation={0}>\n            <GenericLinkButton link={'/edit-post'} width={'80%'} text={'Create Post'}/>\n        </Paper>\n    )\n};\n\nexport default SideBar","import React from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport PostListContainer from \"../../containers/post-list-container\";\nimport SideBar from \"../side-bar/side-bar\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        margin: theme.spacing(2, 0),\n        width: '100%',\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'flex-start',\n        justifyContent: 'center',\n        [theme.breakpoints.down('md')]: {\n            flexDirection: 'column',\n        }\n    },\n    left: {\n        width: \"75%\",\n        [theme.breakpoints.down('md')]: {\n            width: \"100%\",\n        }\n    },\n    right: {\n        width: \"25%\",\n        [theme.breakpoints.down('md')]: {\n            width: \"100%\",\n        }\n    }\n}));\n\ninterface MainPageProps {\n\n}\n\nconst MainPage: React.FC<MainPageProps> = () => {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.left}>\n                <PostListContainer />\n            </div>\n            <div className={classes.right}>\n                <SideBar />\n            </div>\n        </div>\n    )\n};\n\nexport default MainPage","import React from \"react\";\nimport {\n    Box,\n    createStyles,\n    IconButton,\n    Snackbar as MuiSnackbar,\n    SnackbarContent,\n} from \"@material-ui/core\";\nimport Close from '@material-ui/icons/Close';\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles(() => createStyles({\n    root: {\n\n    },\n    content: {\n        backgroundColor: '#4a5568',\n    },\n}));\n\ninterface SnackbarProps {\n    open: boolean,\n    closeSnackbar: () => void,\n    message: string\n}\n\nconst Snackbar: React.FC<SnackbarProps> = ({open, closeSnackbar, message}) => {\n    const classes = useStyles();\n\n    return (\n        <MuiSnackbar\n            anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'center',\n            }}\n            open={open}\n            autoHideDuration={5000}\n            onClose={closeSnackbar}\n            className={classes.root}\n        >\n            <SnackbarContent\n                className={classes.content}\n                message={\n                    <Typography variant={'body1'} component={'div'}>\n                        <Box fontWeight={700}>\n                            { message }\n                        </Box>\n                    </Typography>\n                }\n                action={[\n                    <IconButton key=\"close\" aria-label=\"close\" color=\"inherit\" onClick={closeSnackbar}>\n                        <Close/>\n                    </IconButton>\n                ]}\n            />\n        </MuiSnackbar>\n    )\n};\n\nexport default Snackbar;","import {connect} from \"react-redux\";\nimport Snackbar from \"../components/snackbar/snackbar\";\nimport {State} from \"../redux/state\";\nimport {Dispatch} from \"redux\";\nimport {closeSnackbar} from \"../redux/actions/snackbar\";\n\nfunction mapStateToProps(state: State) {\n    return {\n        open: state.snackbar.open,\n        message: state.snackbar.message\n    }\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch) {\n    return {\n        closeSnackbar: () => dispatch(closeSnackbar())\n    }\n}\n\nconst SnackbarContainer = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Snackbar);\n\nexport default SnackbarContainer;\n","import React from \"react\";\nimport {Box, Grid, Paper, Typography} from \"@material-ui/core\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Logo from \"../commons/logo\";\nimport {Link} from \"react-router-dom\";\n\ntype FooterColumnData = {\n    title: string,\n    url: string\n}[]\n\ninterface FooterColumnProps {\n    data: FooterColumnData\n}\n\nconst userStyles = makeStyles((theme) => ({\n    root: {\n        listStyleType: 'none',\n        margin: 0,\n        padding: 0\n    },\n    header: {\n        fontSize: '1.25rem',\n        margin: '8px 0',\n        letterSpacing: '0',\n        fontWeight: 700\n    },\n    content: {\n        fontSize: '0.875rem',\n        padding: '2px',\n        '&:hover': {\n            color: theme.palette.secondary.main\n        }\n    }\n}));\n\nconst FooterColumn: React.FC<FooterColumnProps> = ({data}) => {\n    const classes = userStyles();\n\n    return (\n        <ul className={classes.root}>\n            {\n                data.map((item, i) => {\n                    if (i === 0) {\n                        return (\n                            <li key={i}>\n                                <div className={classes.header}>\n                                    { item.title }\n                                </div>\n                            </li>\n                        )\n                    } else {\n                        return (\n                            <li key={i}>\n                                <a href={item.url} target=\"_blank\" rel=\"noopener noreferrer\">\n                                    <div className={classes.content}>\n                                        { item.title }\n                                    </div>\n                                </a>\n                            </li>\n                            )\n                    }\n                })\n            }\n        </ul>\n    )\n};\n\nexport default FooterColumn","import React from \"react\";\nimport {Grid, Paper} from \"@material-ui/core\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Logo from \"../commons/logo\";\nimport FooterColumn from \"./footer-column\";\n\nconst column1 = [\n    {\n        title: 'Learn More',\n        url: ''\n    },\n    {\n        title: 'API Endpoints',\n        url: 'https://www.google.ca/'\n    },\n    {\n        title: 'GitHub',\n        url: 'https://github.com/CptDoraemon/discussion-board-client'\n    },\n    {\n        title: 'XiaoxiHome',\n        url: 'https://www.xiaoxihome.com/'\n    },\n];\n\nconst userStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        margin: '40px 0 8px 0'\n    },\n    paper: {\n        width: '100%',\n        backgroundColor: '#4a5568',\n        color: '#a0aec0',\n        padding: theme.spacing(5)\n    },\n    copyright: {\n        width: '100%',\n        margin: theme.spacing(5, 0, 0, 0),\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'center',\n        fontSize: '0.8rem'\n    }\n}));\n\nconst Footer: React.FC = () => {\n    const classes = userStyles();\n\n    return (\n        <footer className={classes.root}>\n            <Paper className={classes.paper}>\n                <Grid container spacing={5}>\n                    <Grid item>\n                        <Logo/>\n                    </Grid>\n                    <Grid item>\n                        <FooterColumn data={column1} />\n                    </Grid>\n                </Grid>\n                <div className={classes.copyright}>\n                    <div>\n                        © 2020 XiaoxiHome.com\n                    </div>\n                </div>\n            </Paper>\n        </footer>\n    )\n};\n\nexport default Footer","import {\n    Route,\n    Redirect\n} from \"react-router-dom\";\nimport React from \"react\";\n\ninterface PrivateRouteProps {\n    isLogin: boolean,\n    path: string\n}\n\nconst PrivateRoute: React.FC<PrivateRouteProps> = ({ children, isLogin, ...rest}) => {\n    return (\n        <Route\n            {...rest}\n            render={({ location }) =>\n                isLogin ? (\n                    children\n                ) : (\n                    <Redirect\n                        to={{\n                            pathname: \"/login\",\n                            state: { from: location }\n                        }}\n                    />\n                )\n            }\n        />\n    );\n};\n\nexport default PrivateRoute","import {useState} from \"react\";\nimport urls from \"./urls\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { useDispatch } from 'react-redux'\nimport { updateLoginStatus } from \"../redux/actions/login-status\";\nimport { openSnackbar } from \"../redux/actions/snackbar\";\nimport useGetAuthorizationHeader from \"./useGetAuthorizationHeader\";\nimport useVerifyToken from \"./useVerifyToken\";\nimport useRedirectToLogin from \"../utils/use-redirect-to-login\";\n\nconst usePostSubmission = () => {\n    const accessHeader = useGetAuthorizationHeader();\n    const validateToken = useVerifyToken();\n\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(false);\n    const [errorMessage, setErrorMessage] = useState('');\n    const [submitted, setSubmitted] = useState(false);\n    const redirectToLogin = useRedirectToLogin();\n\n    const submit = async (\n        title: string,\n        content: string\n    ) => {\n        try {\n            if (loading || submitted) return;\n\n            // reset states\n            setError(false);\n            setErrorMessage(' ');\n            setLoading(true);\n\n            // redirect to login if token not valid\n            const isTokenValid = await validateToken();\n            if (!isTokenValid) {\n                setLoading(false);\n                redirectToLogin();\n                return\n            }\n\n            //\n            const res = await fetch(urls.createPost, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    ...accessHeader\n                },\n                body: JSON.stringify({\n                    title,\n                    content\n                })\n            });\n            const json = await res.json();\n            setLoading(false);\n            if (json.status === 'success') {\n                console.log(json)\n                setSubmitted(true)\n            } else {\n                setErrorMessage(json.message);\n                setError(true)\n            }\n        } catch (e) {\n            console.log(e);\n            setLoading(false);\n            setErrorMessage('Server is not available please try again later');\n            setError(true)\n        }\n    };\n\n    return [loading, error, errorMessage, submit, submitted] as [typeof loading, typeof error, typeof errorMessage, typeof submit, typeof submitted]\n};\n\nexport default usePostSubmission","import React, {FormEvent, useEffect, useState} from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Quill from 'quill'\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport 'quill/dist/quill.snow.css';\nimport {FormControl, FormHelperText, Input, InputLabel, Paper} from \"@material-ui/core\";\nimport useInputField from \"../../utils/use-input-field\";\nimport {postTitleValidator} from \"../../utils/validators\";\nimport {GenericClickButton} from \"../commons/generic-button\";\nimport usePostSubmission from \"../../requests/usePostSubmission\";\nimport ErrorMessage from \"../commons/error-message\";\n\nconst ID = 'editor';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        padding: theme.spacing(2)\n    },\n    editor: {\n        width: '100%',\n        minHeight: '300px',\n        marginBottom: '16px',\n    },\n    title: {\n        width: '100%',\n    }\n}));\n\nconst PostEditor: React.FC = () => {\n    const classes = useStyles();\n    const {postID} = useParams();\n\n    const [quill, setQuill] = useState<any>(null);\n    const [title, titleChangeHandler, titleError, titleErrorMessage, validateTitle] = useInputField('', postTitleValidator);\n    const [loading, error, errorMessage, submit, submitted] = usePostSubmission();\n\n    const submitHandler = (e: FormEvent) => {\n        e.preventDefault();\n        if (!validateTitle()) return;\n\n        submit(title, quill.root.innerHTML)\n    };\n\n    useEffect(() => {\n        const quillInstance = new Quill(`#${ID}`, {\n            modules: {\n                toolbar: [\n                    [{header: [1, 2, false]}],\n                    ['bold', 'italic', 'underline'],\n                    ['image', 'code-block']\n                ]\n            },\n            placeholder: 'Compose an epic...',\n            theme: 'snow'  // or 'bubble'\n        });\n\n        setQuill(quillInstance)\n    }, []);\n\n    return (\n        <Paper className={classes.root} elevation={0}>\n\n            <form>\n                <FormControl className={classes.title}>\n                    <InputLabel htmlFor=\"post-editor-title\">Title</InputLabel>\n                    <Input\n                        id=\"post-editor-title\"\n                        aria-describedby=\"post-editor-title-helper-text\"\n                        value={title}\n                        onChange={titleChangeHandler}\n                    />\n                    <FormHelperText id=\"post-editor-title-helper-text\" error={titleError}>{titleError && titleErrorMessage ? titleErrorMessage : ' '}</FormHelperText>\n                </FormControl>\n\n                <div id={ID} className={classes.editor}/>\n                <GenericClickButton onClick={submitHandler} width={'250px'} text={submitted ? 'Submitted' : 'Submit'} disabled={submitted || loading}/>\n                <ErrorMessage loading={loading} error={error} errorMessage={errorMessage}/>\n            </form>\n        </Paper>\n    )\n};\n\nexport default PostEditor","import {useEffect} from \"react\";\n\nconst defaultTitle = 'Blog | XiaoxiHome';\n\nfunction useSetTitle(title?: string) {\n\n    useEffect(() => {\n        document.title = title || defaultTitle;\n\n        return () => {\n            document.title = defaultTitle;\n        }\n    }, [title]);\n}\n\nexport default useSetTitle;","import {useEffect, useState} from \"react\";\nimport urls from \"./urls\";\nimport {useStore} from \"react-redux\";\nimport {State} from \"../redux/state\";\nimport useGetAuthorizationHeader from \"./useGetAuthorizationHeader\";\nimport useVerifyToken from \"./useVerifyToken\";\nimport {PostDetailData} from \"../components/post-detail/post-detail\";\nimport useSetTitle from \"../utils/use-set-title\";\n\nconst useGetPostDetail = (postID: number) => {\n    const isLogin = useStore<State>().getState().loginStatus.isLogin;\n    const accessHeader = useGetAuthorizationHeader();\n    const validateToken = useVerifyToken();\n\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(false);\n    const [data, setData] = useState<PostDetailData | null>(null);\n\n    useSetTitle(data?.title);\n\n    useEffect(() => {\n        fetchPostDetail()\n    }, [isLogin, postID]);\n\n    const fetchPostDetail = async (\n    ) => {\n        try {\n            if (loading) return;\n\n            // reset states\n            setError(false);\n\n            // validate token if logged in\n            let hasValidToken = false;\n            if (isLogin) {\n                hasValidToken  = await validateToken()\n            }\n\n            // start fetching\n            setLoading(true);\n            const res = await fetch(urls.getPostDetail(postID), {\n                method: 'GET',\n                headers: hasValidToken ? {...accessHeader} : {}\n            });\n            const json = await res.json();\n            setLoading(false);\n            console.log(json);\n\n            if (json.status === 'success') {\n                console.log(json.data);\n                setData(json.data)\n            } else {\n                console.log(json);\n                setError(true);\n            }\n        } catch (e) {\n            setLoading(false);\n            console.log(e);\n            setError(true);\n        }\n    };\n\n    return [loading, error, data] as [typeof loading, typeof error, typeof data]\n\n};\n\nexport default useGetPostDetail","import {useHistory, useLocation} from \"react-router-dom\";\n\nconst useReload = () => {\n    const history = useHistory();\n    const location = useLocation();\n\n    const reload = () => {\n        history.replace('/');\n        history.replace(location)\n    };\n\n    return reload\n};\n\nexport default useReload","import {useState} from \"react\";\nimport urls from \"./urls\";\nimport useGetAuthorizationHeader from \"./useGetAuthorizationHeader\";\nimport useVerifyToken from \"./useVerifyToken\";\nimport useRedirectToLogin from \"../utils/use-redirect-to-login\";\nimport useReload from \"../utils/use-reload\";\n\nconst useCommentSubmission = () => {\n    const accessHeader = useGetAuthorizationHeader();\n    const validateToken = useVerifyToken();\n\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(false);\n    const [errorMessage, setErrorMessage] = useState('');\n    const redirectToLogin = useRedirectToLogin();\n    const reload = useReload();\n\n    const submit = async (\n        content: string,\n        parentPost: string,\n        parentComment: string | null\n    ) => {\n        try {\n            if (loading) return;\n\n            // reset states\n            setError(false);\n            setErrorMessage(' ');\n            setLoading(true);\n\n            // redirect to login if token not valid\n            const isTokenValid = await validateToken();\n            if (!isTokenValid) {\n                setLoading(false);\n                redirectToLogin();\n                return\n            }\n\n            //\n            const res = await fetch(urls.createComment, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    ...accessHeader\n                },\n                body: JSON.stringify({\n                    'content': content,\n                    'parent_post': parentPost,\n                    'parent_comment': parentComment\n                })\n            });\n            const json = await res.json();\n            setLoading(false);\n            if (json.status === 'success') {\n                reload()\n            } else {\n                console.log(json);\n                setErrorMessage(json.message);\n                setError(true)\n            }\n        } catch (e) {\n            console.log(e);\n            setLoading(false);\n            setErrorMessage('Server is not available please try again later');\n            setError(true)\n        }\n    };\n\n    return [loading, error, errorMessage, submit] as [typeof loading, typeof error, typeof errorMessage, typeof submit]\n};\n\nexport default useCommentSubmission","import {FormControl, FormHelperText, Input, InputLabel, TextField} from \"@material-ui/core\";\nimport {GenericClickButton} from \"../commons/generic-button\";\nimport ErrorMessage from \"../commons/error-message\";\nimport React, {FormEvent} from \"react\";\nimport useInputField from \"../../utils/use-input-field\";\nimport {commentValidator} from \"../../utils/validators\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport useCommentSubmission from \"../../requests/useCommentSubmission\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        margin: '16px 0'\n    },\n    input: {\n        width: '100%',\n    }\n}));\n\ninterface CommentInputProps {\n    parentPost: string,\n    parentComment: string | null\n}\n\nconst CommentInput: React.FC<CommentInputProps> = ({parentPost, parentComment}) => {\n    const classes = useStyles();\n    const [comment, commentChangeHandler, commentError, commentErrorMessage, validateComment] = useInputField('', commentValidator);\n    const [loading, error, errorMessage, submit] = useCommentSubmission();\n\n    const submitHandler = (e: FormEvent) => {\n        e.preventDefault();\n\n        if (!validateComment()) return;\n        submit(comment, parentPost, parentComment)\n    };\n\n    return (\n        <form className={classes.root}>\n            <TextField\n                id=\"comment-input\"\n                label=\"Leave comment\"\n                name=\"comment\"\n                value={comment}\n                onChange={commentChangeHandler}\n                error={commentError}\n                helperText={commentError && commentErrorMessage ? commentErrorMessage : ' '}\n                variant=\"outlined\"\n                className={classes.input}\n            />\n\n            <GenericClickButton onClick={submitHandler} width={'250px'} text={'Submit'} disabled={loading}/>\n            {\n                error && errorMessage &&\n                <ErrorMessage loading={loading} error={error} errorMessage={errorMessage}/>\n            }\n        </form>\n    )\n};\n\nexport default CommentInput","import Avatar from \"@material-ui/core/Avatar\";\nimport getTimeString from \"../../utils/get-time-string\";\nimport LikeButtons from \"../commons/like-buttons\";\nimport React from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    postInfo: {\n        width: '100%',\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'flex-start',\n        color: theme.palette.grey[500],\n        fontWeight: 700,\n        [theme.breakpoints.down('md')]: {\n            flexDirection: 'column',\n            alignItems: 'flex-start',\n            justifyContent: 'center',\n        }\n    },\n    avatar: {\n        backgroundColor: theme.palette.primary.main\n    },\n    avatarSmall: {\n        width: '1.2rem',\n        height: '1.2rem',\n        fontSize: '0.8rem'\n    },\n    username: {\n        color: theme.palette.text.primary\n    },\n    postInfoItem: {\n        margin: theme.spacing(0, 2),\n        [theme.breakpoints.down('md')]: {\n            margin: '4px 0',\n        }\n    }\n}));\n\ninterface ItemInfoProps {\n    type: 'comment' | 'post',\n    username: string,\n    created: string,\n    id: string,\n    likes: number,\n    dislikes: number,\n    isLiked: -1 | 0 | 1 | undefined,\n    small?: boolean\n}\n\nconst ItemInfo: React.FC<ItemInfoProps> = ({type, username, created, id, likes, dislikes, isLiked, small}) => {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.postInfo}>\n            <div className={classes.postInfoItem}>\n                <Avatar\n                    variant=\"rounded\"\n                    className={small ? `${classes.avatar} ${classes.avatarSmall}` : classes.avatar}\n                >\n                    { username.charAt(0) }\n                </Avatar>\n            </div>\n            <div className={`${classes.postInfoItem} ${classes.username}`}>\n                { username }\n            </div>\n            <div className={classes.postInfoItem}>\n                { getTimeString(created) }\n            </div>\n            <div className={classes.postInfoItem}>\n                <LikeButtons type={type} id={id} likes={likes} dislikes={dislikes} isLiked={isLiked}/>\n            </div>\n        </div>\n    )\n};\n\nexport default ItemInfo","import React from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport ItemInfo from \"./item-info\";\nimport {SubCommentData} from \"./comment-item\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        // margin: theme.spacing(2, 0),\n        width: '100%',\n    },\n    content: {\n        margin: '32px'\n    },\n}));\n\ninterface SubCommentItemProps {\n    data: SubCommentData\n}\n\nconst SubCommentItem: React.FC<SubCommentItemProps> = ({data}) => {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <ItemInfo type={'comment'} username={data.owner.username} created={data.created} id={data.id} likes={data.likes} dislikes={data.dislikes} isLiked={data.isLiked} small/>\n            <div className={classes.content}>\n                { data.content }\n            </div>\n        </div>\n    )\n\n};\n\nexport default SubCommentItem","import React, {useState} from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Box, Divider, Fade, Paper} from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ItemInfo from \"./item-info\";\nimport ChatIcon from '@material-ui/icons/Chat';\nimport Button from \"@material-ui/core/Button\";\nimport SubCommentItem from \"./sub-comment-item\";\nimport CommentInput from \"./comment-input\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        margin: '20px 0',\n        width: '100%',\n        padding: theme.spacing(2)\n    },\n    content: {\n        margin: '32px'\n    },\n    commentButton: {\n        margin: '0 32px',\n        color: theme.palette.grey[500],\n    },\n    subCommentPanel: {\n        width: 'calc(100% - 32px)',\n        margin: '8px 0 8px 32px',\n        border: `1px solid ${theme.palette.grey[400]}`,\n        borderRadius: '5px',\n        padding: theme.spacing(2)\n    }\n}));\n\ninterface CommentBaseData {\n    id: string,\n    owner: {\n        username: string,\n        email: string\n    }\n    likes: number,\n    dislikes: number,\n    content: string,\n    created: string,\n    isLiked: -1 | 0 | 1 | undefined\n}\n\nexport interface CommentData extends CommentBaseData {\n    sub_comments: CommentBaseData[]\n}\n\nexport interface SubCommentData extends CommentBaseData {}\n\n\ninterface CommentItemProps {\n    data: CommentData,\n    postID: string,\n    isLogin: boolean\n}\n\nconst CommentItem: React.FC<CommentItemProps> = ({data, postID, isLogin}) => {\n    const classes = useStyles();\n\n    const [isCommentPanelOpen, setIsCommentPanelOpen] = useState(false);\n\n    return (\n        <Paper className={classes.root} elevation={0}>\n            <ItemInfo type={'comment'} username={data.owner.username} created={data.created} id={data.id} likes={data.likes} dislikes={data.dislikes} isLiked={data.isLiked} small/>\n            <div className={classes.content}>\n                { data.content }\n            </div>\n            <Button\n                variant=\"outlined\"\n                className={classes.commentButton}\n                disableElevation\n                startIcon={<ChatIcon />}\n                onClick={() => setIsCommentPanelOpen(prev => !prev)}\n                size={'small'}\n            >\n                { data.sub_comments.length }\n            </Button>\n\n            {\n                isCommentPanelOpen &&\n                <Fade in={isCommentPanelOpen} timeout={1000}>\n                    <div className={classes.subCommentPanel}>\n                        { !data.sub_comments.length && <Box textAlign={'center'}>No comment yet</Box> }\n                        { data.sub_comments.map((item, i) => <SubCommentItem data={item} key={i}/>) }\n                        { isLogin && <CommentInput parentPost={postID} parentComment={data.id}/> }\n                    </div>\n                </Fade>\n            }\n        </Paper>\n    )\n\n};\n\nexport default CommentItem","import React from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Box, Divider, FormControl, FormHelperText, Input, InputLabel, Paper} from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {Link} from \"react-router-dom\";\nimport {GenericClickButton} from \"../commons/generic-button\";\nimport ErrorMessage from \"../commons/error-message\";\nimport CommentInput from \"./comment-input\";\nimport CommentItem, {CommentData} from \"./comment-item\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        margin: '60px 0',\n        width: '100%',\n    },\n    paper: {\n        width: '100%',\n        padding: theme.spacing(4)\n    },\n    loginToLeaveMessage: {\n        width: '100%',\n        height: '200px',\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'center',\n        fontWeight: 700,\n        color: theme.palette.grey[600]\n    }\n}));\n\ninterface CommentListProps {\n    isLogin: boolean,\n    comments: number,\n    postID: string,\n    data: CommentData[]\n}\n\nconst CommentList: React.FC<CommentListProps> = ({isLogin, comments, postID, data}) => {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <Paper className={classes.paper} elevation={0}>\n                <Typography variant={'body1'} component={'div'}>\n                    <Box fontWeight={700}>\n                        { `${comments} ${comments > 1 ? 'comments' : 'comment'}` }\n                    </Box>\n                </Typography>\n                <Divider />\n            </Paper>\n\n                {\n                    data.map((itemData, i) => <CommentItem data={itemData} postID={postID} key={i} isLogin={isLogin}/>)\n                }\n\n            <Paper className={classes.paper} elevation={0}>\n                {\n                    isLogin ?\n                        <CommentInput parentPost={postID} parentComment={null}/> :\n                        <div className={classes.loginToLeaveMessage}>\n                            Login to leave a comment\n                        </div>\n                }\n            </Paper>\n        </div>\n    )\n\n};\n\nexport default CommentList","import React from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Paper} from \"@material-ui/core\";\nimport { useParams } from \"react-router-dom\";\nimport useGetPostDetail from \"../../requests/useGetPostDetail\";\nimport {Skeleton} from \"@material-ui/lab\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport getTimeString from \"../../utils/get-time-string\";\nimport LikeButtons from \"../commons/like-buttons\";\nimport useLike from \"../../requests/useLike\";\nimport CommentList from \"./comment-list\";\nimport ItemInfo from \"./item-info\";\nimport {CommentData} from \"./comment-item\";\nimport useSetTitle from \"../../utils/use-set-title\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n    },\n    paper: {\n        width: '100%',\n        padding: theme.spacing(4)\n    },\n    loading: {\n        width: '100%',\n        height: '500px'\n    },\n    error: {\n        width: '100%',\n        height: '500px',\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'center'\n    },\n    postContent: {\n        marginTop: '40px'\n    }\n}));\n\nexport interface PostDetailData {\n    id: string,\n    owner: {\n        email: string,\n        username: string\n    }\n    likes: number,\n    dislikes: number,\n    comments: number,\n    comments_data: CommentData[]\n    title: string,\n    content: string,\n    created: string,\n    is_liked: 0 | 1 | -1 | undefined\n}\n\ninterface PostDetailProps {\n    isLogin: boolean\n}\n\nconst PostDetail: React.FC<PostDetailProps> = ({isLogin}) => {\n    const classes = useStyles();\n\n    const { postID } = useParams();\n    const [loading, error, data] = useGetPostDetail(parseInt(postID || '1'));\n\n    // const [likeLoading, likeError, updatedData, like] = useLike('post', postID);\n\n    let content;\n    if (loading) {\n        content = (\n            <div className={classes.loading}>\n                <Skeleton variant=\"rect\" width={'100%'} height={60} />\n                { (new Array(10)).fill(0).map((_, i) => <Skeleton variant=\"text\" width={'100%'} key={i}/>)}\n            </div>\n        )\n    } else if (error) {\n        content = (\n            <div className={classes.error}>\n                <h1>Server error</h1>\n            </div>\n        )\n    } else if (data) {\n        content = (\n            <>\n                <Paper className={classes.paper} elevation={0}>\n                    <h1> {data.title} </h1>\n                    <ItemInfo type={'post'} username={data.owner.username} created={data.created} id={data.id} likes={data.likes} dislikes={data.dislikes} isLiked={data.is_liked}/>\n                    <div dangerouslySetInnerHTML={{__html: data.content}} className={classes.postContent}/>\n                </Paper>\n                <CommentList comments={data.comments} isLogin={isLogin} postID={data.id} data={data.comments_data}/>\n            </>\n        )\n    }\n\n    return (\n        <div className={classes.root}>\n            { content }\n        </div>\n    )\n\n};\n\nexport default PostDetail","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function RouterScrollRestoration() {\n    const { pathname } = useLocation();\n\n    useEffect(() => {\n        window.scrollTo(0, 0);\n    }, [pathname]);\n\n    return null;\n}","import React from 'react';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route\n} from \"react-router-dom\";\nimport {connect} from 'react-redux';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Login from \"./components/login/login\";\nimport Register from \"./components/login/register\";\nimport HeaderContainer from \"./containers/header-container\";\nimport MainPage from \"./components/main-page/main-page\";\nimport SnackbarContainer from \"./containers/snackbar-container\";\nimport Footer from \"./components/footer/footer\";\nimport PrivateRoute from \"./utils/protected-router\";\nimport PostEditor from \"./components/post-editor/post-editor\";\nimport {State} from \"./redux/state\";\nimport PostDetail from \"./components/post-detail/post-detail\";\nimport RouterScrollRestoration from \"./utils/router-scroll-restoration\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        maxWidth: '100vw',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'flex-start'\n    },\n    widthWrapper: {\n        margin: theme.spacing(5, 0, 0, 0),\n        width: '1000px',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'flex-start',\n        [theme.breakpoints.down('sm')]: {\n            width: 'calc(100% - 16px)',\n            margin: theme.spacing(0, 1),\n        }\n    }\n}));\n\ninterface InnerAppProps {\n    isLogin: boolean\n}\n\nconst InnerApp: React.FC<InnerAppProps> = ({isLogin}) => {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <Router basename={process.env.PUBLIC_URL}>\n                <RouterScrollRestoration />\n                <HeaderContainer />\n                <div className={classes.widthWrapper}>\n                    <Switch>\n                        <Route path=\"/\" exact render={ () => <MainPage /> } />\n                        <Route path=\"/login\" render={ () => <Login /> } />\n                        <Route path=\"/register\" render={ () => <Register /> } />\n                        <Route path=\"/post/:postID\" render={ () => <PostDetail isLogin={isLogin}/> } />\n                        <PrivateRoute path=\"/edit-post/:postID?\" isLogin={isLogin}>\n                            <PostEditor/>\n                        </PrivateRoute>\n                        {/*<Route path=\"/welcome\" component={Welcome} />*/}\n                    </Switch>\n                    <Footer />\n                </div>\n            </Router>\n\n            <SnackbarContainer />\n        </div>\n    )\n};\n\nfunction mapStateToProps(state: State) {\n    return {\n        isLogin: state.loginStatus.isLogin\n    }\n}\n\nconst InnerAppContainer = connect(\n    mapStateToProps,\n)(InnerApp);\n\nexport default InnerAppContainer;\n","import React from 'react';\nimport {Provider} from 'react-redux';\nimport configureStore from \"./redux/configure-store\";\nimport { CssBaseline } from \"@material-ui/core\";\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport theme from './theme';\nimport InnerApp from \"./inner-app\";\n\nconst store = configureStore();\n\ninterface AppProps {\n\n}\n\nconst App: React.FC<AppProps> = () => {\n    return (\n        <Provider store={store}>\n        <ThemeProvider theme={theme}>\n        <CssBaseline />\n            <InnerApp />\n        </ThemeProvider>\n        </Provider>\n    )\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}