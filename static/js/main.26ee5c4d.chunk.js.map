{"version":3,"sources":["redux/actions/login-status.ts","redux/state.ts","redux/reducers/login-status.ts","redux/actions/confetti.ts","redux/actions/snackbar.ts","redux/reducers/snakbar.ts","redux/reducers/confetti.ts","redux/reducers/root-reducers.ts","redux/configure-store.ts","theme.tsx","utils/use-full-height.tsx","components/login/commons/login-common.tsx","components/commons/form-button.tsx","utils/use-input-field.tsx","utils/validators.ts","requests/urls.ts","utils/redirects/use-redirect-back.tsx","requests/use-login.tsx","components/commons/error-message.tsx","components/login/login.tsx","requests/use-register.tsx","components/login/register.tsx","components/commons/theme-button.tsx","utils/redirects/use-redirect-to-home.tsx","requests/use-logout.tsx","components/header/logged-in-user-panel.tsx","components/header/anonymous-user-panel.tsx","components/commons/logo.tsx","components/header/header.tsx","containers/header-container.tsx","requests/common/generic-error-message.ts","utils/redirects/use-redirect-to-login.tsx","requests/common/use-fetch-with-token-verification.tsx","requests/common/use-protected-get.tsx","requests/use-get-post-list.tsx","utils/get-time-string.tsx","requests/common/use-post.tsx","requests/use-like.tsx","components/commons/like-buttons.tsx","components/commons/tag-chip.tsx","components/post-list/post.tsx","components/post-list/server-waking-notification.tsx","components/post-list/post-list.tsx","containers/post-list-container.tsx","components/commons/generic-button.tsx","components/side-bar/side-bar.tsx","containers/side-bar-container.tsx","components/main-page/active-tag-chip.tsx","components/main-page/main-page.tsx","components/snackbar/snackbar.tsx","containers/snackbar-container.tsx","components/footer/footer-column.tsx","components/footer/footer.tsx","utils/protected-router.tsx","requests/use-post-submission.tsx","components/post-editor/use-editor.tsx","utils/use-set-title.ts","requests/use-get-post-detail.tsx","requests/common/use-unprotected-get.tsx","requests/use-get-tag-list.tsx","components/post-editor/tag-selector.tsx","components/post-editor/post-editor.tsx","utils/redirects/use-reload.tsx","requests/use-comment-submission.tsx","components/post-detail/comment-input.tsx","components/post-detail/item-info.tsx","components/post-detail/sub-comment-item.tsx","components/post-detail/comment-item.tsx","components/commons/theme-link.tsx","components/post-detail/comment-list.tsx","components/post-detail/inserted-html-style.tsx","requests/use-delete.tsx","components/commons/delete-button.tsx","components/commons/edit-button.tsx","components/post-detail/post-detail.tsx","utils/router-scroll-restoration.tsx","components/account-setting/section-wrapper.tsx","components/account-setting/update-avatar/get-cropped-image.ts","components/account-setting/update-avatar/update-avatar.tsx","requests/use-update-avatar.tsx","components/account-setting/update-avatar/use-resize-image.tsx","components/account-setting/account-setting.tsx","containers/account-setting-container.tsx","components/confetti/confetti.ts","components/confetti/confetti-wrapper.tsx","inner-app.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["LoginStatusActionTypes","defaultState","loginStatus","isLogin","username","token","access","refresh","snackbar","open","message","confetti","updateLoginStatus","newStatus","type","UPDATE_LOGIN_STATUS","ConfettiActionTypes","SnackbarActionTypes","state","action","LOGOUT","REFRESH_TOKEN","Object","assign","newAccessToken","openConfetti","dispatch","OPEN_CONFETTI","window","setTimeout","CLOSE_CONFETTI","openSnackbarWithConfetti","openSnackbar","OPEN_SNACKBAR","CLOSE_SNACKBAR","rootReducers","combineReducers","loggerMiddleware","createLogger","theme","createMuiTheme","palette","primary","main","contrastText","secondary","text","background","default","typography","responsiveFontSizes","useFullHeight","ref","useState","height","setHeight","useEffect","current","getBoundingClientRect","useStyles","makeStyles","root","width","margin","spacing","display","flexDirection","alignItems","justifyContent","overflow","image","objectFit","breakpoints","down","content","padding","textField","fontWeight","link","color","LoginCommon","children","imageUrl","classes","containerRef","useRef","Paper","elevation","className","style","src","process","alt","title","button","backgroundColor","textTransform","borderBottom","borderRadius","opacity","FormButton","disabled","form","variant","disableElevation","useInputField","defaultValue","validator","value","setValue","error","setError","errorMessage","setErrorMessage","e","target","reference","validatorResult","isValid","usernameValidator","length","emailValidator","indexOf","passwordValidator","confirmPasswordValidator","postTitleValidator","commentValidator","execValidators","validators","validationResults","map","_","i","base","postBase","urls","login","accountBase","register","verifySession","updateAvatar","getPostList","getPostListWithTag","tag","getPostDetail","id","createPost","editPost","deletePost","tagList","createComment","commentBase","like","userActionsBase","blacklist","useRedirectBack","history","useHistory","location","useLocation","from","pathname","replace","useLogin","loading","setLoading","useDispatch","goBack","email","password","fetch","method","headers","body","JSON","stringify","then","res","json","status","data","catch","ErrorMessage","Typography","component","Box","CircularProgress","Login","setEmail","emailError","emailErrorMessage","validateEmail","setPassword","passwordError","passwordErrorMessage","validatePassword","onSubmit","preventDefault","Grid","container","item","xs","textAlign","justify","TextField","label","name","onChange","helperText","Divider","to","useRegister","confirmPassword","Register","setUsername","usernameError","usernameErrorMessage","validateUsername","setConfirmPassword","confirmPasswordError","confirmPasswordErrorMessage","validateConfirmPassword","validationCheck1","validationCheck2","md","letterSpacing","ThemeButton","url","onClick","Link","useRedirectToHome","useLogout","toHome","clientSideLogout","LoggedInUserPanel","logout","size","AnonymousUserPanel","fontFamily","join","fontSize","up","Logo","headerDimension","position","zIndex","appBar","left","top","placeholder","Header","HeaderContainer","connect","GENERIC_ERROR_MESSAGE","useRedirectToLogin","push","useFetchWithTokenVerification","useStore","getState","refreshToken","redirectToLogin","getAccessHeader","redirect","options","a","undefined","noAuthenticationHandler","Promise","resolve","reject","refreshRes","refreshJson","console","log","messages","useProtectedGet","fetchWhenComponentDidMount","redirectInvalidToken","setData","fetchWithTokenVerification","doGet","useGetPostList","months","getTimeString","ISOString","date","Date","hour","getHours","minute","getMinutes","getDate","getMonth","getFullYear","usePost","doPost","callbackOnSuccess","callbackOnError","callbackOnUnknownError","useLike","updatedData","errorCallback","unknownErrorCallback","likeButtons","marginLeft","buttonText","lineHeight","grey","LikeButtons","likes","dislikes","isLiked","likeLoading","likedByUser","dislikedByUser","IconButton","aria-label","green","red","inheritColor","chipRoot","fade","transitions","create","chipLabelSmall","caption","chipLabelNormal","TagChip","Chip","toUpperCase","clickable","paper","minHeight","avatar","light","author","actionArea","actionItem","Post","is_liked","Avatar","owner","avatar_url","charAt","comments","created","timeoutID","warning","noWrap","whiteSpace","textDecoration","ServerWakingNotification","isLoaded","active","setActive","isMount","setIsMount","cleanUp","clearTimeout","showNotification","handleLoaded","turnToInactive","unMount","useServerWaking","Fade","in","timeout","onExited","href","rel","PostList","Array","fill","my","key","Skeleton","animation","PostListContainer","maxWidth","GenericClickButton","Button","GenericLinkButton","rowWrapper","SideBar","SideBarContainer","chipLabel","body2","ActiveTagChip","onDelete","deletable","flexWrap","tags","right","MainPage","useParams","createStyles","Snackbar","closeSnackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","SnackbarContent","SnackbarContainer","userStyles","listStyleType","header","FooterColumn","column1","copyright","Footer","PrivateRoute","rest","render","removeUnusedObjectURL","objectURLArray","filter","getForm","FormData","append","promiseArray","getBlobFromObjectURL","all","blobs","forEach","blob","urlComponents","split","filename","usePostSubmission","submitted","setSubmitted","updatePostID","imageUploadHandler","editor","input","document","createElement","setAttribute","click","onchange","files","loadImage","canvas","toBlob","objectURL","URL","createObjectURL","range","getSelection","insertEmbed","index","orientation","useEditor","ID","quill","setQuill","Image","Quill","import","sanitize","quillInstance","modules","toolbar","clipboard","matchVisual","getModule","addHandler","delta","convert","setContents","useSetTitle","useGetPostDetail","postID","useUnprotectedGet","useGetTagList","icon","menuItemRoot","menuRoot","TagSelector","tagValue","tagChangeHandler","Select","displayEmpty","disableUnderline","MenuProps","arr","humanReadable","MenuItem","marginBottom","PostEditorForm","updatePost","defaultTitle","defaultTag","getObjectURLArray","setContent","titleChangeHandler","titleError","titleErrorMessage","validateTitle","setTag","submit","FormControl","InputLabel","htmlFor","Input","aria-describedby","FormHelperText","mb","innerHTML","PostEditor","needData","setNeedData","postDetailError","postDetailData","fetchPostDetail","tagListError","parseInt","showEditor","useReload","useCommentSubmission","reload","parentPost","parentComment","CommentInput","comment","commentChangeHandler","commentError","commentErrorMessage","validateComment","postInfo","avatarSmall","postInfoItem","ItemInfo","avatarUrl","small","_isLiked","SubCommentItem","commentButton","subCommentPanel","border","CommentItem","isCommentPanelOpen","setIsCommentPanelOpen","startIcon","prev","sub_comments","ThemeLink","fromState","_to","loginToLeaveMessage","CommentList","itemData","useInsertedHTMLStyle","overflowWrap","wordWrap","backgroundPosition","backgroundRepeat","backgroundSize","transition","maxHeight","useDelete","successCallback","confirmButton","DeleteButton","dialog","setDialog","closeDialog","Tooltip","Dialog","aria-labelledby","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","textColor","success","EditButton","center","PostDetail","insertedHTMLClasses","HTMLStringContainerRef","is_owner","dangerouslySetInnerHTML","__html","comments_data","RouterScrollRestoration","scrollTo","sectionTitle","SectionWrapper","getCroppedImg","Stage","crop","scale","fileName","x","y","ctx","getContext","drawImage","useUpdateAvatar","file","useResizeImage","setWidth","resize","containerWidth","getWidthHeight","naturalWidth","naturalHeight","finalWidth","finalHeight","onload","imageNaturalWidth","imageNaturalHeight","Math","min","round","row","backNextButtons","centering","FinishStage","restart","ConfirmStage","back","next","upload","useMemo","imgWidth","imgHeight","GoNext","CropStage","setImage","setCrop","cropperWrapperRef","cropperSize","setCropperSize","goNext","croppedSrc","aspect","unit","justifySelf","newCrop","ruleOfThirds","onImageError","onImageLoaded","UploadStage","inputRef","handleFiles","img","toDataURL","addEventListener","removeEventListener","accept","UpdateAvatar","UPLOAD","stage","setStage","imageSrc","_setImageSrc","croppedImageBlob","_setCroppedImageBlob","moveToUploadStage","moveToCropStage","CROP","cropped","CONFIRM","FINISH","AccountSetting","AccountSettingContainer","COLORS","ConfettiSprite","r","rotation","vx","vy","finished","params","dx","dy","g","dr","dOpacity","dRotation","random","ddRotation","this","floor","getColor","PI","nextOpacity","Confetti","sprites","initParams","loop","bind","defaultOptions","spritesCount","getElementById","ellipse","drawer","arc","clearRect","save","beginPath","fillStyle","globalAlpha","restore","move","draw","update","requestAnimationFrame","initCanvas","initSprites","initDrawer","ConfettiWrapper","widthWrapper","tooltip","bottom","InnerAppContainer","basename","path","exact","store","DEBUG","createStore","applyMiddleware","thunkMiddleware","App","ThemeProvider","CssBaseline","Boolean","hostname","match","ReactDOM","StrictMode","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.26ee5c4d.chunk.js","sourcesContent":["import {State, defaultState} from \"../state\";\n\nexport enum LoginStatusActionTypes {\n    'UPDATE_LOGIN_STATUS'='UPDATE_LOGIN_STATUS',\n    'LOGOUT'='LOGOUT',\n    'REFRESH_TOKEN'='REFRESH_TOKEN'\n}\n\nexport type LoginStatusAction = ReturnType<typeof logout> | ReturnType<typeof updateLoginStatus> | ReturnType<typeof refreshToken>\n\nexport function logout() {\n    return {\n        type: LoginStatusActionTypes.LOGOUT as typeof LoginStatusActionTypes.LOGOUT,\n        newStatus: defaultState.loginStatus\n    }\n}\n\nexport function updateLoginStatus(newStatus: State['loginStatus']) {\n    return {\n        type: LoginStatusActionTypes.UPDATE_LOGIN_STATUS as typeof LoginStatusActionTypes.UPDATE_LOGIN_STATUS,\n        newStatus\n    }\n}\n\nexport function refreshToken(newAccessToken: State['loginStatus']['token']['access']) {\n    return {\n        type: LoginStatusActionTypes.REFRESH_TOKEN as typeof LoginStatusActionTypes.REFRESH_TOKEN,\n        newAccessToken\n    }\n}","export interface State {\n    loginStatus: {\n        isLogin: boolean,\n        username: string,\n        token: {\n            access: string,\n            refresh: string\n        }\n    },\n    snackbar: {\n        open: boolean,\n        message: string\n    },\n    confetti: boolean\n}\n\nexport const defaultState: State = {\n    loginStatus: {\n        isLogin: false,\n        username: '',\n        token: {\n            access: '',\n            refresh: ''\n        }\n    },\n    snackbar: {\n        open: false,\n        message: ''\n    },\n    confetti: false\n};","import {defaultState, State} from \"../state\";\nimport {LoginStatusAction, LoginStatusActionTypes} from \"../actions/login-status\";\n\n\nfunction loginStatus(\n    state = defaultState.loginStatus,\n    action: LoginStatusAction\n): State['loginStatus'] {\n    switch (action.type) {\n        case LoginStatusActionTypes.UPDATE_LOGIN_STATUS:\n            return action.newStatus;\n        case LoginStatusActionTypes.LOGOUT:\n            return action.newStatus;\n        case LoginStatusActionTypes.REFRESH_TOKEN:\n            const newStatus = Object.assign({}, state);\n            newStatus.token.access = action.newAccessToken;\n            return newStatus;\n        default:\n            return state\n    }\n}\n\nexport default loginStatus;","import {ThunkDispatch} from \"redux-thunk\";\nimport {State} from \"../state\";\n\nexport enum ConfettiActionTypes {\n    'CLOSE_CONFETTI'='CLOSE_CONFETTI',\n    'OPEN_CONFETTI'='OPEN_CONFETTI',\n}\n\nexport type ConfettiActions = ReturnType<typeof openConfetti>\n\nexport function openConfetti(): any {\n    return (dispatch: ThunkDispatch<State, null, ConfettiActions>) => {\n        dispatch(_openConfetti());\n        window.setTimeout(() => dispatch(_closeConfetti()), 2000)\n    }\n}\n\nfunction _openConfetti() {\n    return {\n        type: ConfettiActionTypes.OPEN_CONFETTI as typeof ConfettiActionTypes.OPEN_CONFETTI,\n    }\n}\n\nfunction _closeConfetti() {\n    return {\n        type: ConfettiActionTypes.CLOSE_CONFETTI as typeof ConfettiActionTypes.CLOSE_CONFETTI,\n    }\n}\n","import {ThunkDispatch} from \"redux-thunk\";\nimport {State} from \"../state\";\nimport {ConfettiActions, openConfetti} from \"./confetti\";\n\nexport enum SnackbarActionTypes {\n    'CLOSE_SNACKBAR'='CLOSE_SNACKBAR',\n    'OPEN_SNACKBAR'='OPEN_SNACKBAR',\n}\n\nexport type SnackbarAction = ReturnType<typeof openSnackbar> | ReturnType<typeof closeSnackbar>\n\nexport function openSnackbarWithConfetti(message: string) {\n    return (dispatch: ThunkDispatch<State, null, ConfettiActions>) => {\n        dispatch(openSnackbar(message));\n        window.setTimeout(() => dispatch(openConfetti()), 300)\n    };\n}\n\nexport function openSnackbar(message: string) {\n    return {\n        type: SnackbarActionTypes.OPEN_SNACKBAR as typeof SnackbarActionTypes.OPEN_SNACKBAR,\n        message\n    }\n}\n\nexport function closeSnackbar() {\n    return {\n        type: SnackbarActionTypes.CLOSE_SNACKBAR as typeof SnackbarActionTypes.CLOSE_SNACKBAR,\n    }\n}\n","import {defaultState, State} from \"../state\";\nimport {SnackbarAction, SnackbarActionTypes} from \"../actions/snackbar\";\n\n\nfunction snackbar (\n    state = defaultState.snackbar,\n    action: SnackbarAction\n): State['snackbar'] {\n    switch (action.type) {\n        case SnackbarActionTypes.OPEN_SNACKBAR:\n            return {\n                open: true,\n                message: action.message\n            };\n        case SnackbarActionTypes.CLOSE_SNACKBAR:\n            return defaultState.snackbar;\n        default:\n            return state\n    }\n}\n\nexport default snackbar;","import {defaultState, State} from \"../state\";\nimport {ConfettiActions, ConfettiActionTypes} from \"../actions/confetti\";\n\n\nfunction confetti (\n    state = defaultState.confetti,\n    action: ConfettiActions\n): State['confetti'] {\n    switch (action.type) {\n        case ConfettiActionTypes.OPEN_CONFETTI:\n            return true;\n        case ConfettiActionTypes.CLOSE_CONFETTI:\n            return false;\n        default:\n            return state\n    }\n}\n\nexport default confetti;","import {combineReducers} from \"redux\";\nimport loginStatus from \"./login-status\";\nimport snackbar from \"./snakbar\";\nimport confetti from \"./confetti\";\n\nconst rootReducers = combineReducers({\n    loginStatus,\n    snackbar,\n    confetti\n});\n\nexport default rootReducers;","import { createStore, applyMiddleware } from 'redux'\nimport thunkMiddleware from 'redux-thunk'\nimport rootReducers from \"./reducers/root-reducers\";\nimport {defaultState} from \"./state\";\n\nimport { createLogger } from 'redux-logger'\nconst loggerMiddleware = createLogger();\n\n\nexport default function configureStore() {\n    if (process.env.DEBUG === 'true') {\n        return createStore(\n            rootReducers,\n            defaultState,\n            applyMiddleware(thunkMiddleware, loggerMiddleware)\n        )\n    } else {\n        return createStore(\n            rootReducers,\n            defaultState,\n            applyMiddleware(thunkMiddleware)\n        )\n    }\n}","import {createMuiTheme, responsiveFontSizes} from \"@material-ui/core/styles\";\n\nlet theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: '#41b3a3',\n            contrastText: '#fff',\n        },\n        secondary: {\n            main: '#e8a87c',\n            contrastText: '#fff',\n        },\n        text: {\n            primary: '#4a5568'\n        },\n        background: {\n            default: 'rgb(241, 242, 245)'\n        }\n    },\n    typography: {\n        \"fontFamily\": \"system-ui,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,Noto Sans,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol,Noto Color Emoji\",\n        \"fontSize\": 14,\n        \"fontWeightLight\": 300,\n        \"fontWeightRegular\": 400,\n        \"fontWeightMedium\": 500\n    }\n});\ntheme = responsiveFontSizes(theme);\n\nexport default theme;","import React, {useEffect, useState} from \"react\";\n\nconst useFullHeight = (ref: React.RefObject<HTMLDivElement>) => {\n    const [height, setHeight] = useState(0);\n\n    useEffect(() => {\n        if (!ref.current) return;\n        setHeight(ref.current.getBoundingClientRect().height)\n    }, [ref]);\n\n    return height\n};\n\nexport default useFullHeight","import React, {useRef} from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Paper} from \"@material-ui/core\";\nimport useFullHeight from \"../../../utils/use-full-height\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        margin: theme.spacing(2, 0),\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'center',\n        overflow: 'hidden',\n    },\n    image: {\n        width: '40%',\n        height: '0',\n        '& img': {\n            width: '100%',\n            height: '100%',\n            objectFit: 'cover'\n        },\n        [theme.breakpoints.down('sm')]: {\n            display:'none'\n        }\n    },\n    content: {\n        width: '60%',\n        padding: theme.spacing(10, 5),\n        [theme.breakpoints.down('sm')]: {\n            width: '100%'\n        }\n    },\n    textField: {\n        width: '100%',\n        fontWeight: 700\n    },\n    link: {\n        fontWeight: 700,\n        '& a:link': {\n            color: theme.palette.primary.main\n        },\n        '& a:visited': {\n            color: theme.palette.primary.main\n        },\n        '& a:hover': {\n            color: theme.palette.secondary.main\n        }\n    }\n}));\n\ninterface LoginCommonProps {\n    imageUrl: string\n}\n\nconst LoginCommon: React.FC<LoginCommonProps> = ({children, imageUrl}) => {\n    const classes = useStyles();\n\n    const containerRef = useRef<HTMLDivElement>(null);\n    const height = useFullHeight(containerRef);\n\n    return (\n        <Paper elevation={0} className={classes.root} ref={containerRef}>\n            <div className={classes.image} style={{height: `${height}px`}}>\n                <img\n                    src={process.env.PUBLIC_URL + imageUrl}\n                    alt={'login background'}\n                    title={'login background'}\n                />\n            </div>\n            <div className={classes.content}>\n                { children }\n            </div>\n        </Paper>\n    )\n};\n\nexport default LoginCommon","import React from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Button as MuiButton} from \"@material-ui/core\";\nimport {Link} from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n    button: {\n        width: '100%',\n        backgroundColor: theme.palette.primary.main,\n        color: '#fff',\n        fontWeight: 700,\n        textTransform: 'none',\n        borderBottom: '2px solid rgba(0,0,0,0.1)',\n        borderRadius: '5px',\n        '&:hover': {\n            backgroundColor: theme.palette.secondary.main\n        },\n        '&:disabled': {\n            backgroundColor: theme.palette.secondary.main,\n            opacity: 0.7\n        }\n    }\n}));\n\ninterface ButtonProps {\n    text: string,\n    disabled: boolean,\n    form: string\n}\n\nconst FormButton: React.FC<ButtonProps> = ({text, disabled, form}) => {\n    const classes = useStyles();\n\n    return (\n        <MuiButton variant=\"contained\" classes={{root: classes.button}} disableElevation type={'submit'} form={form} disabled={disabled}>\n            { text }\n        </MuiButton>\n    )\n};\n\nexport default FormButton\n","import React, {ChangeEvent, useEffect, useState} from \"react\";\nimport {Validator} from \"./validators\";\n\ntype ChangeHandler = (e: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => void\n\nconst useInputField = (\n    defaultValue: string,\n    validator: Validator\n) => {\n    const [value, setValue] = useState(defaultValue);\n    const [error, setError] = useState(false);\n    const [errorMessage, setErrorMessage] = useState('');\n\n    const validate = (reference?: string) => {\n        const validatorResult = reference ? validator(value, reference) : validator(value);\n        setError(!validatorResult.isValid);\n        setErrorMessage(validatorResult.message);\n\n        return validatorResult.isValid as boolean\n    };\n\n    const changeHandler: ChangeHandler = (e) => {\n        if (error) setError(false);\n        setValue(e.target.value)\n    };\n\n    return [value, changeHandler, error, errorMessage, validate] as [string, ChangeHandler, boolean, string, typeof validate]\n};\n\nexport default useInputField","export type Validator = (value: string, reference?: string) => {isValid: boolean, message: string}\n\nconst usernameValidator: Validator = (value) => {\n    let isValid = true;\n    let message = '';\n\n    if (value.length >= 30) {\n        isValid = true;\n        message = 'Username length must be less than 30 characters';\n    } else if (value.length === 0) {\n        isValid = true;\n        message = 'Username cannot be empty';\n    }\n\n    return {\n        isValid,\n        message\n    }\n};\n\nconst emailValidator: Validator = (value) => {\n    let isValid = true;\n    let message = '';\n\n    if (value.indexOf('@') === -1) {\n        isValid = false;\n        message = 'Invalid Email format'\n    } else if (value.indexOf('.') === -1) {\n        isValid = false;\n        message = 'Invalid Email format'\n    } else if (value.length === 0) {\n        isValid = false;\n        message = 'Email cannot be empty';\n    } else if (value.length >= 60) {\n        isValid = false;\n        message = 'Email too long';\n    }\n\n    return {\n        isValid,\n        message\n    }\n};\n\nconst passwordValidator: Validator = (value) => {\n    let isValid = true;\n    let message = '';\n\n    if (value.length === 0) {\n        isValid = false;\n        message = 'Email cannot be empty';\n    }\n\n    return {\n        isValid,\n        message\n    }\n};\n\nconst confirmPasswordValidator: Validator = (value, reference) => {\n    let isValid = true;\n    let message = '';\n\n    if (value !== reference) {\n        message = 'Not same as the password';\n        isValid = false;\n    }\n\n    return {\n        isValid,\n        message\n    }\n};\n\nconst postTitleValidator: Validator = (value) => {\n    let isValid = true;\n    let message = '';\n\n    if (value.length === 0) {\n        message = 'Title cannot be empty';\n        isValid = false;\n    }\n\n    return {\n        isValid,\n        message\n    }\n};\n\nconst commentValidator: Validator = (value) => {\n    let isValid = true;\n    let message = '';\n\n    if (value.length === 0) {\n        message = 'Comment cannot be empty';\n        isValid = false;\n    } else if (value.length < 5) {\n        message = 'Comment needs to be at least 5 characters';\n        isValid = false;\n    }\n\n    return {\n        isValid,\n        message\n    }\n};\n\nconst execValidators = (validators: (()=>boolean)[]) => {\n    const validationResults = validators.map(_ => _());\n    for (let i=0; i<validationResults.length; i++) {\n        if (!validationResults[i]) {\n            return false\n        }\n    }\n\n    return true\n};\n\nexport {\n    usernameValidator,\n    emailValidator,\n    passwordValidator,\n    confirmPasswordValidator,\n    execValidators,\n    postTitleValidator,\n    commentValidator\n}","const base = 'https://django-api-xiaoxihome.herokuapp.com/api/discussion_board/';\n// const base = 'http://127.0.0.1:8000/api/discussion_board/';\n\nconst accountBase = base + 'account/';\nconst login = accountBase + 'login/';\nconst register = accountBase + 'register/';\nconst verifySession = accountBase + 'verify_session/';\nconst refresh = accountBase + 'refresh/';\nconst updateAvatar = accountBase + 'update_avatar/';\n\nconst postBase = base + 'post/';\nconst getPostList = postBase + 'all/';\nconst getPostListWithTag = (tag: string) => postBase + 'all/' + `?tag=${tag}`;\nconst getPostDetail = (id: number) => `${postBase}${id}/`;\nconst createPost = postBase + 'create/';\nconst editPost = (id: number) => `${postBase}edit/${id}/`;\nconst deletePost = (id: number) => `${postBase}delete/${id}/`;\nconst tagList = postBase + 'tag-list/';\n\nconst commentBase = base + 'comment/';\nconst createComment = commentBase + 'create/';\n\nconst userActionsBase = base + 'user_actions/';\nconst like = userActionsBase + 'like/';\n\nconst urls = {\n    login,\n    register,\n    verifySession,\n    refresh,\n    updateAvatar,\n    getPostList,\n    getPostListWithTag,\n    getPostDetail,\n    createPost,\n    editPost,\n    deletePost,\n    tagList,\n    createComment,\n    like\n};\n\nexport default urls","import {useHistory, useLocation} from \"react-router-dom\";\n\n// redirect to \"/\" in these cases:\nconst blacklist: string[] = [\n    \"/login\",\n    \"/register\"\n];\n\nconst useRedirectBack = () => {\n    let history = useHistory();\n    let location = useLocation<any>();\n\n    const goBack = () => {\n        let from = \"/\";\n\n        if (location.state && location.state.from) {\n            if (typeof location.state.from === \"string\") {\n                if (blacklist.indexOf(location.state.from) === -1) {\n                    from = location.state.from\n                }\n            } else {\n                // from is object\n                if (location.state.from.pathname) {\n                    if (blacklist.indexOf(location.state.from.pathname) === -1) {\n                        from = Object.assign({}, location.state.from)\n                    }\n                }\n            }\n        }\n\n        history.replace(from);\n    };\n\n    return goBack\n};\n\nexport default useRedirectBack","import {useState} from \"react\";\nimport urls from \"./urls\";\nimport { useDispatch } from 'react-redux'\nimport { updateLoginStatus } from \"../redux/actions/login-status\";\nimport {openSnackbarWithConfetti} from \"../redux/actions/snackbar\";\nimport useRedirectBack from \"../utils/redirects/use-redirect-back\";\n\nconst useLogin = () => {\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(false);\n    const [errorMessage, setErrorMessage] = useState('');\n    const dispatch = useDispatch();\n    const goBack = useRedirectBack();\n\n    const login = (\n        email: string,\n        password: string\n    ) => {\n        if (loading) return;\n\n        // reset states\n        setError(false);\n        setErrorMessage('');\n\n        // start fetching\n        setLoading(true);\n        fetch(urls.login, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                email,\n                password\n            })\n        })\n            .then((res) => res.json())\n            .then(json => {\n                setLoading(false);\n\n                if (json.status === 'success') {\n                    const username = json.data.username;\n                    dispatch(updateLoginStatus({\n                        isLogin: true,\n                        username: username,\n                        token: {\n                            access: json.data.access,\n                            refresh: json.data.refresh\n                        }\n                    }));\n                    goBack();\n                    dispatch(openSnackbarWithConfetti(`Welcome back ${username}`));\n                } else {\n                    setError(true);\n                    if (json.status === 'error') {\n                        setErrorMessage(json.message)\n                    } else {\n                        setErrorMessage('Server unavailable, please try again later.')\n                    }\n                }\n            })\n            .catch(e => {\n                setLoading(false);\n\n                setError(true);\n                setErrorMessage('Server unavailable, please try again later.')\n            });\n    };\n\n    return [loading, error, errorMessage, login] as [boolean, boolean, string, typeof login]\n\n};\n\nexport default useLogin","import {Box, CircularProgress, Typography} from \"@material-ui/core\";\nimport React from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    errorMessage: {\n        fontWeight: 700,\n        color: theme.palette.error.main\n    }\n}));\n\ninterface ErrorMessageProps {\n    loading: boolean,\n    error: boolean,\n    errorMessage: string\n\n}\n\nconst ErrorMessage:React.FC<ErrorMessageProps> = ({loading, errorMessage, error}) => {\n    const classes = useStyles();\n\n    return (\n        <Typography variant={'body1'} component={'div'}>\n            <Box className={classes.errorMessage} height={40}>\n                {   loading ?\n                        <CircularProgress color=\"primary\" /> :\n                        error && errorMessage ?\n                            errorMessage :\n                            ' '\n                }\n            </Box>\n        </Typography>\n    )\n};\n\nexport default ErrorMessage","import React, {FormEvent} from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport LoginCommon from \"./commons/login-common\";\nimport {Box, Divider, Grid, TextField, Typography} from \"@material-ui/core\";\nimport FormButton from \"../commons/form-button\";\nimport {Link} from \"react-router-dom\";\nimport useInputField from \"../../utils/use-input-field\";\nimport {emailValidator, execValidators, passwordValidator} from \"../../utils/validators\";\nimport useLogin from \"../../requests/use-login\";\nimport ErrorMessage from \"../commons/error-message\";\n\nconst useStyles = makeStyles((theme) => ({\n    textField: {\n        width: '100%',\n        fontWeight: 700\n    },\n    link: {\n        fontWeight: 700,\n        '& a:link': {\n            color: theme.palette.primary.main\n        },\n        '& a:visited': {\n            color: theme.palette.primary.main\n        },\n        '& a:hover': {\n            color: theme.palette.secondary.main\n        }\n    }\n}));\n\ninterface LoginProps {\n\n}\n\nconst Login: React.FC<LoginProps> = () => {\n    const classes = useStyles();\n    const [email, setEmail, emailError, emailErrorMessage, validateEmail] = useInputField('', emailValidator);\n    const [password, setPassword, passwordError, passwordErrorMessage, validatePassword] = useInputField('', passwordValidator);\n\n    const [loading, error, errorMessage, login] = useLogin();\n\n    const submitHandler = (e: FormEvent) => {\n        e.preventDefault();\n\n        if (execValidators([validateEmail, validatePassword])) {\n            login(email, password)\n        }\n    };\n\n    return (\n        <LoginCommon imageUrl={'/images/login_bg.jpg'}>\n            <form onSubmit={submitHandler} id={'login-form'}>\n                <Grid container spacing={2}>\n                    <Grid item xs={12}>\n                        <Typography variant={'h5'} component={'h1'} color={\"textPrimary\"}>\n                            <Box textAlign={'center'} fontWeight={700}>\n                                Log In\n                            </Box>\n                        </Typography>\n                    </Grid>\n\n                    <Grid item xs={12}>\n                        <Grid container justify={'center'}>\n                            <TextField\n                                error={emailError}\n                                label=\"Email\"\n                                id=\"login-email\"\n                                name=\"email\"\n                                value={email}\n                                onChange={setEmail}\n                                variant=\"outlined\"\n                                helperText={emailError ? emailErrorMessage: ' '}\n                                className={classes.textField}\n                            />\n                        </Grid>\n                    </Grid>\n\n                    <Grid item xs={12}>\n                        <Grid container justify={'center'}>\n                            <TextField\n                                error={passwordError}\n                                type=\"password\"\n                                label=\"Password\"\n                                id=\"login-password\"\n                                name=\"password\"\n                                value={password}\n                                onChange={setPassword}\n                                variant=\"outlined\"\n                                helperText={passwordError ? passwordErrorMessage : ' '}\n                                className={classes.textField}\n                            />\n                        </Grid>\n                    </Grid>\n\n                    <Grid item xs={12}>\n                        <Grid container justify={'center'}>\n                            <FormButton text={'Log me in!'} form={'login-form'} disabled={loading}/>\n                        </Grid>\n                    </Grid>\n\n                    <Grid item xs={12}>\n                        <Grid container justify={'center'}>\n                            <ErrorMessage loading={loading} error={error} errorMessage={errorMessage}/>\n                        </Grid>\n                    </Grid>\n\n                    <Grid item xs={12}>\n                        <Divider />\n                    </Grid>\n\n                    <Grid item xs={12} className={classes.link}>\n                        <Grid container justify={'center'}>\n                            <Link to={'/register'}>\n                                Need an account?\n                            </Link>\n                        </Grid>\n                    </Grid>\n\n                </Grid>\n            </form>\n        </LoginCommon>\n    )\n\n};\n\nexport default Login\n","import {useState} from \"react\";\nimport urls from \"./urls\";\nimport { useDispatch } from 'react-redux'\nimport { updateLoginStatus } from \"../redux/actions/login-status\";\nimport {openSnackbarWithConfetti} from \"../redux/actions/snackbar\";\nimport useRedirectBack from \"../utils/redirects/use-redirect-back\";\n\nconst useRegister = () => {\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(false);\n    const [errorMessage, setErrorMessage] = useState('');\n    const dispatch = useDispatch();\n    const goBack = useRedirectBack();\n\n    const register = (\n        username: string,\n        email: string,\n        password: string,\n        confirmPassword: string\n    ) => {\n        if (loading) return;\n\n        // reset states\n        setError(false);\n        setErrorMessage('');\n\n        // start fetching\n        setLoading(true);\n        fetch(urls.register, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                username,\n                email,\n                password,\n                'confirm_password': confirmPassword\n            })\n        })\n            .then((res) => res.json())\n            .then(json => {\n                setLoading(false);\n\n                if (json.status === 'success') {\n                    dispatch(updateLoginStatus({\n                        isLogin: true,\n                        username: json.data.username,\n                        token: {\n                            access: json.data.access,\n                            refresh: json.data.refresh\n                        }\n                    }));\n\n                    goBack();\n                    dispatch(openSnackbarWithConfetti(`Welcome ${username}!`));\n                } else {\n                    setError(true);\n                    if (json.status === 'error') {\n                        setErrorMessage(json.message)\n                    } else {\n                        setErrorMessage('Server unavailable, please try again later.')\n                    }\n                }\n            })\n            .catch(e => {\n                setLoading(false);\n\n                setError(true);\n                setErrorMessage('Server unavailable, please try again later.')\n            });\n    };\n\n    return [loading, error, errorMessage, register] as [boolean, boolean, string, typeof register]\n\n};\n\nexport default useRegister","import React, {FormEvent} from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Box, Divider, Grid, TextField, Typography} from \"@material-ui/core\";\nimport FormButton from \"../commons/form-button\";\nimport {Link} from \"react-router-dom\";\nimport LoginCommon from \"./commons/login-common\";\nimport useInputField from \"../../utils/use-input-field\";\nimport {\n    confirmPasswordValidator,\n    emailValidator,\n    execValidators,\n    passwordValidator,\n    usernameValidator\n} from \"../../utils/validators\";\nimport ErrorMessage from \"../commons/error-message\";\nimport useRegister from \"../../requests/use-register\";\n\nconst useStyles = makeStyles((theme) => ({\n    textField: {\n        width: '100%',\n        fontWeight: 700\n    },\n    link: {\n        fontWeight: 700,\n        '& a:link': {\n            color: theme.palette.primary.main\n        },\n        '& a:visited': {\n            color: theme.palette.primary.main\n        },\n        '& a:hover': {\n            color: theme.palette.secondary.main\n        }\n    }\n}));\n\ninterface RegisterProps {\n\n}\n\nconst Register: React.FC<RegisterProps> = () => {\n    const classes = useStyles();\n\n    const [username, setUsername, usernameError, usernameErrorMessage, validateUsername] = useInputField('', usernameValidator);\n    const [email, setEmail, emailError, emailErrorMessage, validateEmail] = useInputField('', emailValidator);\n    const [password, setPassword, passwordError, passwordErrorMessage, validatePassword] = useInputField('', passwordValidator);\n    const [confirmPassword, setConfirmPassword, confirmPasswordError, confirmPasswordErrorMessage, validateConfirmPassword] = useInputField('', confirmPasswordValidator);\n\n    const [loading, error, errorMessage, register] = useRegister();\n\n    const submitHandler = (e: FormEvent) => {\n        e.preventDefault();\n        const validationCheck1 = execValidators([validateUsername, validateEmail, validatePassword]);\n        const validationCheck2 =  validateConfirmPassword(password);\n        if (validationCheck1 && validationCheck2) {\n            register(username, email, password, confirmPassword)\n        }\n    };\n\n    const formID = 'register-form';\n\n    return (\n        <LoginCommon imageUrl={'/images/register_bg.jpg'}>\n            <form onSubmit={submitHandler} id={formID}>\n                <Grid container spacing={2}>\n                    <Grid item xs={12}>\n                        <Typography variant={'h5'} component={'h1'} color={\"textPrimary\"}>\n                            <Box textAlign={'center'} fontWeight={700}>\n                                Join Us\n                            </Box>\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Grid container justify={'center'}>\n                            <TextField\n                                error={usernameError}\n                                label=\"Username\"\n                                id=\"register-username\"\n                                name=\"username\"\n                                value={username}\n                                onChange={setUsername}\n                                helperText={usernameError ? usernameErrorMessage: ' '}\n                                variant=\"outlined\"\n                                className={classes.textField}\n                            />\n                        </Grid>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Grid container justify={'center'}>\n                            <TextField\n                                error={emailError}\n                                label=\"Email\"\n                                id=\"register-email\"\n                                name=\"email\"\n                                value={email}\n                                onChange={setEmail}\n                                helperText={emailError ? emailErrorMessage: ' '}\n                                variant=\"outlined\"\n                                className={classes.textField}\n                            />\n                        </Grid>\n                    </Grid>\n                    <Grid item xs={12} md={6}>\n                        <Grid container justify={'center'}>\n                            <TextField\n                                error={passwordError}\n                                label=\"Password\"\n                                name=\"password\"\n                                id=\"register-password\"\n                                type=\"password\"\n                                value={password}\n                                onChange={setPassword}\n                                helperText={passwordError ? passwordErrorMessage: ' '}\n                                variant=\"outlined\"\n                                className={classes.textField}\n                            />\n                        </Grid>\n                    </Grid>\n                    <Grid item xs={12} md={6}>\n                        <Grid container justify={'center'}>\n                            <TextField\n                                error={confirmPasswordError}\n                                label=\"Confirm Password\"\n                                name=\"confirm-password\"\n                                id=\"register-confirm-password\"\n                                type=\"password\"\n                                value={confirmPassword}\n                                onChange={setConfirmPassword}\n                                helperText={confirmPasswordError ? confirmPasswordErrorMessage: ' '}\n                                variant=\"outlined\"\n                                className={classes.textField}\n                            />\n                        </Grid>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Grid container justify={'center'}>\n                            <FormButton text={'I\\'m in!'} form={formID} disabled={false}/>\n                        </Grid>\n                    </Grid>\n\n                    <Grid item xs={12}>\n                        <Grid container justify={'center'}>\n                            <ErrorMessage loading={loading} error={error} errorMessage={errorMessage}/>\n                        </Grid>\n                    </Grid>\n\n                    <Grid item xs={12}>\n                        <Divider />\n                    </Grid>\n                    <Grid item xs={12} className={classes.link}>\n                        <Grid container justify={'center'}>\n                            <Link to={'/login'}>\n                                Already have an account?\n                            </Link>\n                        </Grid>\n                    </Grid>\n\n                </Grid>\n            </form>\n        </LoginCommon>\n    )\n};\n\nexport default Register\n","import React from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Button as MuiButton} from \"@material-ui/core\";\nimport {Link, useLocation} from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n    button: {\n        backgroundColor: 'rgba(255,255,255,0.3)',\n        color: '#fff',\n        fontWeight: 700,\n        textTransform: 'capitalize',\n        letterSpacing: 'inherit',\n        borderBottom: '2px solid rgba(0,0,0,0.1)',\n        borderRadius: '5px',\n        // margin: '0 4px',\n        padding: '4px 10px',\n        '&:hover': {\n            backgroundColor: theme.palette.secondary.main\n        }\n    }\n}));\n\ninterface ButtonProps {\n    text: string,\n    url?: string,\n    onClick?: () => void\n}\n\nconst ThemeButton: React.FC<ButtonProps> = ({text, url, onClick}) => {\n    const classes = useStyles();\n    const location = useLocation();\n\n    if (url) {\n        const to = {\n            pathname: url,\n            state: {\n                from: location.pathname\n            }\n        };\n        return (\n            <MuiButton variant=\"contained\" classes={{root: classes.button}} disableElevation component={Link} to={to}>\n                { text }\n            </MuiButton>\n        )\n    } else {\n        return (\n            <MuiButton variant=\"contained\" classes={{root: classes.button}} disableElevation onClick={onClick}>\n                { text }\n            </MuiButton>\n        )\n    }\n};\n\nexport default ThemeButton\n","import {useHistory} from \"react-router-dom\";\n\nconst useRedirectToHome = () => {\n    const history = useHistory();\n\n    const toHome = () => {\n        history.replace('/404');\n        history.replace('/');\n    };\n\n    return toHome\n};\n\nexport default useRedirectToHome","import {useState} from \"react\";\nimport { useDispatch } from 'react-redux'\nimport {logout as logoutAction} from \"../redux/actions/login-status\";\nimport {openSnackbar} from \"../redux/actions/snackbar\";\nimport useRedirectToHome from \"../utils/redirects/use-redirect-to-home\";\n\nconst useLogout = () => {\n    const [loading, setLoading] = useState(false);\n    const dispatch = useDispatch();\n    const toHome = useRedirectToHome();\n\n    const clientSideLogout = () => {\n        dispatch(logoutAction());\n        toHome();\n\n        dispatch(openSnackbar('Logout succeeded'))\n    };\n\n    const logout = () => {\n        clientSideLogout()\n    };\n\n    return [loading, logout] as [typeof loading, typeof logout]\n\n};\n\nexport default useLogout","import ThemeButton from \"../commons/theme-button\";\nimport React from \"react\";\nimport {Box, CircularProgress, Grid, Typography} from \"@material-ui/core\";\nimport useLogout from \"../../requests/use-logout\";\n\ninterface LoggedInUserPanelProps {\n    username: string\n}\n\nconst LoggedInUserPanel: React.FC<LoggedInUserPanelProps> = ({username}) => {\n    const [loading, logout] = useLogout();\n\n    return (\n        <Grid container alignItems={\"center\"} justify={\"center\"} spacing={1}>\n            <Grid item>\n                <Typography component={'div'}>\n                    <Box>\n                        { username }\n                    </Box>\n                </Typography>\n            </Grid>\n            <Grid item>\n                {\n                    loading ?\n                        <CircularProgress color=\"secondary\" size={'1rem'}/> :\n                        <ThemeButton text={'Logout'} onClick={logout}/>\n                }\n            </Grid>\n        </Grid>\n    )\n};\n\nexport default LoggedInUserPanel","import ThemeButton from \"../commons/theme-button\";\nimport React from \"react\";\nimport {Grid} from \"@material-ui/core\";\n\nconst AnonymousUserPanel: React.FC = () => {\n    return (\n        <Grid container alignItems={\"center\"} justify={\"center\"} spacing={1}>\n            <Grid item>\n                <ThemeButton text={'Join'} url={'/register'}/>\n            </Grid>\n            <Grid item>\n                <ThemeButton text={'Login'} url={'/login'}/>\n            </Grid>\n        </Grid>\n    )\n};\n\nexport default AnonymousUserPanel","import {Box, Typography} from \"@material-ui/core\";\nimport {Link} from \"react-router-dom\";\nimport React from \"react\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        fontFamily: [\n            'Oleo Script Swash Caps',\n            'sans-serif',\n        ].join(','),\n        fontWeight: 700,\n        fontSize: '1.5rem',\n        [theme.breakpoints.up('md')]: {\n            fontSize: '1.75rem',\n        },\n        fontStyle: \"normal\",\n        color: \"#fff\",\n        whiteSpace: 'nowrap'\n    }\n}));\n\nconst Logo: React.FC = () => {\n    const classes = useStyles();\n\n    return (\n        <Typography variant={'h1'} component={'h1'} className={classes.root}>\n            <Box fontWeight={700} textAlign={\"center\"}>\n                <Link to={'/'}>\n                    Blog | XiaoxiHome\n                </Link>\n            </Box>\n        </Typography>\n    )\n};\n\nexport default Logo","import React from 'react';\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Grid} from \"@material-ui/core\";\nimport LoggedInUserPanel from \"./logged-in-user-panel\";\nimport AnonymousUserPanel from \"./anonymous-user-panel\";\nimport Logo from \"../commons/logo\";\n\ninterface HeaderProps {\n    isLogin: boolean,\n    username: string,\n}\n\nconst useStyles = makeStyles((theme) => ({\n    headerDimension: {\n        width: '100%',\n        height: '80px',\n    },\n    root: {\n        backgroundColor: theme.palette.primary.main,\n        position: 'fixed',\n        zIndex: theme.zIndex.appBar,\n        left: 0,\n        top: 0,\n        color: theme.palette.primary.contrastText,\n        padding: theme.spacing(0, 1)\n    },\n    placeholder: {\n        position: 'relative',\n    },\n    button: {\n        backgroundColor: 'rgba(255,255,255,0.5)',\n        color: '#fff',\n        fontWeight: 700,\n        textTransform: 'capitalize',\n        '&:hover': {\n            backgroundColor: theme.palette.secondary.main\n        }\n    }\n}));\n\n\nconst Header: React.FC<HeaderProps> = ({isLogin, username}) => {\n    const classes = useStyles();\n\n    return (\n        <header className={`${classes.placeholder} ${classes.headerDimension}`}>\n            <Grid container alignItems={\"center\"} justify={\"center\"} className={`${classes.root} ${classes.headerDimension}`}>\n                <Grid item xs={6} md={4}>\n                    <Logo/>\n                </Grid>\n                <Grid item xs={1} md={4}>\n\n                </Grid>\n                <Grid item xs={5} md={4}>\n                    {\n                        isLogin ?\n                            <LoggedInUserPanel username={username}/> :\n                            <AnonymousUserPanel />\n                    }\n                </Grid>\n            </Grid>\n        </header>\n    )\n};\n\n\n\nexport default Header;\n","import {connect} from \"react-redux\";\nimport Header from \"../components/header/header\";\nimport {State} from \"../redux/state\";\n\nfunction mapStateToProps(state: State) {\n    return {\n        isLogin: state.loginStatus.isLogin,\n        username: state.loginStatus.username\n    }\n}\n\nconst HeaderContainer = connect(\n    mapStateToProps\n)(Header);\n\nexport default HeaderContainer;\n","const GENERIC_ERROR_MESSAGE = 'Server is not available right now, please try again later';\n\nexport default GENERIC_ERROR_MESSAGE","import {useHistory, useLocation} from \"react-router-dom\";\n\nconst useRedirectToLogin = () => {\n    const history = useHistory();\n    const location = useLocation();\n\n    const redirectToLogin = () => {\n        history.push({\n            pathname: \"/login\",\n            state: {\n                from: location.pathname\n            }\n        });\n    };\n\n    return redirectToLogin\n};\n\nexport default useRedirectToLogin","import urls from \"../urls\";\nimport {useDispatch, useStore} from 'react-redux'\nimport { refreshToken as refreshTokenAction } from '../../redux/actions/login-status'\nimport {State} from \"../../redux/state\";\nimport useRedirectToLogin from \"../../utils/redirects/use-redirect-to-login\";\n\n/**\n * enhanced fetch with JWT token verification, and token refreshing when needed\n * return a promise of actual fetch if token is valid or refreshed successfully\n * if specified by @param redirect, redirect to login page if token is invalid or expired\n * no need to pass Authorization Header in @param options\n */\nconst useFetchWithTokenVerification = () => {\n    const state = useStore<State>().getState();\n    const isLogin = state.loginStatus.isLogin;\n    const refreshToken = state.loginStatus.token.refresh;\n    const dispatch = useDispatch();\n    const redirectToLogin = useRedirectToLogin();\n\n    const getAccessHeader = (token?: string) => ({\n        'Authorization': `Bearer ${token || state.loginStatus.token.access}`\n    });\n\n    const fetchWithTokenVerification = async (redirect: boolean, url: RequestInfo, options: RequestInit): Promise<Response> => {\n        try {\n            // delete Authorization header in options in case it is provided\n            if (options.headers !== undefined) {\n                const headers = options.headers as Record<string, string>;\n                if (headers['Authorization']) {\n                    delete headers['Authorization'];\n                    options.headers = {...headers}\n                }\n            }\n\n            const noAuthenticationHandler = (): Promise<Response> => {\n                // don't worry about unsolved promise memory leak\n                // https://stackoverflow.com/questions/20068467/does-never-resolved-promise-cause-memory-leak\n                if (redirect) {\n                    return new Promise((resolve, reject) => {\n                        redirectToLogin();\n                    });\n                } else {\n                    return fetch(url, {\n                        ...options\n                    })\n                }\n            };\n\n            // not login\n            if (!isLogin) {\n                return noAuthenticationHandler();\n            }\n\n            // verify if access token still valid\n            const res = await fetch(urls.verifySession, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    ...getAccessHeader()\n                }\n            });\n            const json = await res.json();\n            if (json.status === 'success') {\n                // access token still valid\n                options.headers = {\n                    ...options.headers,\n                    ...getAccessHeader()\n                };\n                return fetch(url, {...options})\n            }\n\n            // access token not valid\n            // try refresh\n            const refreshRes = await fetch(urls.refresh, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    refresh: refreshToken\n                })\n            });\n            const refreshJson = await refreshRes.json();\n            if (refreshJson.status === 'success') {\n                // refresh successful\n                dispatch(refreshTokenAction(refreshJson.data.access));\n                options.headers = {\n                    ...options.headers,\n                    ...getAccessHeader(refreshJson.data.access)\n                };\n                return fetch(url, {...options})\n            }\n\n            // refresh failed\n            return noAuthenticationHandler();\n        } catch (e) {\n            console.log(e);\n            return new Promise((resolve, reject) => {\n                reject(e.messages);\n            });\n        }\n    };\n\n    return fetchWithTokenVerification\n};\n\nexport default useFetchWithTokenVerification;","import {useEffect, useState} from \"react\";\nimport GENERIC_ERROR_MESSAGE from \"./generic-error-message\";\nimport useFetchWithTokenVerification from \"./use-fetch-with-token-verification\";\n\n/**\n * Generic hook to fetch data with get method, with authentications\n * @param {string} url The link to fetch\n * @param {boolean} fetchWhenComponentDidMount If true, will fetch automatically when componentDidMount\n * @param {boolean} redirectInvalidToken Redirect to login page if true\n */\nconst useProtectedGet = <FetchedDataType,>(\n    url: RequestInfo,\n    fetchWhenComponentDidMount: boolean,\n    redirectInvalidToken: boolean\n) => {\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(false);\n    const [errorMessage, setErrorMessage] = useState('');\n    const [data, setData] = useState<FetchedDataType | null>(null);\n\n    const fetchWithTokenVerification = useFetchWithTokenVerification();\n\n    useEffect(() => {\n        if (fetchWhenComponentDidMount) {\n            doGet(url, redirectInvalidToken)\n        }\n    }, []);\n\n    const doGet = async (\n        url: RequestInfo,\n        redirectInvalidToken: boolean\n    ) => {\n        try {\n            if (loading) return;\n\n            // reset states\n            setError(false);\n            setErrorMessage('');\n\n            // start fetching\n            setLoading(true);\n            const res = await fetchWithTokenVerification(redirectInvalidToken, url, {});\n            const json = await res.json();\n\n            // server responded\n            setLoading(false);\n            if (json.status === 'success') {\n                setData(json.data)\n            } else if (json.status === 'error') {\n                setError(true);\n                setErrorMessage(json.message || GENERIC_ERROR_MESSAGE)\n            }\n            else {\n                console.log(json);\n                setError(true);\n            }\n        } catch (e) {\n            console.log(e);\n            setLoading(false);\n            setError(true);\n            setErrorMessage(GENERIC_ERROR_MESSAGE)\n        }\n    };\n\n    return {\n        loading,\n        error,\n        errorMessage,\n        data,\n        doGet\n    }\n\n};\n\nexport default useProtectedGet","import {useEffect} from \"react\";\nimport urls from \"./urls\";\nimport {PostData} from \"../components/post-list/post\";\nimport useProtectedGet from \"./common/use-protected-get\";\n\nconst useGetPostList = (tag: string | null) => {\n    const url = tag === null ?\n        urls.getPostList :\n        urls.getPostListWithTag(tag);\n\n    const {\n        loading,\n        error,\n        data,\n        doGet\n    } = useProtectedGet<PostData[]>(url, false, false);\n\n    useEffect(() => {\n        doGet(url, false)\n    }, [tag]);\n\n    return [loading, error, data] as [typeof loading, typeof error, typeof data]\n};\n\nexport default useGetPostList","const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n\nconst getTimeString = (ISOString: string) => {\n    const date = new Date(ISOString);\n    const hour = date.getHours() < 10 ? `0${date.getHours()}` : date.getHours();\n    const minute = date.getMinutes() < 10 ? `0${date.getMinutes()}` : date.getMinutes();\n    return `${date.getDate()} ${months[date.getMonth()]}, ${date.getFullYear()} - ${hour}:${minute}`\n};\n\nexport default getTimeString","import {useState} from \"react\";\nimport GENERIC_ERROR_MESSAGE from \"./generic-error-message\";\nimport useFetchWithTokenVerification from \"./use-fetch-with-token-verification\";\n\n/**\n * The base of fetch with get method\n * @return {usePost~doPost} The actual post function\n */\nconst usePost = <ResponseDataType,>() => {\n    const fetchWithTokenVerification = useFetchWithTokenVerification();\n\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(false);\n    const [errorMessage, setErrorMessage] = useState('');\n    const [data, setData] = useState<ResponseDataType | null>(null);\n\n    /**\n     * The actual post function\n     * @param {string} url The link to fetch\n     * @param {boolean} options The options that will be passed to fetch\n     * @param {boolean} redirectInvalidToken Redirect to login page if true\n     * @param {boolean} callbackOnSuccess A function to be called upon success response is received\n     * @param {boolean} callbackOnError A function to be called upon error response is received\n     * @param {boolean} callbackOnUnknownError A function to be called upon unexpected error is captured\n     */\n    const doPost = async (\n        url: RequestInfo,\n        options: RequestInit,\n        redirectInvalidToken: boolean,\n        callbackOnSuccess?: (<T>(data?: T) => void) | null,\n        callbackOnError?: ((message: string) => void) | null,\n        callbackOnUnknownError?: (() => void) | null,\n    ) => {\n        try {\n            if (loading) return;\n\n            // reset states\n            setError(false);\n            setErrorMessage('');\n            setLoading(true);\n\n            // start fetching\n            const res = await fetchWithTokenVerification(redirectInvalidToken, url, {...options});\n            const json = await res.json();\n\n            // response received\n            setLoading(false);\n            if (json.status === 'success') {\n                setData(json.data);\n                if (callbackOnSuccess) callbackOnSuccess(json.data);\n            } else if (json.status === 'error') {\n                setErrorMessage(json.message);\n                setError(true);\n                if (callbackOnError) callbackOnError(json.message);\n            } else {\n                setErrorMessage(GENERIC_ERROR_MESSAGE);\n                setError(true);\n                if (callbackOnUnknownError) callbackOnUnknownError();\n            }\n        } catch (e) {\n            console.log(e);\n            setLoading(false);\n            setErrorMessage(GENERIC_ERROR_MESSAGE);\n            setError(true);\n            if (callbackOnUnknownError) callbackOnUnknownError();\n        }\n    };\n\n    return {\n        loading,\n        error,\n        errorMessage,\n        data,\n        doPost\n    }\n};\n\nexport default usePost","import {useDispatch} from \"react-redux\";\nimport urls from \"./urls\";\nimport {openSnackbar} from \"../redux/actions/snackbar\";\nimport {PostData} from \"../components/post-list/post\";\nimport usePost from \"./common/use-post\";\nimport GENERIC_ERROR_MESSAGE from \"./common/generic-error-message\";\n\ntype Type = 'post' | 'comment';\ntype Action = 1 | 0 | -1;\n\nconst useLike = (type: Type, id: string) => {\n    const dispatch = useDispatch();\n\n    const {\n        loading,\n        error,\n        data: updatedData,\n        doPost\n    } = usePost<PostData>();\n\n    const like = async (\n        action: Action\n    ) => {\n        const options = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                \"target_type\": type,\n                \"target_id\": id,\n                action\n            })\n        };\n        const errorCallback = (message: string) => {\n            dispatch(openSnackbar(message || GENERIC_ERROR_MESSAGE));\n        };\n        const unknownErrorCallback = () => {\n            dispatch(openSnackbar(GENERIC_ERROR_MESSAGE));\n        };\n\n        doPost(urls.like, options, true, null, errorCallback, unknownErrorCallback);\n    };\n\n    return [loading, error, updatedData, like] as [typeof loading, typeof error, typeof updatedData, typeof like]\n};\n\nexport default useLike;","import IconButton from \"@material-ui/core/IconButton\";\nimport ThumbUpRoundedIcon from \"@material-ui/icons/ThumbUpRounded\";\nimport green from \"@material-ui/core/colors/green\";\nimport ThumbDownRoundedIcon from \"@material-ui/icons/ThumbDownRounded\";\nimport red from \"@material-ui/core/colors/red\";\nimport React from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport useLike from \"../../requests/use-like\";\n\nconst useStyles = makeStyles((theme) => ({\n    likeButtons: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'center',\n        marginLeft: '-14px'\n    },\n    buttonText: {\n        lineHeight: 1,\n        color: theme.palette.grey[\"500\"],\n        fontSize: '0.875rem',\n        fontWeight: 700,\n    },\n    button: {\n        color: theme.palette.grey[\"400\"],\n        fontSize: '1.25rem'\n    },\n}));\n\ninterface LikeButtonsProps {\n    type: 'post' | 'comment',\n    id: string\n    likes: number,\n    dislikes: number,\n    isLiked: 0 | 1 | -1 | undefined\n}\n\nconst LikeButtons: React.FC<LikeButtonsProps> = ({type, id, likes, dislikes, isLiked}) => {\n    const classes = useStyles();\n\n    const [likeLoading, likeError, updatedData, like] = useLike(type, id);\n    if (updatedData !== null) {\n        likes = updatedData.likes;\n        dislikes = updatedData.dislikes;\n        if (updatedData['is_liked'] !== undefined) {\n            isLiked = updatedData['is_liked']\n        }\n    }\n\n    const likedByUser = isLiked === 1;\n    const dislikedByUser = isLiked === -1;\n\n    const likeToggler = () => {\n        likedByUser ? like(0) : like(1);\n    };\n\n    const dislikeToggler = () => {\n        dislikedByUser ? like(0) : like(-1);\n    };\n\n    return (\n        <div className={classes.likeButtons}>\n            <IconButton aria-label={`like ${type}`} disabled={likeLoading} onClick={likeToggler}>\n                <ThumbUpRoundedIcon className={classes.button} style={likedByUser ? {color: green[300]} : {}}/>\n            </IconButton>\n            <div className={classes.buttonText}>\n                { likes }\n            </div>\n            <IconButton aria-label={`dislike ${type}`} disabled={likeLoading} onClick={dislikeToggler}>\n                <ThumbDownRoundedIcon className={classes.button} style={dislikedByUser ? {color: red[300]} : {}}/>\n            </IconButton>\n            <div className={classes.buttonText}>\n                { dislikes }\n            </div>\n        </div>\n    )\n};\n\nexport default LikeButtons","import React from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Chip from \"@material-ui/core/Chip\";\nimport {Box} from \"@material-ui/core\";\nimport { fade } from '@material-ui/core/styles/colorManipulator';\nimport {Link} from \"react-router-dom\";\n\ninterface TagChipProps {\n    text: string\n    size: 'small' | 'normal'\n}\n\nconst useStyles = makeStyles((theme) => ({\n    inheritColor: {\n        color: theme.palette.primary.contrastText,\n    },\n    chipRoot: {\n        borderRadius: 2,\n        height: 'auto',\n        backgroundColor: fade(theme.palette.primary.main, 0.5),\n        transitions: theme.transitions.create('background-color'),\n        '&:hover': {\n            backgroundColor: theme.palette.primary.main,\n        },\n        '&:focus': {\n            backgroundColor: theme.palette.primary.main,\n        }\n    },\n    chipLabelSmall: {\n        padding: '0 5px',\n        fontSize: theme.typography.caption.fontSize\n    },\n    chipLabelNormal: {\n        padding: '2px 15px',\n        fontSize: theme.typography.caption.fontSize,\n        fontWeight: 700\n    },\n}));\n\nconst TagChip: React.FC<TagChipProps> = ({text, size}) => {\n    const classes = useStyles();\n\n    return (\n        <Box className={classes.inheritColor}>\n            <Chip\n                label={text.toUpperCase()}\n                component={Link}\n                to={`/tag/${text}`}\n                clickable\n                classes={{\n                    clickable: classes.chipRoot,\n                    label: size === 'small' ? classes.chipLabelSmall : classes.chipLabelNormal\n                }}\n            />\n        </Box>\n    )\n};\n\nexport default TagChip","import React from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Box, Paper, Typography} from \"@material-ui/core\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport {Link} from \"react-router-dom\";\nimport getTimeString from \"../../utils/get-time-string\";\nimport LikeButtons from \"../commons/like-buttons\";\nimport TagChip from \"../commons/tag-chip\";\n\nexport interface PostData {\n    id: string\n    title: string,\n    content: string,\n    likes: number,\n    dislikes: number,\n    created: string,\n    comments: number\n    owner: {\n        email: string,\n        username: string,\n        avatar_url: string\n    },\n    tag: string,\n    \"is_liked\"?: 0 | 1 | -1\n}\n\ninterface PostProps {\n    isLogin: boolean,\n    data: PostData\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        margin: theme.spacing(1, 0)\n    },\n    paper: {\n        width: '100%',\n        minHeight: '100px',\n        padding: theme.spacing(2),\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'flex-start'\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.primary.light\n    },\n    content: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'flex-start',\n        justifyContent: 'center',\n    },\n    title: {\n        margin: theme.spacing(0, 2),\n        '& h2': {\n            fontSize: '1.25rem',\n            fontWeight: 700,\n            color: theme.palette.text.primary,\n            margin: theme.spacing(0),\n            lineHeight: 1.2\n        },\n        '& h2:hover': {\n            color: theme.palette.primary.main,\n        }\n    },\n    author: {\n        margin: theme.spacing(0, 2),\n    },\n    actionArea: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'flex-start',\n        color: theme.palette.grey[\"500\"],\n        fontSize: '0.875rem',\n        fontWeight: 700,\n        [theme.breakpoints.down('md')]: {\n            flexDirection: 'column',\n            alignItems: 'flex-start',\n            justifyContent: 'center',\n        }\n    },\n    actionItem: {\n        margin: theme.spacing(0, 2)\n    }\n}));\n\nconst Post: React.FC<PostProps> = ({isLogin, data}) => {\n    const classes = useStyles();\n    const isLiked = isLogin ? data.is_liked : undefined;\n\n    return (\n        <div className={classes.root}>\n            <Paper className={classes.paper} elevation={0}>\n                <Avatar variant=\"rounded\" className={classes.avatar} src={data.owner.avatar_url}>\n                    { data.owner.username.charAt(0) }\n                </Avatar>\n                <div className={classes.content}>\n                    <div className={classes.title}>\n                        <Link to={`/post/${data.id}`}>\n                            <h2>\n                                { data.title }\n                            </h2>\n                        </Link>\n                    </div>\n                    <div className={classes.author}>\n                        <Typography variant={'caption'} component={'div'}>\n                            <Box>\n                                { data.owner.username }\n                            </Box>\n                        </Typography>\n                    </div>\n                    <div className={classes.author}>\n                        <TagChip text={data.tag} size={'small'}/>\n                    </div>\n                    <div className={classes.actionArea}>\n                        <div className={classes.actionItem}>\n                            <LikeButtons type={'post'} id={data.id} likes={data.likes} dislikes={data.dislikes} isLiked={isLiked}/>\n                        </div>\n                        <div className={classes.actionItem}>\n                            { `${data.comments} ${data.comments > 1 ? 'comments' : 'comment'}` }\n                        </div>\n                        <div className={classes.actionItem}>\n                            { getTimeString(data.created) }\n                        </div>\n                    </div>\n                </div>\n            </Paper>\n        </div>\n    )\n};\n\nexport default Post","import React, {useEffect, useState} from 'react';\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport {fade, Paper} from \"@material-ui/core\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from '@material-ui/icons/Close';\nimport Fade from \"@material-ui/core/Fade\";\n\nconst DELAY = 3000; // ms\nconst FADE_ANIMATION_DURATION = 500;\nlet timeoutID: null | number = null;\n\n/**\n * 1. init states: active === false, isMount === false --> null component returned\n * 2. switch active and isMount to true after DELAY after component is mounted --> actual component returned, fade in animation is activated\n * 3. if isLoaded props set to true within DELAY --> step 2 will be canceled\n * 4. if isLoaded props set to true after DELAY --> step 5\n * 5. active set to false, fade out animation is activated\n * 6. isMounted will be set to false when fade out animation is done\n */\nexport const useServerWaking = () => {\n    // the state of fade is in\n    const [active, setActive] = useState(false);\n    // the state of mounting (null component returned if !isMount)\n    const [isMount, setIsMount] = useState(false);\n\n    const cleanUp = () => {\n        if (timeoutID !== null) {\n            clearTimeout(timeoutID);\n            timeoutID = null;\n        }\n    };\n\n    const showNotification = () => {\n        setIsMount(true);\n        setActive(true)\n    };\n\n    const handleLoaded = () => {\n        cleanUp();\n        if (active) {\n            setActive(false)\n        }\n    };\n\n    const turnToInactive = () => {\n        if (active) {\n            setActive(false)\n        }\n    };\n\n    const unMount = () => {\n        if (isMount) {\n            setIsMount(false)\n        }\n    };\n\n    useEffect(() => {\n        // set active to true after DELAY\n        timeoutID = window.setTimeout(showNotification, DELAY);\n\n        return () => {\n            cleanUp();\n        }\n    }, []);\n\n    return {\n        active,\n        handleLoaded,\n        turnToInactive,\n        isMount,\n        unMount\n    }\n};\n\ninterface HeaderProps {\n    isLoaded: boolean\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        backgroundColor: theme.palette.warning.light,\n        color: theme.palette.warning.contrastText,\n        padding: theme.spacing(1, 2),\n        margin: theme.spacing(1, 0, 0, 0),\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'flex-start'\n    },\n    text: {\n        width: 'calc(100% - 50px)'\n    },\n    button: {\n        width: '50px',\n    },\n    noWrap: {\n        whiteSpace: 'nowrap'\n    },\n    link: {\n        '&:link': {\n            textDecoration: 'underline',\n            fontWeight: 700\n        },\n        '&:visited': {\n            textDecoration: 'underline',\n            fontWeight: 700\n        },\n        '&:hover': {\n            color: fade(theme.palette.warning.contrastText, 0.5)\n        }\n    }\n}));\n\n\nconst ServerWakingNotification: React.FC<HeaderProps> = ({isLoaded}) => {\n    const classes = useStyles();\n\n    const {active, handleLoaded, turnToInactive, isMount, unMount} = useServerWaking();\n\n    useEffect(() => {\n        if (isLoaded) handleLoaded();\n    }, [isLoaded, handleLoaded]);\n\n    if (isMount) {\n        return (\n            <Fade in={active} timeout={FADE_ANIMATION_DURATION} onExited={unMount}>\n                <Paper elevation={0} className={classes.root}>\n                    <div className={classes.text}>\n                        <p>\n                            {'The backend of this application falls asleep again, usually he will wake up in half minute '}\n                            <span className={classes.noWrap}>\n                                ٩(ˊ〇ˋ*)و\n                            </span>\n                        </p>\n                        <p>\n                            <span>Wanna check out </span>\n                            <a\n                                href='https://www.xiaoxihome.com/'\n                                target='_blank'\n                                rel='noopener noreferrer'\n                                className={classes.link}\n                            >\n                                XiaoxiHome\n                            </a>\n                            <span> while waiting?</span>\n                        </p>\n                    </div>\n                    <IconButton aria-label=\"close\" name=\"close\" title=\"close\" onClick={turnToInactive} className={classes.button}>\n                        <CloseIcon />\n                    </IconButton>\n                </Paper>\n            </Fade>\n        )\n    } else {\n        return null\n    }\n};\n\nexport default ServerWakingNotification;\n","import React, {useEffect, useMemo, useState} from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport useGetPostList from \"../../requests/use-get-post-list\";\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport {Box, Typography} from \"@material-ui/core\";\nimport Post from \"./post\";\nimport ServerWakingNotification from \"./server-waking-notification\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        // padding: theme.spacing(0, 2)\n    }\n}));\n\ninterface PostListProps {\n    isLogin: boolean\n    tag: string | null\n}\n\nconst PostList: React.FC<PostListProps> = ({isLogin, tag}) => {\n    const classes = useStyles();\n    const [loading, error, data] = useGetPostList(tag || null);\n    const isLoaded = data !== null;\n\n    let content;\n    if (loading || !isLoaded) {\n        content = (new Array(10)).fill(0).map((_, i) => {\n            return (\n                <Box width='100%' my={1} borderRadius={'5px'} key={i} overflow={'hidden'}>\n                    <Skeleton variant=\"rect\" animation=\"wave\" width={'100%'} height={150}/>\n                </Box>\n            )\n        })\n    } else if (error) {\n        content = (\n            <Typography variant={'body1'} component={'h2'}>\n                <Box fontWeight={700} color={'primary.main'} textAlign={'center'}>\n                    Server is unavailable now, please try again later\n                </Box>\n            </Typography>\n        )\n    } else {\n        content = data?.map((_, i) =>  <Post key={i} isLogin={isLogin} data={_}/> )\n    }\n\n    return (\n        <div className={classes.root}>\n            <ServerWakingNotification isLoaded={isLoaded}/>\n            { content }\n        </div>\n    )\n};\n\nexport default PostList\n","import {connect} from \"react-redux\";\nimport {State} from \"../redux/state\";\nimport PostList from \"../components/post-list/post-list\";\n\nfunction mapStateToProps(state: State) {\n    return {\n        isLogin: state.loginStatus.isLogin\n    }\n}\n\n// function mapDispatchToProps(dispatch: Dispatch) {\n//     return {\n//         closeSnackbar: () => dispatch(closeSnackbar())\n//     }\n// }\n\nconst PostListContainer = connect(\n    mapStateToProps\n)(PostList);\n\nexport default PostListContainer;\n","import {Button} from \"@material-ui/core\";\nimport React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\n\nconst useStyles = makeStyles((theme) => ({\n    button: {\n        backgroundColor: theme.palette.primary.light,\n        maxWidth: '100%',\n        color: '#fff',\n        fontWeight: 700,\n        textTransform: 'capitalize',\n        letterSpacing: 'inherit',\n        borderBottom: '2px solid rgba(0,0,0,0.1)',\n        borderRadius: '5px',\n        padding: '4px 10px',\n        '& span': {\n            color: '#fff',\n        },\n        '&:hover': {\n            backgroundColor: theme.palette.secondary.main\n        }\n    }\n}));\n\ninterface BaseButtonProps {\n    width: string,\n    text: string\n}\n\ninterface GenericClickButtonProps extends BaseButtonProps {\n    onClick: any,\n    disabled?: boolean\n}\n\nconst GenericClickButton: React.FC<GenericClickButtonProps> = ({width, text, onClick, disabled}) => {\n    const classes = useStyles();\n\n    return (\n            <Button variant=\"contained\" classes={{root: classes.button}} disableElevation onClick={onClick} style={{width: width}} disabled={disabled}>\n                { text }\n            </Button>\n    )\n};\n\ninterface GenericLinkButtonProps extends BaseButtonProps {\n    link: string\n}\n\nconst GenericLinkButton: React.FC<GenericLinkButtonProps> = ({width, text, link}) => {\n    const classes = useStyles();\n\n    return (\n        <Button variant=\"contained\" classes={{root: classes.button}} disableElevation component={Link} to={link} style={{width: width}}>\n            { text }\n        </Button>\n    )\n};\n\nexport {GenericClickButton, GenericLinkButton};","import React from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport {GenericLinkButton} from \"../commons/generic-button\";\n\ninterface SideBarProps {\n    isLogin: boolean\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: 'calc(100% - 16px)',\n        minHeight: '100px',\n        margin: '8px',\n        padding: '24px 0',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        [theme.breakpoints.down('md')]: {\n            width: '100%',\n            margin: '8px 0',\n        }\n    },\n    rowWrapper: {\n        width: '80%',\n        margin: '8px 0'\n    }\n}));\n\nconst SideBar: React.FC<SideBarProps> = ({isLogin}) => {\n    const classes = useStyles();\n\n    return (\n        <Paper className={classes.root} elevation={0}>\n            <div className={classes.rowWrapper}>\n                <GenericLinkButton link={'/edit-post'} width={'100%'} text={'Create Post'}/>\n            </div>\n            {\n                isLogin &&\n                <div className={classes.rowWrapper}>\n                    <GenericLinkButton link={'/account-setting'} width={'100%'} text={'Account Settings'}/>\n                </div>\n            }\n        </Paper>\n    )\n};\n\nexport default SideBar","import {connect} from \"react-redux\";\nimport {State} from \"../redux/state\";\nimport SideBar from \"../components/side-bar/side-bar\";\n\nfunction mapStateToProps(state: State) {\n    return {\n        isLogin: state.loginStatus.isLogin\n    }\n}\n\nconst SideBarContainer = connect(\n    mapStateToProps\n)(SideBar);\n\nexport default SideBarContainer;\n","import React from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Chip from \"@material-ui/core/Chip\";\nimport {Box} from \"@material-ui/core\";\nimport { fade } from '@material-ui/core/styles/colorManipulator';\nimport {useHistory} from 'react-router-dom'\n\ninterface ActiveTagChipProps {\n    text: string\n}\n\nconst useStyles = makeStyles((theme) => ({\n    inheritColor: {\n        color: theme.palette.primary.contrastText,\n    },\n    chipRoot: {\n        borderRadius: 5,\n        backgroundColor: fade(theme.palette.primary.main, 0.5),\n        transitions: theme.transitions.create('background-color'),\n        '&:hover': {\n            backgroundColor: theme.palette.primary.main,\n        },\n        '&:focus': {\n            backgroundColor: theme.palette.primary.main,\n        }\n    },\n    chipLabel: {\n        padding: '2px 20px',\n        fontSize: theme.typography.body2.fontSize,\n        fontWeight: 700\n    },\n}));\n\nconst ActiveTagChip: React.FC<ActiveTagChipProps> = ({text}) => {\n    const classes = useStyles();\n    let history = useHistory();\n\n    const handleDelete = () => {\n        history.push('/')\n    };\n\n    return (\n        <Box className={classes.inheritColor}>\n            <Chip\n                label={text.toUpperCase()}\n                onDelete={handleDelete}\n                color={'primary'}\n                classes={{\n                    deletable: classes.chipRoot,\n                    label: classes.chipLabel\n                }}\n            />\n        </Box>\n    )\n};\n\nexport default ActiveTagChip","import React from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport PostListContainer from \"../../containers/post-list-container\";\nimport SideBarContainer from \"../../containers/side-bar-container\";\nimport {useParams} from \"react-router-dom\";\nimport ActiveTagChip from \"./active-tag-chip\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        margin: theme.spacing(2, 0),\n        width: '100%',\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'flex-start',\n        justifyContent: 'center',\n        flexWrap: 'wrap',\n        [theme.breakpoints.down('md')]: {\n            flexDirection: 'column',\n            margin: 0,\n        }\n    },\n    tags: {\n        margin: theme.spacing(2, 0, 0, 0),\n        width: \"100%\",\n    },\n    left: {\n        width: \"75%\",\n        [theme.breakpoints.down('md')]: {\n            width: \"100%\",\n        }\n    },\n    right: {\n        width: \"25%\",\n        [theme.breakpoints.down('md')]: {\n            width: \"100%\",\n        }\n    }\n}));\n\ninterface MainPageProps {\n\n}\n\nconst MainPage: React.FC<MainPageProps> = () => {\n    const classes = useStyles();\n    const { tag } = useParams();\n\n    return (\n        <div className={classes.root}>\n            {\n                tag !== undefined &&\n                <div className={classes.tags}>\n                    <ActiveTagChip text={tag}/>\n                </div>\n            }\n            <div className={classes.left}>\n                <PostListContainer tag={tag || null}/>\n            </div>\n            <div className={classes.right}>\n                <SideBarContainer />\n            </div>\n        </div>\n    )\n};\n\nexport default MainPage","import React from \"react\";\nimport {\n    Box,\n    createStyles,\n    IconButton,\n    Snackbar as MuiSnackbar,\n    SnackbarContent,\n} from \"@material-ui/core\";\nimport Close from '@material-ui/icons/Close';\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles((theme) => createStyles({\n    root: {\n\n    },\n    content: {\n        backgroundColor: theme.palette.primary.main,\n    },\n}));\n\ninterface SnackbarProps {\n    open: boolean,\n    closeSnackbar: () => void,\n    message: string\n}\n\nconst Snackbar: React.FC<SnackbarProps> = ({open, closeSnackbar, message}) => {\n    const classes = useStyles();\n\n    return (\n        <MuiSnackbar\n            anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'center',\n            }}\n            open={open}\n            autoHideDuration={5000}\n            onClose={closeSnackbar}\n            className={classes.root}\n        >\n            <SnackbarContent\n                className={classes.content}\n                message={\n                    <Typography variant={'body1'} component={'div'}>\n                        <Box fontWeight={700}>\n                            { message }\n                        </Box>\n                    </Typography>\n                }\n                action={[\n                    <IconButton key=\"close\" aria-label=\"close\" color=\"inherit\" onClick={closeSnackbar}>\n                        <Close/>\n                    </IconButton>\n                ]}\n            />\n        </MuiSnackbar>\n    )\n};\n\nexport default Snackbar;","import {connect} from \"react-redux\";\nimport Snackbar from \"../components/snackbar/snackbar\";\nimport {State} from \"../redux/state\";\nimport {Dispatch} from \"redux\";\nimport {closeSnackbar} from \"../redux/actions/snackbar\";\n\nfunction mapStateToProps(state: State) {\n    return {\n        open: state.snackbar.open,\n        message: state.snackbar.message\n    }\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch) {\n    return {\n        closeSnackbar: () => dispatch(closeSnackbar())\n    }\n}\n\nconst SnackbarContainer = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Snackbar);\n\nexport default SnackbarContainer;\n","import React from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\n\ntype FooterColumnData = {\n    title: string,\n    url: string\n}[]\n\ninterface FooterColumnProps {\n    data: FooterColumnData\n}\n\nconst userStyles = makeStyles((theme) => ({\n    root: {\n        listStyleType: 'none',\n        margin: 0,\n        padding: 0\n    },\n    header: {\n        fontSize: '1.25rem',\n        margin: '8px 0',\n        letterSpacing: '0',\n        fontWeight: 700\n    },\n    content: {\n        fontSize: '0.875rem',\n        padding: '2px',\n        '&:hover': {\n            color: theme.palette.secondary.main\n        }\n    }\n}));\n\nconst FooterColumn: React.FC<FooterColumnProps> = ({data}) => {\n    const classes = userStyles();\n\n    return (\n        <ul className={classes.root}>\n            {\n                data.map((item, i) => {\n                    if (i === 0) {\n                        return (\n                            <li key={i}>\n                                <div className={classes.header}>\n                                    { item.title }\n                                </div>\n                            </li>\n                        )\n                    } else {\n                        return (\n                            <li key={i}>\n                                <a href={item.url} target=\"_blank\" rel=\"noopener noreferrer\">\n                                    <div className={classes.content}>\n                                        { item.title }\n                                    </div>\n                                </a>\n                            </li>\n                            )\n                    }\n                })\n            }\n        </ul>\n    )\n};\n\nexport default FooterColumn","import React from \"react\";\nimport {Grid, Paper} from \"@material-ui/core\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Logo from \"../commons/logo\";\nimport FooterColumn from \"./footer-column\";\n\nconst column1 = [\n    {\n        title: 'Learn More',\n        url: ''\n    },\n    {\n        title: 'API Endpoints',\n        url: 'https://www.google.ca/'\n    },\n    {\n        title: 'GitHub',\n        url: 'https://github.com/CptDoraemon/discussion-board-client'\n    },\n    {\n        title: 'XiaoxiHome',\n        url: 'https://www.xiaoxihome.com/'\n    },\n];\n\nconst userStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        margin: '40px 0 8px 0'\n    },\n    paper: {\n        width: '100%',\n        backgroundColor: '#4a5568',\n        color: '#a0aec0',\n        padding: theme.spacing(5)\n    },\n    copyright: {\n        width: '100%',\n        margin: theme.spacing(5, 0, 0, 0),\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'center',\n        fontSize: '0.8rem'\n    }\n}));\n\nconst Footer: React.FC = () => {\n    const classes = userStyles();\n\n    return (\n        <footer className={classes.root}>\n            <Paper className={classes.paper}>\n                <Grid container spacing={5}>\n                    <Grid item>\n                        <Logo/>\n                    </Grid>\n                    <Grid item>\n                        <FooterColumn data={column1} />\n                    </Grid>\n                </Grid>\n                <div className={classes.copyright}>\n                    <div>\n                        © 2020 XiaoxiHome.com\n                    </div>\n                </div>\n            </Paper>\n        </footer>\n    )\n};\n\nexport default Footer","import {\n    Route,\n    Redirect\n} from \"react-router-dom\";\nimport React from \"react\";\n\ninterface PrivateRouteProps {\n    isLogin: boolean,\n    path: string\n}\n\nconst PrivateRoute: React.FC<PrivateRouteProps> = ({ children, isLogin, ...rest}) => {\n    return (\n        <Route\n            {...rest}\n            render={({ location }) =>\n                isLogin ? (\n                    children\n                ) : (\n                    <Redirect\n                        to={{\n                            pathname: \"/login\",\n                            state: { from: location }\n                        }}\n                    />\n                )\n            }\n        />\n    );\n};\n\nexport default PrivateRoute","import {useState} from \"react\";\nimport urls from \"./urls\";\nimport useFetchWithTokenVerification from \"./common/use-fetch-with-token-verification\";\n\nconst usePostSubmission = () => {\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(false);\n    const [errorMessage, setErrorMessage] = useState('');\n    const [submitted, setSubmitted] = useState(false);\n    const fetchWithTokenVerification = useFetchWithTokenVerification();\n\n    const submit = async (\n        title: string,\n        tag: string,\n        content: string,\n        objectURLArray: string[],\n        updatePostID?: number\n    ) => {\n        try {\n            if (loading || submitted) return;\n\n            // reset states\n            setError(false);\n            setErrorMessage(' ');\n            setLoading(true);\n\n            //\n            objectURLArray = removeUnusedObjectURL(content, objectURLArray);\n\n            //\n            const form = await getForm(title, tag, content, objectURLArray);\n            const url = updatePostID === undefined ? urls.createPost : urls.editPost(updatePostID);\n            const res = await fetchWithTokenVerification(true, url, {\n                method: 'POST',\n                body: form\n            });\n            const json = await res.json();\n            setLoading(false);\n            if (json.status === 'success') {\n                setSubmitted(true)\n            } else {\n                setErrorMessage(json.message);\n                setError(true)\n            }\n        } catch (e) {\n            console.log(e);\n            setLoading(false);\n            setErrorMessage('Server is not available please try again later');\n            setError(true)\n        }\n    };\n\n    return [loading, error, errorMessage, submit, submitted] as [typeof loading, typeof error, typeof errorMessage, typeof submit, typeof submitted]\n};\n\nconst removeUnusedObjectURL = (content: string, objectURLArray: string[]) => {\n    // some images may be deleted while editing\n    return objectURLArray.filter(url => content.indexOf(url) !== -1)\n};\n\ninterface NamedBlob {\n    blob: Blob,\n    name: string\n}\n\nconst getForm = (title: string, tag: string, content: string, objectURLArray: string[]) => {\n    return new Promise<FormData>((resolve, reject) => {\n        const form = new FormData();\n        form.append('title', title);\n        form.append('tag', tag);\n\n        const promiseArray = objectURLArray.map((url) => getBlobFromObjectURL(url));\n\n        Promise.all<NamedBlob>(promiseArray)\n            .then(blobs => {\n                blobs.forEach((blob, i) => {\n                    // blob name has format of:\n                    // blob:http://localhost:3000/f4d49560-de4e-420b-bcdf-64bfa833a555\n                    // use the pathname as the filename (eg: f4d49560-de4e-420b-bcdf-64bfa833a555)\n                    // replace the url in content with the new filename\n                    const urlComponents = blob.name.split('/');\n                    let filename = urlComponents[urlComponents.length - 1].length === 0 ?\n                        urlComponents[urlComponents.length - 2] :\n                        urlComponents[urlComponents.length - 1];\n\n                    content = content.replace(blob.name, filename);\n                    // file ext is .jpg because it was loaded with js, drawn in canvas ans exported as jpg\n                    form.append(`file${i}`, blob.blob, blob.name + '.jpg')\n                });\n                form.append('content', content);\n                resolve(form);\n            })\n    })\n};\n\nconst getBlobFromObjectURL = (url: string) => {\n    return new Promise<NamedBlob>((resolve, reject) => {\n        fetch(url)\n            .then(res => res.blob())\n            .then(blob => resolve({\n                blob,\n                name: url\n            }))\n            .catch((e) => reject(e))\n    })\n};\n\nexport default usePostSubmission","import {useEffect, useState} from \"react\";\nimport Quill from \"quill\";\nimport loadImage from \"blueimp-load-image\";\n\nconst objectURLArray: string[] = [];\n\nconst useEditor = (ID: string) => {\n    const [quill, setQuill] = useState<Quill | null>(null);\n\n    useEffect(() => {\n        // override methods to support objectURL\n        const Image = Quill.import('formats/image');\n        const Link = Quill.import('formats/link');\n        Image.sanitize = function(url: string) {\n            return Link.sanitize(url, ['http', 'https', 'data']) ? url : '//:0';\n        };\n        //\n        const quillInstance = new Quill(`#${ID}`, {\n            modules: {\n                toolbar: [\n                    [{header: [1, 2, false]}],\n                    ['bold', 'italic', 'underline'],\n                    ['link', 'image', 'code-block']\n                ],\n                clipboard: {\n                    matchVisual: false\n                }\n            },\n            placeholder: 'Compose an epic...',\n            theme: 'snow'  // or 'bubble'\n        });\n        quillInstance.getModule('toolbar').addHandler('image', () => imageUploadHandler(quillInstance));\n\n        setQuill(quillInstance)\n    }, [ID]);\n\n    const getObjectURLArray = () => {\n        return objectURLArray\n    };\n\n    const setContent = (content: string) => {\n        if (!quill) return;\n        const delta = quill.clipboard.convert(content);\n        quill.setContents(delta)\n    };\n\n    return [quill, getObjectURLArray, setContent] as [typeof quill, typeof getObjectURLArray, typeof setContent]\n};\n\nconst imageUploadHandler = (editor: Quill) => {\n    const input = document.createElement('input');\n    input.setAttribute('type', 'file');\n    input.setAttribute('accept', 'image/*');\n    input.click();\n    input.onchange = () => {\n        if (!input.files) return;\n        const image = input.files[0];\n        loadImage(\n            image,\n             (canvas) => {\n                // @ts-ignore\n                canvas.toBlob((blob) => {\n                    const objectURL = URL.createObjectURL(blob);\n\n                    const range = editor.getSelection();\n                    if (range) {\n                        editor.insertEmbed(range.index, 'image', `${objectURL}`);\n                        objectURLArray.push(objectURL)\n                    }\n                }, 'image/jpeg');\n            },\n            {\n                orientation: true,\n                canvas: true\n            }\n        );\n    }\n};\n\nexport default useEditor;\n","import {useEffect} from \"react\";\n\nconst defaultTitle = 'Blog | XiaoxiHome';\n\nfunction useSetTitle(title?: string) {\n\n    useEffect(() => {\n        document.title = title || defaultTitle;\n\n        return () => {\n            document.title = defaultTitle;\n        }\n    }, [title]);\n}\n\nexport default useSetTitle;","import urls from \"./urls\";\nimport {PostDetailData} from \"../components/post-detail/post-detail\";\nimport useSetTitle from \"../utils/use-set-title\";\nimport useProtectedGet from \"./common/use-protected-get\";\n\nconst useGetPostDetail = () => {\n    const {\n        loading,\n        error,\n        data,\n        doGet,\n    } = useProtectedGet<PostDetailData>('', false, false);\n\n    useSetTitle(data?.title);\n\n    const fetchPostDetail = (\n        postID: number\n    ) => {\n        doGet(urls.getPostDetail(postID), false);\n    };\n\n    return [loading, error, data, fetchPostDetail] as [typeof loading, typeof error, typeof data, typeof fetchPostDetail]\n\n};\n\nexport default useGetPostDetail","import {useEffect, useState} from \"react\";\nimport GENERIC_ERROR_MESSAGE from \"./generic-error-message\";\n\n/**\n * Generic hook to fetch data with get method, with no authentications\n * @param {string} url The link to fetch\n * @param {boolean} fetchWhenComponentDidMount If true, will fetch automatically when componentDidMount\n */\nconst useUnprotectedGet = <FetchedDataType,>(\n    url: RequestInfo,\n    fetchWhenComponentDidMount: boolean\n) => {\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(false);\n    const [errorMessage, setErrorMessage] = useState('');\n    const [data, setData] = useState<FetchedDataType | null>(null);\n\n    useEffect(() => {\n        if (fetchWhenComponentDidMount) {\n            doGet()\n        }\n    }, []);\n\n    const doGet = async (\n    ) => {\n        try {\n            if (loading) return;\n            // reset states\n            setError(false);\n            setErrorMessage('');\n\n            // start fetching\n            setLoading(true);\n            const res = await fetch(url);\n            const json = await res.json();\n\n            // server responded\n            setLoading(false);\n            if (json.status === 'success') {\n                setData(json.data)\n            } else if (json.status === 'error') {\n                setError(true);\n                setErrorMessage(json.message || GENERIC_ERROR_MESSAGE)\n            }\n            else {\n                console.log(json);\n                setError(true);\n            }\n        } catch (e) {\n            console.log(e);\n            setLoading(false);\n            setError(true);\n            setErrorMessage(GENERIC_ERROR_MESSAGE)\n        }\n    };\n\n    return {\n        loading,\n        error,\n        errorMessage,\n        data,\n        doGet\n    }\n\n};\n\nexport default useUnprotectedGet","import urls from \"./urls\";\nimport useUnprotectedGet from \"./common/use-unprotected-get\";\n\nconst useGetTagList = () => {\n    const {\n        loading,\n        error,\n        data\n    } = useUnprotectedGet<string[][]>(urls.tagList, true);\n\n    return [loading, error, data] as [typeof loading, typeof error, typeof data]\n\n};\n\nexport default useGetTagList","import React from \"react\";\nimport {FormControl} from \"@material-ui/core\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {fade} from \"@material-ui/core/styles/colorManipulator\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        backgroundColor: fade(theme.palette.primary.main, 0.8),\n        color: theme.palette.primary.contrastText,\n        borderRadius: 5,\n        padding: '5px 15px',\n        '&:focus': {\n            backgroundColor: fade(theme.palette.primary.main, 0.8),\n            color: theme.palette.primary.contrastText,\n            borderRadius: 5,\n        },\n    },\n    icon: {\n        color: theme.palette.primary.contrastText,\n    },\n    menuItemRoot: {\n        '&:hover': {\n            backgroundColor: theme.palette.primary.main,\n        },\n        '&:focus': {\n            backgroundColor: theme.palette.primary.main,\n        }\n    },\n    menuRoot: {\n        backgroundColor: theme.palette.primary.light,\n        color: theme.palette.primary.contrastText,\n        borderRadius: 5,\n    }\n}));\n\ninterface TagSelectorProps {\n    tagList: string[][],\n    tagValue: string,\n    tagChangeHandler: (e: any) => void\n}\n\nconst TagSelector: React.FC<TagSelectorProps> = ({tagList, tagValue, tagChangeHandler}) => {\n    const classes = useStyles();\n\n    return (\n        <Select\n            value={tagValue}\n            onChange={tagChangeHandler}\n            displayEmpty\n            disableUnderline\n            classes={{\n                root: classes.root,\n                icon: classes.icon\n            }}\n            MenuProps={{\n                classes: {\n                    paper: classes.menuRoot,\n                }\n            }}\n        >\n            {\n                tagList.map(arr => {\n                    const tag = arr[0];\n                    const humanReadable = arr[1];\n                    return (\n                        <MenuItem\n                            value={tag}\n                            key={tag}\n                            classes={{\n                                root: classes.menuItemRoot\n                            }}\n                        >{humanReadable}</MenuItem>\n                        )\n                })\n            }\n        </Select>\n    )\n};\n\nexport default TagSelector","import React, {FormEvent, useEffect, useState} from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport 'quill/dist/quill.snow.css';\nimport {FormControl, FormHelperText, Input, InputLabel, Paper} from \"@material-ui/core\";\nimport useInputField from \"../../utils/use-input-field\";\nimport {postTitleValidator} from \"../../utils/validators\";\nimport {GenericClickButton} from \"../commons/generic-button\";\nimport usePostSubmission from \"../../requests/use-post-submission\";\nimport ErrorMessage from \"../commons/error-message\";\nimport useEditor from \"./use-editor\";\nimport useGetPostDetail from \"../../requests/use-get-post-detail\";\nimport Box from \"@material-ui/core/Box\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport useGetTagList from \"../../requests/use-get-tag-list\";\nimport TagSelector from \"./tag-selector\";\n\nconst ID = 'editor';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        padding: theme.spacing(2)\n    },\n    editor: {\n        width: '100%',\n        minHeight: '300px',\n        marginBottom: '16px',\n    },\n    title: {\n        width: '100%',\n    }\n}));\n\nconst PostEditor: React.FC = () => {\n    const classes = useStyles();\n    const {postID} = useParams();\n    const [needData, setNeedData] = useState(true);\n    const [postDetailLoading, postDetailError, postDetailData, fetchPostDetail] = useGetPostDetail();\n    const [tagListLoading, tagListError, tagList] = useGetTagList();\n\n    useEffect(() => {\n        if (postID === undefined) {\n            setNeedData(false)\n        } else {\n            fetchPostDetail(parseInt(postID))\n        }\n    }, []);\n\n    const showEditor = (!needData || postDetailData !== null) && tagList !== null;\n\n    return (\n        <Paper className={classes.root} elevation={0}>\n            {\n                !showEditor &&\n                    <Box width={\"100%\"} height={500} display={\"flex\"} flexDirection={\"column\"} alignItems={\"center\"} justifyContent={\"center\"}>\n                        {\n                            postDetailError || tagListError ?\n                                \"Cannot retrieve post data at the moment\" :\n                                <CircularProgress color=\"primary\" />\n                        }\n                    </Box>\n            }\n            {\n                !needData && showEditor &&\n                    <PostEditorForm tagList={tagList || []}/>\n            }\n            {\n                postDetailData !== null && showEditor &&\n                    <PostEditorForm\n                        tagList={tagList || []}\n                        updatePost={{\n                            title: postDetailData.title,\n                            content: postDetailData.content,\n                            postID: parseInt(postDetailData.id),\n                            tag: postDetailData.tag\n                        }}\n                    />\n            }\n        </Paper>\n    )\n};\n\ninterface PostEditorFormProps {\n    updatePost?: {\n        title: string,\n        content: string,\n        postID: number,\n        tag: string\n    },\n    tagList: string[][]\n}\n\nconst PostEditorForm: React.FC<PostEditorFormProps> = ({updatePost, tagList}) => {\n    // create new post if updatePost === undefined\n    // else update existing post\n    const classes = useStyles();\n\n    const defaultTitle = updatePost === undefined ? \"\" : updatePost.title;\n    const defaultTag = updatePost === undefined ? tagList[0][0] : updatePost.tag;\n    const [editor, getObjectURLArray, setContent] = useEditor(ID);\n    const [title, titleChangeHandler, titleError, titleErrorMessage, validateTitle] = useInputField(defaultTitle, postTitleValidator);\n    const [tag, setTag] = useState<string>(defaultTag);\n    const [loading, error, errorMessage, submit, submitted] = usePostSubmission();\n\n    useEffect(() => {\n        if (!editor || updatePost === undefined) return;\n        setContent(updatePost.content)\n    }, [editor, updatePost]);\n\n    const submitHandler = (e: FormEvent) => {\n        e.preventDefault();\n        if (!validateTitle()) return;\n\n        if (!editor) return;\n        if (updatePost === undefined) {\n            submit(title, tag, editor.root.innerHTML, getObjectURLArray())\n        } else {\n            submit(title, tag, editor.root.innerHTML, getObjectURLArray(), updatePost.postID)\n        }\n    };\n\n    const tagChangeHandler = (e: any) => {\n        setTag(e.target.value)\n    };\n\n    return (\n        <form>\n            <FormControl className={classes.title}>\n                <InputLabel htmlFor=\"post-editor-title\">Title</InputLabel>\n                <Input\n                    id=\"post-editor-title\"\n                    aria-describedby=\"post-editor-title-helper-text\"\n                    value={title}\n                    onChange={titleChangeHandler}\n                />\n                <FormHelperText id=\"post-editor-title-helper-text\" error={titleError}>{titleError && titleErrorMessage ? titleErrorMessage : ' '}</FormHelperText>\n            </FormControl>\n\n            <Box mb={2}>\n                {'Tag: '}\n                <TagSelector tagList={tagList} tagValue={tag} tagChangeHandler={tagChangeHandler}/>\n            </Box>\n\n            <div id={ID} className={classes.editor}/>\n            <GenericClickButton onClick={submitHandler} width={'250px'} text={submitted ? 'Submitted' : 'Submit'} disabled={submitted || loading}/>\n            <ErrorMessage loading={loading} error={error} errorMessage={errorMessage}/>\n        </form>\n    )\n};\n\nexport default PostEditor\n","import {useHistory, useLocation} from \"react-router-dom\";\n\nconst useReload = () => {\n    const history = useHistory();\n    const location = useLocation();\n\n    const reload = () => {\n        history.replace('/');\n        history.replace(location)\n    };\n\n    return reload\n};\n\nexport default useReload","import urls from \"./urls\";\nimport useReload from \"../utils/redirects/use-reload\";\nimport usePost from \"./common/use-post\";\n\nconst useCommentSubmission = () => {\n    const reload = useReload();\n    const {\n        loading,\n        error,\n        errorMessage,\n        doPost\n    } = usePost();\n\n    const submit = (\n        content: string,\n        parentPost: string,\n        parentComment: string | null\n    ) => {\n        const options = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                'content': content,\n                'parent_post': parentPost,\n                'parent_comment': parentComment\n            })\n        };\n        doPost(urls.createComment, options, true, reload);\n    };\n\n    return [loading, error, errorMessage, submit] as [typeof loading, typeof error, typeof errorMessage, typeof submit]\n};\n\nexport default useCommentSubmission","import {TextField} from \"@material-ui/core\";\nimport {GenericClickButton} from \"../commons/generic-button\";\nimport ErrorMessage from \"../commons/error-message\";\nimport React, {FormEvent} from \"react\";\nimport useInputField from \"../../utils/use-input-field\";\nimport {commentValidator} from \"../../utils/validators\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport useCommentSubmission from \"../../requests/use-comment-submission\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        margin: '16px 0'\n    },\n    input: {\n        width: '100%',\n    }\n}));\n\ninterface CommentInputProps {\n    parentPost: string,\n    parentComment: string | null\n}\n\nconst CommentInput: React.FC<CommentInputProps> = ({parentPost, parentComment}) => {\n    const classes = useStyles();\n    const [comment, commentChangeHandler, commentError, commentErrorMessage, validateComment] = useInputField('', commentValidator);\n    const [loading, error, errorMessage, submit] = useCommentSubmission();\n\n    const submitHandler = (e: FormEvent) => {\n        e.preventDefault();\n\n        if (!validateComment()) return;\n        submit(comment, parentPost, parentComment)\n    };\n\n    return (\n        <form className={classes.root}>\n            <TextField\n                id=\"comment-input\"\n                label=\"Leave comment\"\n                name=\"comment\"\n                value={comment}\n                onChange={commentChangeHandler}\n                error={commentError}\n                helperText={commentError && commentErrorMessage ? commentErrorMessage : ' '}\n                variant=\"outlined\"\n                className={classes.input}\n            />\n\n            <GenericClickButton onClick={submitHandler} width={'250px'} text={'Submit'} disabled={loading}/>\n            {\n                error && errorMessage &&\n                <ErrorMessage loading={loading} error={error} errorMessage={errorMessage}/>\n            }\n        </form>\n    )\n};\n\nexport default CommentInput","import Avatar from \"@material-ui/core/Avatar\";\nimport getTimeString from \"../../utils/get-time-string\";\nimport LikeButtons from \"../commons/like-buttons\";\nimport React from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    postInfo: {\n        width: '100%',\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'flex-start',\n        color: theme.palette.grey[500],\n        fontWeight: 700,\n        [theme.breakpoints.down('md')]: {\n            flexDirection: 'column',\n            alignItems: 'flex-start',\n            justifyContent: 'center',\n        }\n    },\n    avatar: {\n        backgroundColor: theme.palette.primary.main\n    },\n    avatarSmall: {\n        width: '1.2rem',\n        height: '1.2rem',\n        fontSize: '0.8rem'\n    },\n    username: {\n        color: theme.palette.text.primary\n    },\n    postInfoItem: {\n        margin: theme.spacing(0, 2),\n        [theme.breakpoints.down('md')]: {\n            margin: '4px 0',\n        }\n    }\n}));\n\ninterface ItemInfoProps {\n    type: 'comment' | 'post',\n    isLogin: boolean,\n    username: string,\n    avatarUrl: string\n    created: string,\n    id: string,\n    likes: number,\n    dislikes: number,\n    isLiked: -1 | 0 | 1 | undefined,\n    small?: boolean\n}\n\nconst ItemInfo: React.FC<ItemInfoProps> = ({type, isLogin, username, avatarUrl, created, id, likes, dislikes, isLiked, small}) => {\n    const classes = useStyles();\n    const _isLiked = isLogin ? isLiked : undefined;\n\n    return (\n        <div className={classes.postInfo}>\n            <div className={classes.postInfoItem}>\n                <Avatar\n                    variant=\"rounded\"\n                    className={small ? `${classes.avatar} ${classes.avatarSmall}` : classes.avatar}\n                    src={avatarUrl}\n                >\n                    { username.charAt(0) }\n                </Avatar>\n            </div>\n            <div className={`${classes.postInfoItem} ${classes.username}`}>\n                { username }\n            </div>\n            <div className={classes.postInfoItem}>\n                { getTimeString(created) }\n            </div>\n            <div className={classes.postInfoItem}>\n                <LikeButtons type={type} id={id} likes={likes} dislikes={dislikes} isLiked={_isLiked}/>\n            </div>\n        </div>\n    )\n};\n\nexport default ItemInfo","import React from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport ItemInfo from \"./item-info\";\nimport {SubCommentData} from \"./comment-item\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        // margin: theme.spacing(2, 0),\n        width: '100%',\n    },\n    content: {\n        margin: '32px'\n    },\n}));\n\ninterface SubCommentItemProps {\n    isLogin: boolean,\n    data: SubCommentData\n}\n\nconst SubCommentItem: React.FC<SubCommentItemProps> = ({isLogin, data}) => {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <ItemInfo\n                type={'comment'}\n                isLogin={isLogin}\n                username={data.owner.username}\n                avatarUrl={data.owner.avatar_url}\n                created={data.created}\n                id={data.id}\n                likes={data.likes}\n                dislikes={data.dislikes}\n                isLiked={data.is_liked}\n                small\n            />\n            <div className={classes.content}>\n                { data.content }\n            </div>\n        </div>\n    )\n\n};\n\nexport default SubCommentItem","import React, {useState} from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Box, Divider, Fade, Paper} from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ItemInfo from \"./item-info\";\nimport ChatIcon from '@material-ui/icons/Chat';\nimport Button from \"@material-ui/core/Button\";\nimport SubCommentItem from \"./sub-comment-item\";\nimport CommentInput from \"./comment-input\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        margin: '20px 0',\n        width: '100%',\n        padding: theme.spacing(2)\n    },\n    content: {\n        margin: '32px'\n    },\n    commentButton: {\n        margin: '0 32px',\n        color: theme.palette.grey[500],\n    },\n    subCommentPanel: {\n        width: 'calc(100% - 32px)',\n        margin: '8px 0 8px 32px',\n        border: `1px solid ${theme.palette.grey[400]}`,\n        borderRadius: '5px',\n        padding: theme.spacing(2)\n    }\n}));\n\ninterface CommentBaseData {\n    id: string,\n    owner: {\n        username: string,\n        email: string,\n        avatar_url: string\n    }\n    likes: number,\n    dislikes: number,\n    content: string,\n    created: string,\n    is_liked: 0 | 1 | -1 | undefined,\n    is_owner?: boolean\n}\n\nexport interface CommentData extends CommentBaseData {\n    sub_comments: CommentBaseData[]\n}\n\nexport interface SubCommentData extends CommentBaseData {}\n\n\ninterface CommentItemProps {\n    data: CommentData,\n    postID: string,\n    isLogin: boolean\n}\n\nconst CommentItem: React.FC<CommentItemProps> = ({data, postID, isLogin}) => {\n    const classes = useStyles();\n\n    const [isCommentPanelOpen, setIsCommentPanelOpen] = useState(false);\n\n    return (\n        <Paper className={classes.root} elevation={0}>\n            <ItemInfo\n                type={'comment'}\n                isLogin={isLogin}\n                username={data.owner.username}\n                avatarUrl={data.owner.avatar_url}\n                created={data.created}\n                id={data.id}\n                likes={data.likes}\n                dislikes={data.dislikes}\n                isLiked={data.is_liked}\n                small\n            />\n            <div className={classes.content}>\n                { data.content }\n            </div>\n            <Button\n                variant=\"outlined\"\n                className={classes.commentButton}\n                disableElevation\n                startIcon={<ChatIcon />}\n                onClick={() => setIsCommentPanelOpen(prev => !prev)}\n                size={'small'}\n            >\n                { data.sub_comments.length }\n            </Button>\n\n            {\n                isCommentPanelOpen &&\n                <Fade in={isCommentPanelOpen} timeout={1000}>\n                    <div className={classes.subCommentPanel}>\n                        { !data.sub_comments.length && <Box textAlign={'center'}>No comment yet</Box> }\n                        { data.sub_comments.map((item, i) => <SubCommentItem isLogin={isLogin} data={item} key={i}/>) }\n                        { isLogin && <CommentInput parentPost={postID} parentComment={data.id}/> }\n                    </div>\n                </Fade>\n            }\n        </Paper>\n    )\n\n};\n\nexport default CommentItem","import React from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Link, useLocation} from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n    link: {\n        '&:link': {\n            color: theme.palette.primary.main\n        },\n        '&:visited': {\n            color: theme.palette.primary.main\n        },\n        '&:hover': {\n            color: theme.palette.secondary.main\n        }\n    }\n}));\n\ninterface ButtonProps {\n    text: string,\n    to: string,\n    fromState: boolean // pass state.from = location.pathname to Link to object if true\n}\n\nconst ThemeLink: React.FC<ButtonProps> = ({text, to, fromState}) => {\n    const classes = useStyles();\n    const location = useLocation();\n\n    const _to = fromState ?\n        {\n            pathname: to,\n            state: {\n                from: location.pathname\n            }\n        } :\n        to;\n\n\n    return (\n        <Link to={_to} className={classes.link}>{text}</Link>\n    )\n};\n\nexport default ThemeLink\n","import React from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Box, Divider, Paper} from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CommentInput from \"./comment-input\";\nimport CommentItem, {CommentData} from \"./comment-item\";\nimport ThemeLink from \"../commons/theme-link\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        margin: '60px 0',\n        width: '100%',\n    },\n    paper: {\n        width: '100%',\n        padding: theme.spacing(4)\n    },\n    loginToLeaveMessage: {\n        width: '100%',\n        height: '200px',\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'center',\n        fontWeight: 700,\n        color: theme.palette.grey[600]\n    }\n}));\n\ninterface CommentListProps {\n    isLogin: boolean,\n    comments: number,\n    postID: string,\n    data: CommentData[]\n}\n\nconst CommentList: React.FC<CommentListProps> = ({isLogin, comments, postID, data}) => {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <Paper className={classes.paper} elevation={0}>\n                <Typography variant={'body1'} component={'div'}>\n                    <Box fontWeight={700}>\n                        { `${comments} ${comments > 1 ? 'comments' : 'comment'}` }\n                    </Box>\n                </Typography>\n                <Divider />\n            </Paper>\n\n                {\n                    data.map((itemData, i) => <CommentItem data={itemData} postID={postID} key={i} isLogin={isLogin}/>)\n                }\n\n            <Paper className={classes.paper} elevation={0}>\n                {\n                    isLogin ?\n                        <CommentInput parentPost={postID} parentComment={null}/> :\n                        <div className={classes.loginToLeaveMessage}>\n                            <span>\n                                <ThemeLink text={'Login'} to={'/login'} fromState/>\n                                {` to leave a comment`}\n                            </span>\n                        </div>\n                }\n            </Paper>\n        </div>\n    )\n\n};\n\nexport default CommentList","import {makeStyles} from \"@material-ui/core/styles\";\n\nconst useInsertedHTMLStyle = makeStyles((theme) => ({\n    root: {\n        display: 'column',\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'center',\n        color: theme.palette.text.primary,\n        whiteSpace: 'normal',\n        overflowWrap: 'break-word',\n        '& pre': {\n            whiteSpace: 'pre-wrap',\n            wordWrap: 'break-word'\n        },\n        '& a': {\n            wordWrap: 'break-word',\n            background: `linear-gradient(to bottom, ${theme.palette.primary.light} 0%, ${theme.palette.primary.light} 100%)`,\n            backgroundPosition: '0 100%',\n            backgroundRepeat: 'repeat-x',\n            backgroundSize: '4px 4px',\n            transition: theme.transitions.create(['background-size', 'color']),\n        },\n        '& a:hover': {\n            backgroundSize: '4px 100%',\n            color: theme.palette.primary.contrastText,\n        },\n        '& img': {\n            maxWidth: '100%',\n            maxHeight: '600px',\n            display: 'block',\n            margin: '4px auto'\n        },\n        '& p': {\n\n        }\n        // '& h1': {\n        //     fontSize: '3rem',\n        //     fontWeight: 700\n        // },\n        // '& h2': {\n        //     fontSize: '2.5rem',\n        //     fontWeight: 700\n        // },\n        // '& h3': {\n        //     fontSize: '2rem',\n        //     fontWeight: 700\n        // },\n        // '& h4': {\n        //     fontSize: '1.5rem',\n        //     fontWeight: 700\n        // },\n        // '& h5': {\n        //     fontSize: '1.5rem',\n        //     fontWeight: 700\n        // },\n        // '& p, span': {\n        //     fontSize: '1.25rem',\n        //     lineHeight: 1.5,\n        // }\n    }\n}));\n\nexport default useInsertedHTMLStyle","import {useDispatch} from \"react-redux\";\nimport urls from \"./urls\";\nimport {openSnackbar} from \"../redux/actions/snackbar\";\nimport {useHistory} from \"react-router-dom\";\nimport usePost from \"./common/use-post\";\nimport GENERIC_ERROR_MESSAGE from \"./common/generic-error-message\";\n\nconst useDelete = () => {\n    const dispatch = useDispatch();\n    let history = useHistory();\n\n    const {\n        loading,\n        error,\n        doPost\n    } = usePost();\n\n    const deletePost = async (\n        id: number\n    ) => {\n        const options = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        };\n        const successCallback = () => {\n            history.replace('/');\n            dispatch(openSnackbar('Post deleted'));\n        };\n        const errorCallback = (message: string) => {\n            dispatch(openSnackbar(message || GENERIC_ERROR_MESSAGE));\n        };\n        const unknownErrorCallback = () => {\n            dispatch(openSnackbar(GENERIC_ERROR_MESSAGE));\n        };\n\n        doPost(urls.deletePost(id), options, true, successCallback, errorCallback, unknownErrorCallback);\n    };\n\n    return [loading, error, deletePost] as [typeof loading, typeof error, typeof deletePost]\n};\n\nexport default useDelete","import IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport React, {useState} from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Tooltip} from \"@material-ui/core\";\nimport useDelete from \"../../requests/use-delete\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\n\nconst useStyles = makeStyles((theme) => ({\n    button: {\n        color: theme.palette.warning.light,\n        fontSize: '1.25rem',\n        \"&:hover\": {\n            color: theme.palette.warning.main\n        },\n        \"&:focus\": {\n            color: theme.palette.warning.main\n        }\n    },\n    confirmButton: {\n        color: theme.palette.warning.main\n    }\n}));\n\ninterface DeleteButtonProps {\n    id: number\n}\n\nconst DeleteButton: React.FC<DeleteButtonProps> = ({id}) => {\n    const classes = useStyles();\n    const [loading, error, deletePost] = useDelete();\n    const [dialog, setDialog] = useState(false);\n\n    const openDialog = () => {\n        setDialog(true)\n    };\n\n    const closeDialog = () => {\n        setDialog(false)\n    };\n\n    const doDeletePost = () => {\n        deletePost(id)\n    };\n\n    return (\n        <>\n            <Tooltip title=\"Delete\" aria-label=\"delete\">\n                <IconButton\n                    aria-label={`delete`}\n                    className={classes.button}\n                    disabled={loading}\n                    onClick={openDialog}\n                >\n                    <DeleteIcon/>\n                </IconButton>\n            </Tooltip>\n            <Dialog\n                open={dialog}\n                onClose={closeDialog}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n            >\n                <DialogTitle id=\"alert-dialog-title\">Are you sure to delete this post?</DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\">\n                        It will not be possible to recover this post once deleted.\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={closeDialog} color=\"primary\">\n                        Forget it\n                    </Button>\n                    <Button onClick={doDeletePost} autoFocus disabled={loading} className={classes.confirmButton}>\n                        I'm sure\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </>\n    )\n};\n\nexport default DeleteButton","import IconButton from \"@material-ui/core/IconButton\";\nimport EditIcon from '@material-ui/icons/Edit';\nimport React from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Tooltip} from \"@material-ui/core\";\nimport {Link} from \"react-router-dom\";\nimport Box from \"@material-ui/core/Box\";\n\nconst useStyles = makeStyles((theme) => ({\n    textColor: {\n        color: theme.palette.success.light,\n    },\n    button: {\n        fontSize: '1.25rem',\n        \"&:hover\": {\n            color: theme.palette.success.main\n        },\n        \"&:focus\": {\n            color: theme.palette.success.main\n        }\n    },\n}));\n\ninterface EditButtonProps {\n    id: number\n}\n\nconst EditButton: React.FC<EditButtonProps> = ({id}) => {\n    const classes = useStyles();\n\n    return (\n        <Tooltip title=\"Edit\" aria-label=\"edit\">\n            <Box className={classes.textColor}>\n                <IconButton\n                    aria-label={`edit`}\n                    component={Link}\n                    to={`/edit-post/${id}`}\n                    classes={{\n                        root: classes.button\n                    }}\n                >\n                    <EditIcon/>\n                </IconButton>\n            </Box>\n        </Tooltip>\n    )\n};\n\nexport default EditButton","import React, {useEffect, useRef} from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Paper} from \"@material-ui/core\";\nimport { useParams } from \"react-router-dom\";\nimport useGetPostDetail from \"../../requests/use-get-post-detail\";\nimport {Skeleton} from \"@material-ui/lab\";\nimport CommentList from \"./comment-list\";\nimport ItemInfo from \"./item-info\";\nimport {CommentData} from \"./comment-item\";\nimport Box from \"@material-ui/core/Box\";\nimport useInsertedHTMLStyle from \"./inserted-html-style\";\nimport DeleteButton from \"../commons/delete-button\";\nimport EditButton from \"../commons/edit-button\";\nimport TagChip from \"../commons/tag-chip\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n    },\n    paper: {\n        width: '100%',\n        padding: theme.spacing(4)\n    },\n    loading: {\n        width: '100%',\n        height: '500px'\n    },\n    center: {\n        width: '100%',\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'center'\n    }\n}));\n\nexport interface PostDetailData {\n    id: string,\n    owner: {\n        email: string,\n        username: string,\n        avatar_url: string\n    }\n    likes: number,\n    dislikes: number,\n    comments: number,\n    comments_data: CommentData[]\n    title: string,\n    content: string,\n    created: string,\n    tag: string,\n    is_liked: 0 | 1 | -1 | undefined,\n    is_owner?: boolean\n}\n\ninterface PostDetailProps {\n    isLogin: boolean\n}\n\nconst PostDetail: React.FC<PostDetailProps> = ({isLogin}) => {\n    const classes = useStyles();\n    const insertedHTMLClasses = useInsertedHTMLStyle();\n    const HTMLStringContainerRef = useRef<HTMLDivElement>(null);\n\n    const { postID } = useParams();\n    const [loading, error, data, fetchPostDetail] = useGetPostDetail();\n    useEffect(() => {\n        fetchPostDetail(parseInt(postID || '1'))\n    }, []);\n\n    let content;\n    if (loading) {\n        content = (\n            <div className={classes.loading}>\n                <Skeleton variant=\"rect\" width={'100%'} height={60} />\n                { (new Array(10)).fill(0).map((_, i) => <Skeleton variant=\"text\" width={'100%'} key={i}/>)}\n            </div>\n        )\n    } else if (error) {\n        content = (\n            <Box className={classes.center} height={500}>\n                <h1>Server error</h1>\n            </Box>\n        )\n    } else if (data) {\n        content = (\n            <>\n                <Paper className={classes.paper} elevation={0}>\n                    <Box width={'100%'}>\n                        <TagChip text={data.tag} size={'normal'}/>\n                    </Box>\n                    <h1> {data.title} </h1>\n                    <ItemInfo\n                        type={'post'}\n                        isLogin={isLogin}\n                        username={data.owner.username}\n                        avatarUrl={data.owner.avatar_url}\n                        created={data.created}\n                        id={data.id}\n                        likes={data.likes}\n                        dislikes={data.dislikes}\n                        isLiked={data.is_liked}\n                    />\n                    <Box className={classes.center} my={2}>\n                        {\n                            isLogin && data.is_owner &&\n                                <>\n                                    <DeleteButton id={parseInt(data.id)}/>\n                                    <EditButton id={parseInt(data.id)}/>\n                                </>\n                        }\n                    </Box>\n                    <Box width={'100%'} height={'40px'}> </Box>\n                    <div dangerouslySetInnerHTML={{__html: data.content}} className={insertedHTMLClasses.root} ref={HTMLStringContainerRef}/>\n                </Paper>\n                <CommentList comments={data.comments} isLogin={isLogin} postID={data.id} data={data.comments_data}/>\n            </>\n        )\n    }\n\n    return (\n        <div className={classes.root}>\n            { content }\n        </div>\n    )\n\n};\n\nexport default PostDetail","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function RouterScrollRestoration() {\n    const { pathname } = useLocation();\n\n    useEffect(() => {\n        window.scrollTo(0, 0);\n    }, [pathname]);\n\n    return null;\n}","import React from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Box, Paper, Typography} from \"@material-ui/core\";\n\ninterface SectionTitleProps {\n    sectionTitle: string\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        minHeight: '100px',\n    },\n    sectionTitle: {\n        width: '100%',\n        padding: theme.spacing(1, 2),\n        backgroundColor: theme.palette.primary.light,\n        fontWeight: 700,\n        color: '#fff'\n    },\n    content: {\n        width: '100%',\n        padding: theme.spacing(2),\n    }\n}));\n\nconst SectionWrapper: React.FC<SectionTitleProps> = ({children, sectionTitle}) => {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <Typography variant={'body1'} component={'h3'}>\n                <Box className={classes.sectionTitle}>\n                    { sectionTitle }\n                </Box>\n            </Typography>\n            <div className={classes.content}>\n                { children }\n            </div>\n        </div>\n    )\n};\n\nexport default SectionWrapper","import {Crop} from \"react-image-crop\";\n// import EXIF from \"exif-js/exif\";\n\nconst SIZE = 800;\n\nfunction getCroppedImg(image: HTMLImageElement, crop: Crop, scale: number, fileName: string) {\n    const [x, y, width, height] = [crop.x, crop.y, crop.width, crop.height].map(_ => _ === undefined ? 1 : _);\n\n    const canvas = document.createElement('canvas');\n    canvas.width = SIZE;\n    canvas.height = SIZE;\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return null;\n\n    // As Base64 string\n    // const base64Image = canvas.toDataURL('image/jpeg');\n\n    // As a blob\n    return new Promise<Blob>(async (resolve, reject) => {\n        try {\n            // await rotateAsPerExif(image, ctx, canvas.width, canvas.height);\n            ctx.drawImage(\n                image,\n                x * scale,\n                y * scale,\n                width * scale,\n                height * scale,\n                0,\n                0,\n                SIZE,\n                SIZE,\n            );\n            canvas.toBlob(blob => {\n                if (blob) {\n                    resolve(blob);\n                }\n            }, 'image/jpeg', 1);\n        } catch (e) {\n            throw e\n        }\n    });\n}\n\n// const rotateAsPerExif = (image: HTMLImageElement, ctx: CanvasRenderingContext2D, canvasWidth: number, canvasHeight: number) => {\n//     return new Promise((resolve, reject) => {\n//         // @ts-ignore\n//         EXIF.getData(image, function(this: HTMLImageElement) {\n//             console.log(ctx)\n//             const orientation = EXIF.getTag(this,\"Orientation\");\n//             switch (orientation) {\n//                 case 2: ctx.translate(canvasWidth, 0);     ctx.scale(-1,1); break;\n//                 case 3: ctx.translate(canvasWidth,canvasHeight); ctx.rotate(Math.PI); break;\n//                 case 4: ctx.translate(0,canvasHeight);     ctx.scale(1,-1); break;\n//                 case 5: ctx.rotate(0.5 * Math.PI);   ctx.scale(1,-1); break;\n//                 case 6:\n//                     ctx.rotate(0.5 * Math.PI);\n//                     ctx.translate(0,-canvasHeight);\n//                     break;\n//                 case 7: ctx.rotate(0.5 * Math.PI);   ctx.translate(canvasWidth,-canvasHeight); ctx.scale(-1,1); break;\n//                 case 8: ctx.rotate(-0.5 * Math.PI);  ctx.translate(-canvasWidth,0); break;\n//             }\n//             resolve()\n//         })\n//     })\n// };\n\nexport default getCroppedImg","import React, {useEffect, useMemo, useRef, useState} from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {GenericClickButton} from \"../../commons/generic-button\";\nimport {Box} from \"@material-ui/core\";\nimport ReactCrop, {Crop} from 'react-image-crop';\nimport 'react-image-crop/dist/ReactCrop.css';\nimport ErrorMessage from \"../../commons/error-message\";\nimport getCroppedImg from \"./get-cropped-image\";\nimport useUpdateAvatar from \"../../../requests/use-update-avatar\";\nimport useResizeImage, {getWidthHeight} from \"./use-resize-image\";\nimport loadImage from 'blueimp-load-image'\n\nenum Stage {\n    'UPLOAD' = 'UPLOAD',\n    'CROP' = 'CROP',\n    'CONFIRM' = 'CONFIRM',\n    'FINISH' = 'FINISH'\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center'\n    },\n    row: {\n        width: '100%',\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'flex-start'\n    },\n    backNextButtons: {\n        width: '100%',\n        margin: theme.spacing(1, 0),\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'space-between'\n    },\n    centering: {\n        width: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center'\n    }\n}));\n\ninterface FinishStageProps {\n    restart: () => void\n}\n\nconst FinishStage: React.FC<FinishStageProps> = ({restart}) => {\n    const classes = useStyles();\n\n    return (\n        <>\n            <div className={classes.backNextButtons}>\n                <GenericClickButton onClick={restart} width={'150px'} text={'Start Again'}/>\n            </div>\n            <div className={'centering'}>\n                <Box fontWeight={700} my={2}>\n                    All set\n                </Box>\n            </div>\n        </>\n    )\n};\n\ninterface ConfirmStageProps {\n    blob: Blob | null,\n    back: () => void,\n    next: () => void,\n}\n\nconst ConfirmStage: React.FC<ConfirmStageProps> = ({blob, back, next}) => {\n    const classes = useStyles();\n\n    const [loading, error, errorMessage, upload] = useUpdateAvatar();\n    const containerRef = useRef<HTMLDivElement>(null);\n    const src = useMemo(() => {\n        return URL.createObjectURL(blob)\n    }, [blob]);\n    const [imgWidth, imgHeight] = useResizeImage(containerRef, src);\n\n    const GoNext = async () => {\n        try {\n            if (blob) {\n                const uploaded = await upload(blob);\n                if (uploaded) {\n                    next();\n                }\n            }\n        } catch (e) {}\n    };\n\n    return (\n        <>\n            <div className={classes.backNextButtons}>\n                <Box>\n                    <GenericClickButton onClick={back} width={'150px'} text={'Redo Cropping'}/>\n                </Box>\n                <Box>\n                    <GenericClickButton onClick={GoNext} width={'150px'} text={'Update Avatar'} disabled={loading}/>\n                </Box>\n            </div>\n            <ErrorMessage loading={loading} error={error} errorMessage={errorMessage}/>\n            {\n                !loading &&\n                <div className={classes.centering} ref={containerRef}>\n                    <img\n                        src={src}\n                        alt={'cropped'}\n                        style={{\n                            width: imgWidth,\n                            height: imgHeight\n                        }}/>\n                </div>\n            }\n        </>\n    )\n};\n\ninterface CropStageProps {\n    src: string,\n    back: () => void,\n    next: (blob: Blob) => void\n}\n\nconst CropStage: React.FC<CropStageProps> = ({src, back, next}) => {\n    const classes = useStyles();\n    const [error, setError] = useState(false);\n    const [image, setImage] = useState<HTMLImageElement | null>(null);\n    const [crop, setCrop] = useState<Crop>({});\n    const cropperWrapperRef = useRef<HTMLDivElement>(null);\n    const [cropperSize, setCropperSize] = useState({\n        width: 1,\n        height: 1\n    });\n\n    const goNext = async () => {\n        try {\n            if (!image) return;\n            const croppedSrc = await getCroppedImg(image, crop, image.naturalWidth / cropperSize.width, ' ');\n            if (croppedSrc) {\n                next(croppedSrc);\n            }\n        } catch (e) {\n            console.log(e);\n        }\n    };\n\n    const handleImageLoaded = (image: HTMLImageElement) => {\n        setImage(image);\n        if (cropperWrapperRef.current) {\n            const [width, height] = getWidthHeight(\n                cropperWrapperRef.current.getBoundingClientRect().width,\n                image.naturalWidth,\n                image.naturalHeight\n            );\n            setCropperSize({\n                width,\n                height\n            });\n        }\n    };\n\n    useEffect(() => {\n        const width = cropperSize.width;\n        const height = cropperSize.height;\n        if (width >= height) {\n            const x = Math.round((width - height) / 2);\n            setCrop({\n                aspect: 1,\n                unit: 'px',\n                height: height,\n                width: height,\n                x,\n                y: 0\n            })\n        } else {\n            const y = Math.round((height - width) / 2);\n            setCrop({\n                aspect: 1,\n                unit: 'px',\n                height: width,\n                width: width,\n                x: 0,\n                y\n            })\n        }\n    }, [cropperSize.width, cropperSize.height]);\n\n\n    return (\n        <>\n            <div className={classes.backNextButtons}>\n                <Box justifySelf={'flex-start'}>\n                    <GenericClickButton onClick={back} width={'150px'} text={'Repick'}/>\n                </Box>\n                <Box justifySelf={'flex-end'}>\n                    <GenericClickButton onClick={goNext} width={'150px'} text={'Crop'}/>\n                </Box>\n            </div>\n            <ErrorMessage loading={false} error={false} errorMessage={''}/>\n            <div ref={cropperWrapperRef} className={classes.centering}>\n                <ReactCrop\n                    src={src}\n                    crop={crop}\n                    onChange={(newCrop) => setCrop(newCrop)}\n                    ruleOfThirds={true}\n                    onImageError={() => setError(true)}\n                    onImageLoaded = {handleImageLoaded}\n                    style={{\n                        width: cropperSize.width,\n                        height: cropperSize.height\n                    }}\n                />\n            </div>\n            {\n                error &&\n                <ErrorMessage loading={false} error={true} errorMessage={'Image can\\'t be loaded'}/>\n            }\n        </>\n    )\n};\n\ninterface UploadStageProps {\n    next: (src: string) => void,\n}\n\nconst UploadStage: React.FC<UploadStageProps> = ({next}) => {\n    const classes = useStyles();\n    const inputRef = useRef<HTMLInputElement>(null);\n    const [link, setLink] = useState('');\n    const [loading, setLoading] = useState(false);\n\n    const openFileInput = () => {\n        inputRef.current?.click();\n    };\n\n    const handleFiles = () => {\n        if (\n            inputRef.current &&\n            inputRef.current.files &&\n            inputRef.current.files.length\n        ) {\n            if (loading) return;\n            setLoading(true);\n            loadImage(\n                inputRef.current.files[0],\n                (img) => {\n                    // @ts-ignore\n                    next(img.toDataURL('image/jpeg'));\n                },\n                {\n                    orientation: true,\n                    canvas: true\n                }\n            );\n        }\n    };\n\n    useEffect(() => {\n        const input = inputRef.current;\n        input?.addEventListener('change', handleFiles);\n        return () => {\n            input?.removeEventListener('change', handleFiles);\n        }\n    }, []);\n\n    return (\n        <div style={{width: '100%'}}>\n            {/*<Box width={'80%'}>*/}\n                {/*<Box my={1}>*/}\n                {/*    <TextField label=\"From Link\" fullWidth value={link} onChange={(e) => setLink(e.currentTarget.value)}/>*/}\n                {/*</Box>*/}\n                <div className={classes.centering}>\n                    {/*<Box>*/}\n                    {/*    <GenericClickButton onClick={() => next(link)} width={'150px'} text={'Get Image'}/>*/}\n                    {/*</Box>*/}\n                    {/*<Box mx={1}> or </Box>*/}\n                    <Box my={2}>\n                        {\n                            loading ?\n                                <ErrorMessage loading={true} error={false} errorMessage={''} /> :\n                                <Box>\n                                    <GenericClickButton onClick={openFileInput} width={'150px'} text={'Upload From Disk'} disabled={loading}/>\n                                </Box>\n                        }\n                    </Box>\n                    <input type=\"file\" ref={inputRef} accept=\"image/*\" style={{display: 'none'}}/>\n                </div>\n            {/*</Box>*/}\n        </div>\n    )\n};\n\ninterface UpdateAvatarProps {\n\n}\n\nconst UpdateAvatar: React.FC<UpdateAvatarProps> = ({}) => {\n    const classes = useStyles();\n\n    const [stage, setStage] = useState(Stage.UPLOAD);\n    const [imageSrc, _setImageSrc] = useState('');\n    const [croppedImageBlob, _setCroppedImageBlob] = useState<Blob | null>(null);\n\n    const moveToUploadStage = () => {\n        setStage(Stage.UPLOAD)\n    };\n\n    const moveToCropStage = (src: string) => {\n        _setImageSrc(src);\n        setStage(Stage.CROP);\n    };\n\n    const backToCropStage = () => {\n        setStage(Stage.CROP);\n    };\n\n    const moveToConfirmStage = (cropped: Blob) => {\n        _setCroppedImageBlob(cropped);\n        setStage(Stage.CONFIRM);\n    };\n\n    const moveToFinishStage = () => {\n        setStage(Stage.FINISH);\n    };\n\n    let content;\n    switch (stage) {\n        case Stage.UPLOAD:\n            content = <UploadStage next={moveToCropStage} />;\n            break;\n        case Stage.CROP:\n            content = <CropStage src={imageSrc} back={moveToUploadStage} next={moveToConfirmStage}/>;\n            break;\n        case Stage.CONFIRM:\n            content = <ConfirmStage blob={croppedImageBlob} back={backToCropStage} next={moveToFinishStage}/>;\n            break;\n        case Stage.FINISH:\n            content = <FinishStage restart={moveToUploadStage}/>;\n            break;\n        default:\n            content = <UploadStage next={moveToCropStage} />;\n    }\n\n    return (\n        <div className={classes.root}>\n            { content }\n        </div>\n    )\n};\n\nexport default UpdateAvatar","import {useState} from \"react\";\nimport urls from \"./urls\";\nimport useFetchWithTokenVerification from \"./common/use-fetch-with-token-verification\";\n\nconst useUpdateAvatar = () => {\n    const fetchWithTokenVerification = useFetchWithTokenVerification();\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(false);\n    const [errorMessage, setErrorMessage] = useState('');\n\n    const upload = (\n        file: File | Blob\n    ) => {\n        return new Promise((resolve, reject) => {\n            if (loading) {\n                reject();\n                return\n            }\n\n            // reset states\n            setError(false);\n            setErrorMessage('');\n\n            // start fetching\n            setLoading(true);\n            const form = new FormData();\n            form.append('image', file, \"avatar.jpg\");\n\n            fetchWithTokenVerification(true, urls.updateAvatar, {\n                method: 'POST',\n                body: form\n            })\n                .then((res) => res.json())\n                .then(json => {\n                    setLoading(false);\n                    console.log(json);\n\n                    if (json.status === 'success') {\n                        resolve(true);\n                        return\n                    } else {\n                        setError(true);\n                        if (json.status === 'error') {\n                            setErrorMessage(json.message)\n                        } else {\n                            setErrorMessage('Server unavailable, please try again later.')\n                        }\n                        reject();\n                    }\n                })\n                .catch(e => {\n                    setLoading(false);\n\n                    setError(true);\n                    setErrorMessage('Server unavailable, please try again later.');\n                    reject();\n                });\n        });\n    };\n\n    return [loading, error, errorMessage, upload] as [boolean, boolean, string, typeof upload]\n\n};\n\nexport default useUpdateAvatar","import {RefObject, useEffect, useState} from \"react\";\n\nconst WIDTH = 500;\nconst HEIGHT = 500;\n// try to size the wrapper within the constraints\n// target is no bigger than WIDTH * HEIGHT\n// on smaller screens (maxWidth < WIDTH) the target is SHORTER_EDGE * SHORTER_EDGE\n\nconst useResizeImage = (ref: RefObject<HTMLDivElement>, src: string) => {\n    const [width, setWidth] = useState(0);\n    const [height, setHeight] = useState(0);\n\n    const loadImage = () => {\n        const image = new Image();\n        image.src = src;\n        image.onload = () => resize(image)\n    };\n\n    const resize = (image: HTMLImageElement) => {\n        if (!src || !ref.current) return;\n        const containerWidth = ref.current.getBoundingClientRect().width;\n        const [finalWidth, finalHeight] = getWidthHeight(containerWidth, image.naturalWidth, image.naturalHeight);\n\n        setWidth(finalWidth);\n        setHeight(finalHeight);\n    };\n\n    useEffect(() => {\n        loadImage()\n    }, [ref, src]);\n\n    return [width, height] as [typeof width, typeof height]\n};\n\nconst getWidthHeight = (containerWidth: number, imageNaturalWidth: number, imageNaturalHeight: number) => {\n    const maxWidth = Math.min(WIDTH, containerWidth) || 1;\n    const maxHeight = maxWidth;\n\n    let width = 1;\n    let height = 1;\n    if (imageNaturalWidth >= imageNaturalHeight) {\n        width = maxWidth;\n        height = (width / imageNaturalWidth) * imageNaturalHeight\n    } else {\n        height = maxHeight;\n        width = (height / imageNaturalHeight) * imageNaturalWidth\n    }\n\n    // do no enlarge\n    const finalWidth = Math.min(imageNaturalWidth, Math.round(width));\n    const finalHeight = Math.min(imageNaturalHeight, Math.round(height));\n\n    return [finalWidth, finalHeight] as [typeof finalWidth, typeof finalHeight]\n};\n\nexport {\n    useResizeImage as default,\n    getWidthHeight\n}","import React from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Box, Paper, Typography} from \"@material-ui/core\";\nimport SectionWrapper from \"./section-wrapper\";\nimport UpdateAvatar from \"./update-avatar/update-avatar\";\n\ninterface AccountSettingProps {\n    username: string\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        margin: theme.spacing(1, 0),\n        width: '100%'\n    },\n    paper: {\n        width: '100%',\n        minHeight: '100px',\n        overflow: 'hidden'\n        // display: 'flex',\n        // flexDirection: 'row',\n        // alignItems: 'center',\n        // justifyContent: 'flex-start'\n    }\n}));\n\nconst AccountSetting: React.FC<AccountSettingProps> = ({username}) => {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <Typography variant={'body1'} component={'h2'}>\n                <Box my={2} fontWeight={700}>\n                    { username }\n                </Box>\n            </Typography>\n            <Paper className={classes.paper} elevation={0}>\n                <SectionWrapper sectionTitle={'Avatar'}>\n                    <UpdateAvatar />\n                </SectionWrapper>\n            </Paper>\n        </div>\n    )\n};\n\nexport default AccountSetting","import {connect} from \"react-redux\";\nimport AccountSetting from \"../components/account-setting/account-setting\";\nimport {State} from \"../redux/state\";\n\nfunction mapStateToProps(state: State) {\n    return {\n        username: state.loginStatus.username\n    }\n}\n\nconst AccountSettingContainer = connect(\n    mapStateToProps\n)(AccountSetting);\n\nexport default AccountSettingContainer;\n","const COLORS = ['#ff4143', '#50c5e3', '#fcb415'];\n\nconst getColor = () => {\n    const index = Math.floor(Math.random() * COLORS.length);\n    return COLORS[index];\n};\n\nexport class ConfettiSprite {\n    color: string;\n    x: number;\n    y: number;\n    r: number;\n    rotation: number;\n    vx: number;\n    vy: number;\n    opacity: number;\n    finished: boolean;\n    params = {\n        dx: 0.92,\n        dy: 0.95,\n        g: 0.2,\n        dr: 0.99,\n        dOpacity: 0.015,\n        dRotation: Math.random() + 1,\n        ddRotation: 0.95\n    };\n\n    constructor(width: number, height: number) {\n        this.color = getColor();\n        this.x = 0.2 * width;\n        this.y = 0.4 * height;\n        this.r = 5;\n        this.rotation = Math.random() * Math.PI;\n        this.vx = (-7 * Math.random() + 1) * -(width / 90);\n        this.vy = (2.5 * Math.random() + 1) * -(height / 100);\n        this.opacity = 1;\n        this.finished = false;\n    }\n\n    move() {\n        // horizontal speed\n        this.vx = this.vx * this.params.dx;\n        this.x = this.x + this.vx;\n\n        // vertical speed\n        this.vy = this.vy * this.params.dy;\n        this.vy = this.vy + this.params.g;\n        this.y = this.y + this.vy;\n\n        // reduce opacity when it starts to fall\n        // set this.finished to true when opacity <= 0\n        if (this.vy >= 0) {\n            const nextOpacity = this.opacity - this.params.dOpacity;\n            if (nextOpacity > 0) {\n                this.opacity = nextOpacity\n            } else {\n                this.finished = true\n            }\n        }\n\n        // rotation\n        this.params.dRotation *= this.params.ddRotation;\n        this.rotation += this.params.dRotation\n    }\n}\n\ninterface ConfettiOptions extends Object {\n    width: number,\n    height: number,\n    spritesCount: number,\n    [key: string]: any\n}\n\nclass Confetti {\n    params: ConfettiOptions;\n    ID: string;\n    canvas: HTMLCanvasElement | null;\n    ctx: CanvasRenderingContext2D | null;\n    sprites: ConfettiSprite[];\n\n    constructor(ID: string, options?: Partial<ConfettiOptions>) {\n        this.params = this.initParams(options);\n        this.ID = ID;\n        this.canvas = null;\n        this.ctx = null;\n        this.sprites = [];\n        this.loop = this.loop.bind(this);\n    }\n\n    initParams(options?: Partial<ConfettiOptions>) {\n        const defaultOptions = {\n            width: 300,\n            height: 300,\n            spritesCount: 30,\n        } as ConfettiOptions;\n\n        if (options !== undefined) {\n            return {...defaultOptions, ...options}\n        }\n\n        return defaultOptions\n    }\n\n    initCanvas() {\n        this.canvas = document.getElementById(this.ID) as HTMLCanvasElement;\n        this.ctx = this.canvas.getContext('2d');\n\n        this.canvas.width = this.params.width;\n        this.canvas.height = this.params.height;\n    }\n\n    initSprites() {\n        for (let i=0; i<this.params.spritesCount; i++) {\n            this.sprites.push(new ConfettiSprite(this.params.width, this.params.height));\n        }\n    }\n\n    /**\n     * set drawer() according to if CanvasRenderingContext2D.ellipse() is supported\n     */\n    initDrawer() {\n        if (!this.ctx) return;\n\n        if (this.ctx.ellipse === undefined) {\n            this.drawer = (ctx: CanvasRenderingContext2D, x: number, y: number, r: number) => {\n                ctx.arc(x, y, r, 0, 2 * Math.PI);\n            }\n        } else {\n            this.drawer = (ctx: CanvasRenderingContext2D, x: number, y: number, r: number, rotation: number) => {\n                ctx.ellipse(x, y, r, r * 1.2, rotation, 0, 2 * Math.PI);\n            }\n        }\n    }\n\n    /**\n     * drawer draws ellipse if supported, otherwise draw arc\n     */\n    drawer(ctx: CanvasRenderingContext2D, x: number, y: number, r: number, rotation?: number) {}\n\n    draw() {\n        if (!this.ctx) return;\n        this.ctx.clearRect(0, 0, this.params.width, this.params.height);\n\n        this.sprites.forEach(_ => {\n            if (!this.ctx) return;\n\n            this.ctx.save();\n            this.ctx.beginPath();\n            this.drawer(this.ctx, _.x, _.y, _.r, _.rotation);\n            this.ctx.fillStyle = _.color;\n            this.ctx.globalAlpha = _.opacity;\n            this.ctx.fill();\n            this.ctx.restore();\n        })\n    }\n\n    update() {\n        this.sprites = this.sprites.filter(_ => {\n            _.move();\n            return !_.finished\n        });\n    }\n\n    loop() {\n        this.draw();\n        this.update();\n\n        if (this.sprites.length > 0) {\n            requestAnimationFrame(this.loop);\n        }\n    }\n\n    main() {\n        this.initCanvas();\n        this.initSprites();\n        this.initDrawer();\n        this.loop();\n    }\n}\n\nexport default Confetti","import React, {useEffect} from \"react\";\nimport Confetti from \"./confetti\";\n\nconst CANVAS_ID = 'confetti-canvas';\n\ninterface ConfettiWrapperProps {\n\n}\n\nconst ConfettiWrapper: React.FC<ConfettiWrapperProps> = () => {\n\n    useEffect(() => {\n        (new Confetti(CANVAS_ID)).main();\n    }, []);\n\n    return (\n        <canvas id={CANVAS_ID} />\n    )\n};\n\nexport default ConfettiWrapper","import React from 'react';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route\n} from \"react-router-dom\";\nimport {connect} from 'react-redux';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Login from \"./components/login/login\";\nimport Register from \"./components/login/register\";\nimport HeaderContainer from \"./containers/header-container\";\nimport MainPage from \"./components/main-page/main-page\";\nimport SnackbarContainer from \"./containers/snackbar-container\";\nimport Footer from \"./components/footer/footer\";\nimport PrivateRoute from \"./utils/protected-router\";\nimport PostEditor from \"./components/post-editor/post-editor\";\nimport {State} from \"./redux/state\";\nimport PostDetail from \"./components/post-detail/post-detail\";\nimport RouterScrollRestoration from \"./utils/router-scroll-restoration\";\nimport AccountSettingContainer from \"./containers/account-setting-container\";\nimport ConfettiWrapper from \"./components/confetti/confetti-wrapper\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        maxWidth: '100vw',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'flex-start'\n    },\n    widthWrapper: {\n        margin: theme.spacing(5, 0, 0, 0),\n        width: '1000px',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'flex-start',\n        [theme.breakpoints.down('sm')]: {\n            width: 'calc(100% - 16px)',\n            margin: theme.spacing(0, 1),\n        }\n    },\n    confetti: {\n        position: 'fixed',\n        zIndex: theme.zIndex.tooltip + 1,\n        bottom: '0',\n        width: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center'\n    }\n}));\n\ninterface InnerAppProps {\n    isLogin: boolean,\n    confetti: boolean\n}\n\nconst InnerApp: React.FC<InnerAppProps> = ({isLogin, confetti}) => {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <Router basename={process.env.PUBLIC_URL}>\n                <RouterScrollRestoration />\n                <HeaderContainer />\n                <div className={classes.widthWrapper}>\n                    <Switch>\n                        <Route path=\"/\" exact render={ () => <MainPage /> } />\n                        <Route path=\"/tag/:tag\" render={ () => <MainPage /> } />\n                        <Route path=\"/login\" render={ () => <Login /> } />\n                        <Route path=\"/register\" render={ () => <Register /> } />\n                        <Route path=\"/post/:postID\" render={ () => <PostDetail isLogin={isLogin}/> } />\n                        <PrivateRoute path=\"/edit-post/:postID?\" isLogin={isLogin}>\n                            <PostEditor/>\n                        </PrivateRoute>\n                        <PrivateRoute path=\"/account-setting\" isLogin={isLogin}>\n                            <AccountSettingContainer/>\n                        </PrivateRoute>\n                        {/*<Route path=\"/welcome\" component={Welcome} />*/}\n\n                        {/*fall back*/}\n                        <Route path=\"/*\" render={ () => <MainPage /> } />\n                    </Switch>\n                    <Footer />\n                </div>\n            </Router>\n\n            {\n                confetti &&\n                <div className={classes.confetti}>\n                    <ConfettiWrapper />\n                </div>\n            }\n            <SnackbarContainer />\n        </div>\n    )\n};\n\nfunction mapStateToProps(state: State) {\n    return {\n        isLogin: state.loginStatus.isLogin,\n        confetti: state.confetti\n    }\n}\n\nconst InnerAppContainer = connect(\n    mapStateToProps,\n)(InnerApp);\n\nexport default InnerAppContainer;\n","import React from 'react';\nimport {Provider} from 'react-redux';\nimport configureStore from \"./redux/configure-store\";\nimport { CssBaseline } from \"@material-ui/core\";\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport theme from './theme';\nimport InnerApp from \"./inner-app\";\n\nconst store = configureStore();\n\ninterface AppProps {\n\n}\n\nconst App: React.FC<AppProps> = () => {\n    return (\n        <Provider store={store}>\n        <ThemeProvider theme={theme}>\n        <CssBaseline />\n            <InnerApp />\n        </ThemeProvider>\n        </Provider>\n    )\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}