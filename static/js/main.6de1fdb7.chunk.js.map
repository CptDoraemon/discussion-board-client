{"version":3,"sources":["redux/actions/login-status.ts","redux/state.ts","redux/reducers/login-status.ts","redux/actions/snackbar.ts","redux/reducers/snakbar.ts","redux/reducers/root-reducers.ts","redux/configure-store.ts","theme.tsx","utils/use-full-height.tsx","components/login/commons/login-common.tsx","components/commons/form-button.tsx","utils/use-input-field.tsx","utils/validators.ts","requests/urls.ts","utils/use-redirect-back.tsx","requests/use-login.tsx","components/commons/error-message.tsx","components/login/login.tsx","requests/use-register.tsx","components/login/register.tsx","components/commons/theme-button.tsx","requests/use-logout.tsx","components/header/logged-in-user-panel.tsx","components/header/anonymous-user-panel.tsx","components/commons/logo.tsx","components/header/header.tsx","containers/header-container.tsx","requests/use-get-authorization-header.tsx","requests/use-verify-token.tsx","requests/use-get-post-list.tsx","utils/get-time-string.tsx","utils/use-redirect-to-login.tsx","requests/use-like.tsx","components/commons/like-buttons.tsx","components/post-list/post.tsx","components/post-list/post-list.tsx","containers/post-list-container.tsx","components/commons/generic-button.tsx","components/side-bar/side-bar.tsx","containers/side-bar-container.tsx","components/main-page/main-page.tsx","components/snackbar/snackbar.tsx","containers/snackbar-container.tsx","components/footer/footer-column.tsx","components/footer/footer.tsx","utils/protected-router.tsx","requests/use-post-submission.tsx","components/post-editor/use-editor.tsx","components/post-editor/post-editor.tsx","utils/use-set-title.ts","requests/use-get-post-detail.tsx","utils/use-reload.tsx","requests/use-comment-submission.tsx","components/post-detail/comment-input.tsx","components/post-detail/item-info.tsx","components/post-detail/sub-comment-item.tsx","components/post-detail/comment-item.tsx","components/post-detail/comment-list.tsx","components/post-detail/inserted-html-style.tsx","components/post-detail/post-detail.tsx","utils/router-scroll-restoration.tsx","components/account-setting/section-wrapper.tsx","components/account-setting/update-avatar/get-cropped-image.ts","components/account-setting/update-avatar/update-avatar.tsx","requests/use-update-avatar.tsx","components/account-setting/update-avatar/use-resize-image.tsx","components/account-setting/account-setting.tsx","containers/account-setting-container.tsx","inner-app.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["LoginStatusActionTypes","defaultState","loginStatus","isLogin","username","token","access","refresh","snackbar","open","message","updateLoginStatus","newStatus","type","UPDATE_LOGIN_STATUS","SnackbarActionTypes","state","action","LOGOUT","REFRESH_TOKEN","Object","assign","newAccessToken","openSnackbar","OPEN","CLOSE","rootReducers","combineReducers","loggerMiddleware","createLogger","theme","createMuiTheme","palette","primary","main","contrastText","secondary","text","background","default","typography","responsiveFontSizes","useFullHeight","ref","useState","height","setHeight","useEffect","current","getBoundingClientRect","useStyles","makeStyles","root","width","margin","spacing","display","flexDirection","alignItems","justifyContent","image","objectFit","breakpoints","down","content","padding","textField","fontWeight","link","color","LoginCommon","children","imageUrl","classes","containerRef","useRef","Paper","elevation","className","src","process","alt","style","title","button","backgroundColor","textTransform","borderBottom","borderRadius","opacity","FormButton","disabled","form","variant","disableElevation","useInputField","defaultValue","validator","value","setValue","error","setError","errorMessage","setErrorMessage","e","target","reference","validatorResult","isValid","usernameValidator","length","emailValidator","indexOf","passwordValidator","confirmPasswordValidator","postTitleValidator","commentValidator","execValidators","validators","validationResults","map","_","i","base","postBase","urls","login","accountBase","register","verifySession","updateAvatar","getPostList","getPostDetail","id","createPost","createComment","commentBase","like","userActionsBase","blacklist","useRedirectBack","history","useHistory","location","useLocation","from","pathname","replace","useLogin","loading","setLoading","dispatch","useDispatch","goBack","email","password","fetch","method","headers","body","JSON","stringify","then","res","json","status","data","catch","ErrorMessage","Typography","component","Box","CircularProgress","Login","setEmail","emailError","emailErrorMessage","validateEmail","setPassword","passwordError","passwordErrorMessage","validatePassword","onSubmit","preventDefault","Grid","container","item","xs","textAlign","justify","TextField","label","name","onChange","helperText","Divider","to","useRegister","confirmPassword","Register","setUsername","usernameError","usernameErrorMessage","validateUsername","setConfirmPassword","confirmPasswordError","confirmPasswordErrorMessage","validateConfirmPassword","validationCheck1","validationCheck2","md","letterSpacing","ThemeButton","url","onClick","Link","useLogout","clientSideLogout","LoggedInUserPanel","logout","size","AnonymousUserPanel","fontFamily","join","fontSize","up","Logo","headerDimension","position","zIndex","appBar","left","top","placeholder","Header","HeaderContainer","connect","useGetAuthorizationHeader","accessToken","useStore","getState","useVerifyToken","refreshToken","accessHeader","Promise","resolve","reject","a","refreshRes","refreshJson","console","log","useGetPostList","validateToken","setData","fetchPostList","hasValidToken","months","getTimeString","ISOString","date","Date","hour","getHours","minute","getMinutes","getDate","getMonth","getFullYear","useRedirectToLogin","push","useLike","updatedData","setUpdatedData","redirectToLogin","likeButtons","marginLeft","buttonText","lineHeight","grey","LikeButtons","likes","dislikes","isLiked","likeLoading","undefined","likedByUser","dislikedByUser","IconButton","aria-label","green","red","paper","minHeight","avatar","light","author","actionArea","actionItem","Post","Avatar","owner","avatar_url","charAt","is_liked","comments","created","PostList","Array","fill","my","key","overflow","Skeleton","animation","PostListContainer","maxWidth","GenericClickButton","Button","GenericLinkButton","rowWrapper","SideBar","SideBarContainer","right","MainPage","createStyles","Snackbar","closeSnackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","SnackbarContent","SnackbarContainer","userStyles","listStyleType","header","FooterColumn","href","rel","column1","copyright","Footer","PrivateRoute","rest","render","removeUnusedObjectURL","objectURLArray","filter","getForm","FormData","append","promiseArray","getBlobFromObjectURL","all","blobs","forEach","blob","urlComponents","split","filename","usePostSubmission","submitted","setSubmitted","imageUploadHandler","editor","input","document","createElement","setAttribute","click","onchange","files","loadImage","canvas","toBlob","objectURL","URL","createObjectURL","range","getSelection","insertEmbed","index","orientation","useEditor","ID","quill","setQuill","Image","Quill","import","sanitize","quillInstance","modules","toolbar","getModule","addHandler","marginBottom","PostEditor","useParams","postID","getObjectURLArray","titleChangeHandler","titleError","titleErrorMessage","validateTitle","submit","FormControl","InputLabel","htmlFor","Input","aria-describedby","FormHelperText","innerHTML","useSetTitle","useGetPostDetail","fetchPostDetail","useReload","useCommentSubmission","reload","parentPost","parentComment","CommentInput","comment","commentChangeHandler","commentError","commentErrorMessage","validateComment","postInfo","avatarSmall","postInfoItem","ItemInfo","avatarUrl","small","SubCommentItem","commentButton","subCommentPanel","border","CommentItem","isCommentPanelOpen","setIsCommentPanelOpen","startIcon","prev","sub_comments","Fade","in","timeout","loginToLeaveMessage","CommentList","itemData","useInsertedHTMLStyle","whiteSpace","wordWrap","maxHeight","alignSelf","PostDetail","insertedHTMLClasses","parseInt","HTMLStringContainerRef","dangerouslySetInnerHTML","__html","comments_data","RouterScrollRestoration","window","scrollTo","sectionTitle","SectionWrapper","getCroppedImg","Stage","crop","scale","fileName","x","y","ctx","getContext","drawImage","useUpdateAvatar","file","useResizeImage","setWidth","resize","containerWidth","getWidthHeight","naturalWidth","naturalHeight","finalWidth","finalHeight","onload","imageNaturalWidth","imageNaturalHeight","Math","min","round","row","backNextButtons","centering","FinishStage","restart","ConfirmStage","back","next","upload","useMemo","imgWidth","imgHeight","GoNext","CropStage","setImage","setCrop","cropperWrapperRef","cropperSize","setCropperSize","goNext","croppedSrc","aspect","unit","justifySelf","newCrop","ruleOfThirds","onImageError","onImageLoaded","UploadStage","inputRef","handleFiles","img","toDataURL","addEventListener","removeEventListener","accept","UpdateAvatar","UPLOAD","stage","setStage","imageSrc","_setImageSrc","croppedImageBlob","_setCroppedImageBlob","moveToUploadStage","moveToCropStage","CROP","cropped","CONFIRM","FINISH","AccountSetting","AccountSettingContainer","widthWrapper","InnerAppContainer","basename","path","exact","store","createStore","applyMiddleware","App","ThemeProvider","CssBaseline","Boolean","hostname","match","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6de1fdb7.chunk.js","sourcesContent":["import {State, defaultState} from \"../state\";\n\nexport enum LoginStatusActionTypes {\n    'UPDATE_LOGIN_STATUS'='UPDATE_LOGIN_STATUS',\n    'LOGOUT'='LOGOUT',\n    'REFRESH_TOKEN'='REFRESH_TOKEN'\n}\n\n// export type LoginStatusAction =\n//     {\n//         type: typeof LoginStatusActionTypes.LOGOUT,\n//         newStatus: State['loginStatus']\n//     } |\n//     {\n//         type: typeof LoginStatusActionTypes.UPDATE_LOGIN_STATUS,\n//         newStatus: State['loginStatus']\n//     } |\n//     {\n//         type: typeof LoginStatusActionTypes.REFRESH_TOKEN,\n//         newStatus: State['loginStatus']\n//     }\n\nexport type LoginStatusAction = ReturnType<typeof logout> | ReturnType<typeof updateLoginStatus> | ReturnType<typeof refreshToken>\n\nexport function logout() {\n    return {\n        type: LoginStatusActionTypes.LOGOUT as typeof LoginStatusActionTypes.LOGOUT,\n        newStatus: defaultState.loginStatus\n    }\n}\n\nexport function updateLoginStatus(newStatus: State['loginStatus']) {\n    return {\n        type: LoginStatusActionTypes.UPDATE_LOGIN_STATUS as typeof LoginStatusActionTypes.UPDATE_LOGIN_STATUS,\n        newStatus\n    }\n}\n\nexport function refreshToken(newAccessToken: State['loginStatus']['token']['access']) {\n    return {\n        type: LoginStatusActionTypes.REFRESH_TOKEN as typeof LoginStatusActionTypes.REFRESH_TOKEN,\n        newAccessToken\n    }\n}","export interface State {\n    loginStatus: {\n        isLogin: boolean,\n        username: string,\n        token: {\n            access: string,\n            refresh: string\n        }\n    },\n    snackbar: {\n        open: boolean,\n        message: string\n    }\n}\n\nexport const defaultState: State = {\n    loginStatus: {\n        isLogin: false,\n        username: '',\n        token: {\n            access: '',\n            refresh: ''\n        }\n    },\n    snackbar: {\n        open: false,\n        message: ''\n    }\n};","import {defaultState, State} from \"../state\";\nimport {LoginStatusAction, LoginStatusActionTypes} from \"../actions/login-status\";\n\n\nfunction loginStatus(\n    state = defaultState.loginStatus,\n    action: LoginStatusAction\n): State['loginStatus'] {\n    switch (action.type) {\n        case LoginStatusActionTypes.UPDATE_LOGIN_STATUS:\n            return action.newStatus;\n        case LoginStatusActionTypes.LOGOUT:\n            return action.newStatus;\n        case LoginStatusActionTypes.REFRESH_TOKEN:\n            const newStatus = Object.assign({}, state);\n            newStatus.token.access = action.newAccessToken;\n            return newStatus;\n        default:\n            return state\n    }\n}\n\nexport default loginStatus;","export enum SnackbarActionTypes {\n    'CLOSE'='CLOSE',\n    'OPEN'='OPEN',\n}\n\nexport type SnackbarAction = ReturnType<typeof openSnackbar> | ReturnType<typeof closeSnackbar>\n\nexport function openSnackbar(message: string) {\n    return {\n        type: SnackbarActionTypes.OPEN as typeof SnackbarActionTypes.OPEN,\n        message\n    }\n}\n\nexport function closeSnackbar() {\n    return {\n        type: SnackbarActionTypes.CLOSE as typeof SnackbarActionTypes.CLOSE,\n    }\n}\n","import {defaultState, State} from \"../state\";\nimport {SnackbarAction, SnackbarActionTypes} from \"../actions/snackbar\";\n\n\nfunction snackbar (\n    state = defaultState.snackbar,\n    action: SnackbarAction\n): State['snackbar'] {\n    switch (action.type) {\n        case SnackbarActionTypes.OPEN:\n            return {\n                open: true,\n                message: action.message\n            };\n        case SnackbarActionTypes.CLOSE:\n            return defaultState.snackbar;\n        default:\n            return state\n    }\n}\n\nexport default snackbar;","import {combineReducers} from \"redux\";\nimport loginStatus from \"./login-status\";\nimport snackbar from \"./snakbar\";\n\nconst rootReducers = combineReducers({\n    loginStatus,\n    snackbar\n});\n\nexport default rootReducers;","import { createStore, applyMiddleware } from 'redux'\nimport thunkMiddleware from 'redux-thunk'\nimport rootReducers from \"./reducers/root-reducers\";\nimport {defaultState} from \"./state\";\n// import rootReducers from \"./reducers/root-reducers\";\n\nimport { createLogger } from 'redux-logger'\nconst loggerMiddleware = createLogger();\n\n\nexport default function configureStore() {\n    return createStore(\n        rootReducers,\n        defaultState,\n        // applyMiddleware(thunkMiddleware)\n        // applyMiddleware(thunkMiddleware, loggerMiddleware)\n        applyMiddleware(loggerMiddleware)\n    )\n}","import {createMuiTheme, responsiveFontSizes} from \"@material-ui/core/styles\";\n\nlet theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: '#41b3a3',\n            contrastText: '#fff',\n        },\n        secondary: {\n            main: '#e8a87c',\n            contrastText: '#fff',\n        },\n        text: {\n            primary: '#4a5568'\n        },\n        background: {\n            default: 'rgb(241, 242, 245)'\n        }\n    },\n    typography: {\n        \"fontFamily\": \"system-ui,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,Noto Sans,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol,Noto Color Emoji\",\n        \"fontSize\": 14,\n        \"fontWeightLight\": 300,\n        \"fontWeightRegular\": 400,\n        \"fontWeightMedium\": 500\n    }\n});\ntheme = responsiveFontSizes(theme);\n\nexport default theme;","import React, {useEffect, useState} from \"react\";\n\nconst useFullHeight = (ref: React.RefObject<HTMLDivElement>) => {\n    const [height, setHeight] = useState(0);\n\n    useEffect(() => {\n        if (!ref.current) return;\n        setHeight(ref.current.getBoundingClientRect().height)\n    }, [ref]);\n\n    return height\n};\n\nexport default useFullHeight","import React, {useRef} from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Paper} from \"@material-ui/core\";\nimport useFullHeight from \"../../../utils/use-full-height\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        margin: theme.spacing(2, 0),\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'center'\n    },\n    image: {\n        width: '40%',\n        height: '100%',\n        '& img': {\n            width: '100%',\n            height: '100%',\n            objectFit: 'cover'\n        },\n        [theme.breakpoints.down('sm')]: {\n            display:'none'\n        }\n    },\n    content: {\n        width: '60%',\n        padding: theme.spacing(10, 5),\n        [theme.breakpoints.down('sm')]: {\n            width: '100%'\n        }\n    },\n    textField: {\n        width: '100%',\n        fontWeight: 700\n    },\n    link: {\n        fontWeight: 700,\n        '& a:link': {\n            color: theme.palette.primary.main\n        },\n        '& a:visited': {\n            color: theme.palette.primary.main\n        },\n        '& a:hover': {\n            color: theme.palette.secondary.main\n        }\n    }\n}));\n\ninterface LoginCommonProps {\n    imageUrl: string\n}\n\nconst LoginCommon: React.FC<LoginCommonProps> = ({children, imageUrl}) => {\n    const classes = useStyles();\n\n    const containerRef = useRef<HTMLDivElement>(null);\n    const height = useFullHeight(containerRef);\n\n    return (\n        <Paper elevation={0} className={classes.root} ref={containerRef}>\n            <div className={classes.image}>\n                <img\n                    src={process.env.PUBLIC_URL + imageUrl}\n                    alt={'login background'}\n                    style={{height: `${height}px`}}\n                    title={'login background'}\n                />\n            </div>\n            <div className={classes.content}>\n                { children }\n            </div>\n        </Paper>\n    )\n};\n\nexport default LoginCommon","import React from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Button as MuiButton} from \"@material-ui/core\";\nimport {Link} from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n    button: {\n        width: '100%',\n        backgroundColor: theme.palette.primary.main,\n        color: '#fff',\n        fontWeight: 700,\n        textTransform: 'none',\n        borderBottom: '2px solid rgba(0,0,0,0.1)',\n        borderRadius: '5px',\n        '&:hover': {\n            backgroundColor: theme.palette.secondary.main\n        },\n        '&:disabled': {\n            backgroundColor: theme.palette.secondary.main,\n            opacity: 0.7\n        }\n    }\n}));\n\ninterface ButtonProps {\n    text: string,\n    disabled: boolean,\n    form: string\n}\n\nconst FormButton: React.FC<ButtonProps> = ({text, disabled, form}) => {\n    const classes = useStyles();\n\n    return (\n        <MuiButton variant=\"contained\" classes={{root: classes.button}} disableElevation type={'submit'} form={form} disabled={disabled}>\n            { text }\n        </MuiButton>\n    )\n};\n\nexport default FormButton\n","import React, {ChangeEvent, useEffect, useState} from \"react\";\nimport {Validator} from \"./validators\";\n\ntype ChangeHandler = (e: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => void\n\nconst useInputField = (\n    defaultValue: string,\n    validator: Validator\n) => {\n    const [value, setValue] = useState(defaultValue);\n    const [error, setError] = useState(false);\n    const [errorMessage, setErrorMessage] = useState('');\n\n    const validate = (reference?: string) => {\n        const validatorResult = reference ? validator(value, reference) : validator(value);\n        setError(!validatorResult.isValid);\n        setErrorMessage(validatorResult.message);\n\n        return validatorResult.isValid as boolean\n    };\n\n    const changeHandler: ChangeHandler = (e) => {\n        if (error) setError(false);\n        setValue(e.target.value)\n    };\n\n    return [value, changeHandler, error, errorMessage, validate] as [string, ChangeHandler, boolean, string, typeof validate]\n};\n\nexport default useInputField","export type Validator = (value: string, reference?: string) => {isValid: boolean, message: string}\n\nconst usernameValidator: Validator = (value) => {\n    let isValid = true;\n    let message = '';\n\n    if (value.length >= 30) {\n        isValid = true;\n        message = 'Username length must be less than 30 characters';\n    } else if (value.length === 0) {\n        isValid = true;\n        message = 'Username cannot be empty';\n    }\n\n    return {\n        isValid,\n        message\n    }\n};\n\nconst emailValidator: Validator = (value) => {\n    let isValid = true;\n    let message = '';\n\n    if (value.indexOf('@') === -1) {\n        isValid = false;\n        message = 'Invalid Email format'\n    } else if (value.indexOf('.') === -1) {\n        isValid = false;\n        message = 'Invalid Email format'\n    } else if (value.length === 0) {\n        isValid = false;\n        message = 'Email cannot be empty';\n    } else if (value.length >= 60) {\n        isValid = false;\n        message = 'Email too long';\n    }\n\n    return {\n        isValid,\n        message\n    }\n};\n\nconst passwordValidator: Validator = (value) => {\n    let isValid = true;\n    let message = '';\n\n    if (value.length === 0) {\n        isValid = false;\n        message = 'Email cannot be empty';\n    }\n\n    return {\n        isValid,\n        message\n    }\n};\n\nconst confirmPasswordValidator: Validator = (value, reference) => {\n    let isValid = true;\n    let message = '';\n\n    if (value !== reference) {\n        message = 'Not same as the password';\n        isValid = false;\n    }\n\n    return {\n        isValid,\n        message\n    }\n};\n\nconst postTitleValidator: Validator = (value) => {\n    let isValid = true;\n    let message = '';\n\n    if (value.length === 0) {\n        message = 'Title cannot be empty';\n        isValid = false;\n    }\n\n    return {\n        isValid,\n        message\n    }\n};\n\nconst commentValidator: Validator = (value) => {\n    let isValid = true;\n    let message = '';\n\n    if (value.length === 0) {\n        message = 'Comment cannot be empty';\n        isValid = false;\n    } else if (value.length < 5) {\n        message = 'Comment needs to be at least 5 characters';\n        isValid = false;\n    }\n\n    return {\n        isValid,\n        message\n    }\n};\n\nconst execValidators = (validators: (()=>boolean)[]) => {\n    const validationResults = validators.map(_ => _());\n    for (let i=0; i<validationResults.length; i++) {\n        if (!validationResults[i]) {\n            return false\n        }\n    }\n\n    return true\n};\n\nexport {\n    usernameValidator,\n    emailValidator,\n    passwordValidator,\n    confirmPasswordValidator,\n    execValidators,\n    postTitleValidator,\n    commentValidator\n}","const base = 'https://django-api-xiaoxihome.herokuapp.com/api/discussion_board/';\n// const base = 'http://127.0.0.1:8000/api/discussion_board/';\n\nconst accountBase = base + 'account/';\nconst login = accountBase + 'login/';\nconst register = accountBase + 'register/';\nconst verifySession = accountBase + 'verify_session/';\nconst refresh = accountBase + 'refresh/';\nconst updateAvatar = accountBase + 'update_avatar/';\n\nconst postBase = base + 'post/';\nconst getPostList = postBase + 'all/';\nconst getPostDetail = (id: number) => `${postBase}${id}/`;\nconst createPost = postBase + 'create/';\n\nconst commentBase = base + 'comment/';\nconst createComment = commentBase + 'create/';\n\nconst userActionsBase = base + 'user_actions/';\nconst like = userActionsBase + 'like/';\n\nconst urls = {\n    login,\n    register,\n    verifySession,\n    refresh,\n    updateAvatar,\n    getPostList,\n    getPostDetail,\n    createPost,\n    createComment,\n    like\n};\n\nexport default urls","import {useHistory, useLocation} from \"react-router-dom\";\n\n// redirect to \"/\" in these cases:\nconst blacklist: string[] = [\n    \"/login\",\n    \"/register\"\n];\n\nconst useRedirectBack = () => {\n    let history = useHistory();\n    let location = useLocation<any>();\n\n    const goBack = () => {\n        let from = \"/\";\n\n        if (location.state && location.state.from) {\n            if (typeof location.state.from === \"string\") {\n                if (blacklist.indexOf(location.state.from) === -1) {\n                    from = location.state.from\n                }\n            } else {\n                // from is object\n                if (location.state.from.pathname) {\n                    if (blacklist.indexOf(location.state.from.pathname) === -1) {\n                        from = Object.assign({}, location.state.from)\n                    }\n                }\n            }\n        }\n\n        history.replace(from);\n    };\n\n    return goBack\n};\n\nexport default useRedirectBack","import {useState} from \"react\";\nimport urls from \"./urls\";\nimport { useDispatch } from 'react-redux'\nimport { updateLoginStatus } from \"../redux/actions/login-status\";\nimport { openSnackbar } from \"../redux/actions/snackbar\";\nimport useRedirectBack from \"../utils/use-redirect-back\";\n\nconst useLogin = () => {\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(false);\n    const [errorMessage, setErrorMessage] = useState('');\n    const dispatch = useDispatch();\n    const goBack = useRedirectBack();\n\n    const login = (\n        email: string,\n        password: string\n    ) => {\n        if (loading) return;\n\n        // reset states\n        setError(false);\n        setErrorMessage('');\n\n        // start fetching\n        setLoading(true);\n        fetch(urls.login, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                email,\n                password\n            })\n        })\n            .then((res) => res.json())\n            .then(json => {\n                setLoading(false);\n\n                if (json.status === 'success') {\n                    const username = json.data.username;\n                    dispatch(updateLoginStatus({\n                        isLogin: true,\n                        username: username,\n                        token: {\n                            access: json.data.access,\n                            refresh: json.data.refresh\n                        }\n                    }));\n                    goBack();\n                    dispatch(openSnackbar(`Welcome back ${username}`))\n                } else {\n                    setError(true);\n                    if (json.status === 'error') {\n                        setErrorMessage(json.message)\n                    } else {\n                        setErrorMessage('Server unavailable, please try again later.')\n                    }\n                }\n            })\n            .catch(e => {\n                setLoading(false);\n\n                setError(true);\n                setErrorMessage('Server unavailable, please try again later.')\n            });\n    };\n\n    return [loading, error, errorMessage, login] as [boolean, boolean, string, typeof login]\n\n};\n\nexport default useLogin","import {Box, CircularProgress, Typography} from \"@material-ui/core\";\nimport React from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    errorMessage: {\n        fontWeight: 700,\n        color: theme.palette.error.main\n    }\n}));\n\ninterface ErrorMessageProps {\n    loading: boolean,\n    error: boolean,\n    errorMessage: string\n\n}\n\nconst ErrorMessage:React.FC<ErrorMessageProps> = ({loading, errorMessage, error}) => {\n    const classes = useStyles();\n\n    return (\n        <Typography variant={'body1'} component={'div'}>\n            <Box className={classes.errorMessage} height={40}>\n                {   loading ?\n                        <CircularProgress color=\"primary\" /> :\n                        error && errorMessage ?\n                            errorMessage :\n                            ' '\n                }\n            </Box>\n        </Typography>\n    )\n};\n\nexport default ErrorMessage","import React, {FormEvent} from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport LoginCommon from \"./commons/login-common\";\nimport {Box, Divider, Grid, TextField, Typography} from \"@material-ui/core\";\nimport FormButton from \"../commons/form-button\";\nimport {Link} from \"react-router-dom\";\nimport useInputField from \"../../utils/use-input-field\";\nimport {emailValidator, execValidators, passwordValidator} from \"../../utils/validators\";\nimport useLogin from \"../../requests/use-login\";\nimport ErrorMessage from \"../commons/error-message\";\n\nconst useStyles = makeStyles((theme) => ({\n    textField: {\n        width: '100%',\n        fontWeight: 700\n    },\n    link: {\n        fontWeight: 700,\n        '& a:link': {\n            color: theme.palette.primary.main\n        },\n        '& a:visited': {\n            color: theme.palette.primary.main\n        },\n        '& a:hover': {\n            color: theme.palette.secondary.main\n        }\n    }\n}));\n\ninterface LoginProps {\n\n}\n\nconst Login: React.FC<LoginProps> = () => {\n    const classes = useStyles();\n    const [email, setEmail, emailError, emailErrorMessage, validateEmail] = useInputField('', emailValidator);\n    const [password, setPassword, passwordError, passwordErrorMessage, validatePassword] = useInputField('', passwordValidator);\n\n    const [loading, error, errorMessage, login] = useLogin();\n\n    const submitHandler = (e: FormEvent) => {\n        e.preventDefault();\n\n        if (execValidators([validateEmail, validatePassword])) {\n            login(email, password)\n        }\n    };\n\n    return (\n        <LoginCommon imageUrl={'/images/login_bg.jpg'}>\n            <form onSubmit={submitHandler} id={'login-form'}>\n                <Grid container spacing={2}>\n                    <Grid item xs={12}>\n                        <Typography variant={'h5'} component={'h1'} color={\"textPrimary\"}>\n                            <Box textAlign={'center'} fontWeight={700}>\n                                Log In\n                            </Box>\n                        </Typography>\n                    </Grid>\n\n                    <Grid item xs={12}>\n                        <Grid container justify={'center'}>\n                            <TextField\n                                error={emailError}\n                                label=\"Email\"\n                                name=\"email\"\n                                value={email}\n                                onChange={setEmail}\n                                variant=\"outlined\"\n                                helperText={emailError ? emailErrorMessage: ' '}\n                                className={classes.textField}\n                            />\n                        </Grid>\n                    </Grid>\n\n                    <Grid item xs={12}>\n                        <Grid container justify={'center'}>\n                            <TextField\n                                error={passwordError}\n                                type=\"password\"\n                                label=\"Password\"\n                                name=\"password\"\n                                value={password}\n                                onChange={setPassword}\n                                variant=\"outlined\"\n                                helperText={passwordError ? passwordErrorMessage : ' '}\n                                className={classes.textField}\n                            />\n                        </Grid>\n                    </Grid>\n\n                    <Grid item xs={12}>\n                        <Grid container justify={'center'}>\n                            <FormButton text={'Log me in!'} form={'login-form'} disabled={loading}/>\n                        </Grid>\n                    </Grid>\n\n                    <Grid item xs={12}>\n                        <Grid container justify={'center'}>\n                            <ErrorMessage loading={loading} error={error} errorMessage={errorMessage}/>\n                        </Grid>\n                    </Grid>\n\n                    <Grid item xs={12}>\n                        <Divider />\n                    </Grid>\n\n                    <Grid item xs={12} className={classes.link}>\n                        <Grid container justify={'center'}>\n                            <Link to={'/register'}>\n                                Need an account?\n                            </Link>\n                        </Grid>\n                    </Grid>\n\n                </Grid>\n            </form>\n        </LoginCommon>\n    )\n\n};\n\nexport default Login","import {useState} from \"react\";\nimport urls from \"./urls\";\nimport { useDispatch } from 'react-redux'\nimport { updateLoginStatus } from \"../redux/actions/login-status\";\nimport {openSnackbar} from \"../redux/actions/snackbar\";\nimport useRedirectBack from \"../utils/use-redirect-back\";\n\nconst useRegister = () => {\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(false);\n    const [errorMessage, setErrorMessage] = useState('');\n    const dispatch = useDispatch();\n    const goBack = useRedirectBack();\n\n    const register = (\n        username: string,\n        email: string,\n        password: string,\n        confirmPassword: string\n    ) => {\n        if (loading) return;\n\n        // reset states\n        setError(false);\n        setErrorMessage('');\n\n        // start fetching\n        setLoading(true);\n        fetch(urls.register, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                username,\n                email,\n                password,\n                'confirm_password': confirmPassword\n            })\n        })\n            .then((res) => res.json())\n            .then(json => {\n                setLoading(false);\n\n                if (json.status === 'success') {\n                    dispatch(updateLoginStatus({\n                        isLogin: true,\n                        username: json.data.username,\n                        token: {\n                            access: json.data.access,\n                            refresh: json.data.refresh\n                        }\n                    }));\n\n                    goBack();\n                    dispatch(openSnackbar(`Welcome ${username}!`))\n                } else {\n                    setError(true);\n                    if (json.status === 'error') {\n                        setErrorMessage(json.message)\n                    } else {\n                        setErrorMessage('Server unavailable, please try again later.')\n                    }\n                }\n            })\n            .catch(e => {\n                setLoading(false);\n\n                setError(true);\n                setErrorMessage('Server unavailable, please try again later.')\n            });\n    };\n\n    return [loading, error, errorMessage, register] as [boolean, boolean, string, typeof register]\n\n};\n\nexport default useRegister","import React, {FormEvent} from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Box, Divider, Grid, TextField, Typography} from \"@material-ui/core\";\nimport FormButton from \"../commons/form-button\";\nimport {Link} from \"react-router-dom\";\nimport LoginCommon from \"./commons/login-common\";\nimport useInputField from \"../../utils/use-input-field\";\nimport {\n    confirmPasswordValidator,\n    emailValidator,\n    execValidators,\n    passwordValidator,\n    usernameValidator\n} from \"../../utils/validators\";\nimport ErrorMessage from \"../commons/error-message\";\nimport useRegister from \"../../requests/use-register\";\n\nconst useStyles = makeStyles((theme) => ({\n    textField: {\n        width: '100%',\n        fontWeight: 700\n    },\n    link: {\n        fontWeight: 700,\n        '& a:link': {\n            color: theme.palette.primary.main\n        },\n        '& a:visited': {\n            color: theme.palette.primary.main\n        },\n        '& a:hover': {\n            color: theme.palette.secondary.main\n        }\n    }\n}));\n\ninterface RegisterProps {\n\n}\n\nconst Register: React.FC<RegisterProps> = () => {\n    const classes = useStyles();\n\n    const [username, setUsername, usernameError, usernameErrorMessage, validateUsername] = useInputField('', usernameValidator);\n    const [email, setEmail, emailError, emailErrorMessage, validateEmail] = useInputField('', emailValidator);\n    const [password, setPassword, passwordError, passwordErrorMessage, validatePassword] = useInputField('', passwordValidator);\n    const [confirmPassword, setConfirmPassword, confirmPasswordError, confirmPasswordErrorMessage, validateConfirmPassword] = useInputField('', confirmPasswordValidator);\n\n    const [loading, error, errorMessage, register] = useRegister();\n\n    const submitHandler = (e: FormEvent) => {\n        e.preventDefault();\n        const validationCheck1 = execValidators([validateUsername, validateEmail, validatePassword]);\n        const validationCheck2 =  validateConfirmPassword(password);\n        if (validationCheck1 && validationCheck2) {\n            register(username, email, password, confirmPassword)\n        }\n    };\n\n    const formID = 'register-form';\n\n    return (\n        <LoginCommon imageUrl={'/images/register_bg.jpg'}>\n            <form onSubmit={submitHandler} id={formID}>\n                <Grid container spacing={2}>\n                    <Grid item xs={12}>\n                        <Typography variant={'h5'} component={'h1'} color={\"textPrimary\"}>\n                            <Box textAlign={'center'} fontWeight={700}>\n                                Join Us\n                            </Box>\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Grid container justify={'center'}>\n                            <TextField\n                                error={usernameError}\n                                label=\"Username\"\n                                name=\"username\"\n                                value={username}\n                                onChange={setUsername}\n                                helperText={usernameError ? usernameErrorMessage: ' '}\n                                variant=\"outlined\"\n                                className={classes.textField}\n                            />\n                        </Grid>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Grid container justify={'center'}>\n                            <TextField\n                                error={emailError}\n                                label=\"Email\"\n                                name=\"email\"\n                                value={email}\n                                onChange={setEmail}\n                                helperText={emailError ? emailErrorMessage: ' '}\n                                variant=\"outlined\"\n                                className={classes.textField}\n                            />\n                        </Grid>\n                    </Grid>\n                    <Grid item xs={12} md={6}>\n                        <Grid container justify={'center'}>\n                            <TextField\n                                error={passwordError}\n                                label=\"Password\"\n                                name=\"password\"\n                                type=\"password\"\n                                value={password}\n                                onChange={setPassword}\n                                helperText={passwordError ? passwordErrorMessage: ' '}\n                                variant=\"outlined\"\n                                className={classes.textField}\n                            />\n                        </Grid>\n                    </Grid>\n                    <Grid item xs={12} md={6}>\n                        <Grid container justify={'center'}>\n                            <TextField\n                                error={confirmPasswordError}\n                                label=\"Confirm Password\"\n                                name=\"confirm-password\"\n                                type=\"password\"\n                                value={confirmPassword}\n                                onChange={setConfirmPassword}\n                                helperText={confirmPasswordError ? confirmPasswordErrorMessage: ' '}\n                                variant=\"outlined\"\n                                className={classes.textField}\n                            />\n                        </Grid>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Grid container justify={'center'}>\n                            <FormButton text={'I\\'m in!'} form={formID} disabled={false}/>\n                        </Grid>\n                    </Grid>\n\n                    <Grid item xs={12}>\n                        <Grid container justify={'center'}>\n                            <ErrorMessage loading={loading} error={error} errorMessage={errorMessage}/>\n                        </Grid>\n                    </Grid>\n\n                    <Grid item xs={12}>\n                        <Divider />\n                    </Grid>\n                    <Grid item xs={12} className={classes.link}>\n                        <Grid container justify={'center'}>\n                            <Link to={'/login'}>\n                                Already have an account?\n                            </Link>\n                        </Grid>\n                    </Grid>\n\n                </Grid>\n            </form>\n        </LoginCommon>\n    )\n};\n\nexport default Register","import React from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Button as MuiButton} from \"@material-ui/core\";\nimport {Link, useLocation} from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n    button: {\n        backgroundColor: 'rgba(255,255,255,0.3)',\n        color: '#fff',\n        fontWeight: 700,\n        textTransform: 'capitalize',\n        letterSpacing: 'inherit',\n        borderBottom: '2px solid rgba(0,0,0,0.1)',\n        borderRadius: '5px',\n        // margin: '0 4px',\n        padding: '4px 10px',\n        '&:hover': {\n            backgroundColor: theme.palette.secondary.main\n        }\n    }\n}));\n\ninterface ButtonProps {\n    text: string,\n    url?: string,\n    onClick?: () => void\n}\n\nconst ThemeButton: React.FC<ButtonProps> = ({text, url, onClick}) => {\n    const classes = useStyles();\n    const location = useLocation();\n\n    if (url) {\n        const to = {\n            pathname: url,\n            state: {\n                from: location.pathname\n            }\n        };\n        return (\n            <MuiButton variant=\"contained\" classes={{root: classes.button}} disableElevation component={Link} to={to}>\n                { text }\n            </MuiButton>\n        )\n    } else {\n        return (\n            <MuiButton variant=\"contained\" classes={{root: classes.button}} disableElevation onClick={onClick}>\n                { text }\n            </MuiButton>\n        )\n    }\n};\n\nexport default ThemeButton\n","import {useState} from \"react\";\nimport { useDispatch } from 'react-redux'\nimport {logout as logoutAction} from \"../redux/actions/login-status\";\nimport {openSnackbar} from \"../redux/actions/snackbar\";\nimport useRedirectBack from \"../utils/use-redirect-back\";\n\nconst useLogout = () => {\n    const [loading, setLoading] = useState(false);\n    // const [error, setError] = useState(false);\n    // const [errorMessage, setErrorMessage] = useState('');\n    const dispatch = useDispatch();\n    const goBack = useRedirectBack();\n\n    const clientSideLogout = () => {\n        dispatch(logoutAction());\n        goBack();\n\n        dispatch(openSnackbar('Logout succeeded'))\n    };\n\n    const logout = () => {\n        clientSideLogout()\n    };\n\n    return [loading, logout] as [typeof loading, typeof logout]\n\n};\n\nexport default useLogout","import ThemeButton from \"../commons/theme-button\";\nimport React from \"react\";\nimport {Box, CircularProgress, Grid, Typography} from \"@material-ui/core\";\nimport useLogout from \"../../requests/use-logout\";\n\ninterface LoggedInUserPanelProps {\n    username: string\n}\n\nconst LoggedInUserPanel: React.FC<LoggedInUserPanelProps> = ({username}) => {\n    const [loading, logout] = useLogout();\n\n    return (\n        <Grid container alignItems={\"center\"} justify={\"center\"} spacing={1}>\n            <Grid item>\n                <Typography component={'div'}>\n                    <Box>\n                        { username }\n                    </Box>\n                </Typography>\n            </Grid>\n            <Grid item>\n                {\n                    loading ?\n                        <CircularProgress color=\"secondary\" size={'1rem'}/> :\n                        <ThemeButton text={'Logout'} onClick={logout}/>\n                }\n            </Grid>\n        </Grid>\n    )\n};\n\nexport default LoggedInUserPanel","import ThemeButton from \"../commons/theme-button\";\nimport React from \"react\";\nimport {Grid} from \"@material-ui/core\";\n\nconst AnonymousUserPanel: React.FC = () => {\n    return (\n        <Grid container alignItems={\"center\"} justify={\"center\"} spacing={1}>\n            <Grid item>\n                <ThemeButton text={'Join'} url={'/register'}/>\n            </Grid>\n            <Grid item>\n                <ThemeButton text={'Login'} url={'/login'}/>\n            </Grid>\n        </Grid>\n    )\n};\n\nexport default AnonymousUserPanel","import {Box, Typography} from \"@material-ui/core\";\nimport {Link} from \"react-router-dom\";\nimport React from \"react\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        fontFamily: [\n            'Oleo Script Swash Caps',\n            'sans-serif',\n        ].join(','),\n        fontWeight: 700,\n        fontSize: '1.5rem',\n        [theme.breakpoints.up('md')]: {\n            fontSize: '1.75rem',\n        },\n        fontStyle: \"normal\",\n        color: \"#fff\",\n        whiteSpace: 'nowrap'\n    }\n}));\n\nconst Logo: React.FC = () => {\n    const classes = useStyles();\n\n    return (\n        <Typography variant={'h1'} component={'h1'} className={classes.root}>\n            <Box fontWeight={700} textAlign={\"center\"}>\n                <Link to={'/'}>\n                    Blog | XiaoxiHome\n                </Link>\n            </Box>\n        </Typography>\n    )\n};\n\nexport default Logo","import React, {useContext} from 'react';\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Box, Grid, Typography} from \"@material-ui/core\";\nimport {Link} from \"react-router-dom\";\nimport LoggedInUserPanel from \"./logged-in-user-panel\";\nimport AnonymousUserPanel from \"./anonymous-user-panel\";\nimport Logo from \"../commons/logo\";\n\ninterface HeaderProps {\n    isLogin: boolean,\n    username: string,\n}\n\nconst useStyles = makeStyles((theme) => ({\n    headerDimension: {\n        width: '100%',\n        height: '80px',\n    },\n    root: {\n        backgroundColor: theme.palette.primary.main,\n        position: 'fixed',\n        zIndex: theme.zIndex.appBar,\n        left: 0,\n        top: 0,\n        color: theme.palette.primary.contrastText,\n        padding: theme.spacing(0, 1)\n    },\n    placeholder: {\n        position: 'relative',\n    },\n    button: {\n        backgroundColor: 'rgba(255,255,255,0.5)',\n        color: '#fff',\n        fontWeight: 700,\n        textTransform: 'capitalize',\n        '&:hover': {\n            backgroundColor: theme.palette.secondary.main\n        }\n    }\n}));\n\n\nconst Header: React.FC<HeaderProps> = ({isLogin, username}) => {\n    const classes = useStyles();\n\n    return (\n        <header className={`${classes.placeholder} ${classes.headerDimension}`}>\n            <Grid container alignItems={\"center\"} justify={\"center\"} className={`${classes.root} ${classes.headerDimension}`}>\n                <Grid item xs={6} md={4}>\n                    <Logo/>\n                </Grid>\n                <Grid item xs={1} md={4}>\n\n                </Grid>\n                <Grid item xs={5} md={4}>\n                    {\n                        isLogin ?\n                            <LoggedInUserPanel username={username}/> :\n                            <AnonymousUserPanel />\n                    }\n                </Grid>\n            </Grid>\n        </header>\n    )\n};\n\n\n\nexport default Header;\n","import {connect} from \"react-redux\";\nimport Header from \"../components/header/header\";\nimport {State} from \"../redux/state\";\n\nfunction mapStateToProps(state: State) {\n    return {\n        isLogin: state.loginStatus.isLogin,\n        username: state.loginStatus.username\n    }\n}\n\nconst HeaderContainer = connect(\n    mapStateToProps\n)(Header);\n\nexport default HeaderContainer;\n","import {useStore} from \"react-redux\";\nimport {State} from \"../redux/state\";\n\nconst useGetAuthorizationHeader = () => {\n    const state = useStore<State>().getState();\n    const accessToken = state.loginStatus.token.access;\n\n    const accessHeader = {\n        'Authorization': `Bearer ${accessToken}`\n    };\n\n    return accessHeader\n};\n\nexport default useGetAuthorizationHeader","import urls from \"./urls\";\nimport {useDispatch, useStore} from 'react-redux'\nimport useGetAuthorizationHeader from \"./use-get-authorization-header\";\nimport { refreshToken as refreshTokenAction } from '../redux/actions/login-status'\nimport {State} from \"../redux/state\";\n\nconst useVerifyToken = () => {\n    const state = useStore<State>().getState();\n    const isLogin = state.loginStatus.isLogin;\n    const refreshToken = state.loginStatus.token.refresh;\n\n    const accessHeader = useGetAuthorizationHeader();\n    const dispatch = useDispatch();\n\n    const validate = () => {\n        return new Promise<boolean>(async (resolve, reject) => {\n            try {\n                // not login\n                if (!isLogin) {\n                    resolve(false);\n                    return\n                }\n\n                // verify if access token still valid\n                const res = await fetch(urls.verifySession, {\n                            method: 'POST',\n                            headers: {\n                                'Content-Type': 'application/json',\n                                ...accessHeader\n                            }\n                });\n                const json = await res.json();\n                if (json.status === 'success') {\n                    // access token still valid\n                    resolve(true);\n                    return\n                }\n\n                // access token not valid\n                // try refresh\n                const refreshRes = await fetch(urls.refresh, {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json',\n                    },\n                    body: JSON.stringify({\n                        refresh: refreshToken\n                    })\n                });\n                const refreshJson = await refreshRes.json();\n                if (refreshJson.status === 'success') {\n                    // refresh successful\n                    dispatch(refreshTokenAction(refreshJson.data.access));\n                    resolve(true);\n                    return\n                }\n\n                // refresh failed\n                resolve(false);\n\n            } catch (e) {\n                console.log(e);\n                resolve(false)\n            }\n        });\n    };\n\n    return validate\n\n};\n\nexport default useVerifyToken","import {useEffect, useState} from \"react\";\nimport urls from \"./urls\";\nimport {PostData} from \"../components/post-list/post\";\nimport {useStore} from \"react-redux\";\nimport {State} from \"../redux/state\";\nimport useGetAuthorizationHeader from \"./use-get-authorization-header\";\nimport useVerifyToken from \"./use-verify-token\";\n\nconst useGetPostList = () => {\n    const isLogin = useStore<State>().getState().loginStatus.isLogin;\n    const accessHeader = useGetAuthorizationHeader();\n    const validateToken = useVerifyToken();\n\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(false);\n    const [data, setData] = useState<PostData[] | null>(null);\n\n    useEffect(() => {\n        fetchPostList()\n    }, [isLogin]);\n\n    const fetchPostList = async (\n    ) => {\n        try {\n            if (loading) return;\n\n            // reset states\n            setError(false);\n\n            // validate token if logged in\n            let hasValidToken = false;\n            if (isLogin) {\n                hasValidToken  = await validateToken()\n            }\n\n            // start fetching\n            setLoading(true);\n            const res = await fetch(urls.getPostList, {\n                method: 'GET',\n                headers: hasValidToken ? {...accessHeader} : {}\n            });\n            const json = await res.json();\n            setLoading(false);\n            console.log(json);\n\n            if (json.status === 'success') {\n                console.log(json.data);\n                setData(json.data)\n            } else {\n                console.log(json);\n                setError(true);\n            }\n        } catch (e) {\n            setLoading(false);\n            console.log(e);\n            setError(true);\n        }\n    };\n\n    return [loading, error, data] as [typeof loading, typeof error, typeof data]\n\n};\n\nexport default useGetPostList","const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n\nconst getTimeString = (ISOString: string) => {\n    const date = new Date(ISOString);\n    const hour = date.getHours() < 10 ? `0${date.getHours()}` : date.getHours();\n    const minute = date.getMinutes() < 10 ? `0${date.getMinutes()}` : date.getMinutes();\n    return `${date.getDate()} ${months[date.getMonth()]}, ${date.getFullYear()} - ${hour}:${minute}`\n};\n\nexport default getTimeString","import {useHistory, useLocation} from \"react-router-dom\";\n\nconst useRedirectToLogin = () => {\n    const history = useHistory();\n    const location = useLocation();\n\n    const redirectToLogin = () => {\n        history.push({\n            pathname: \"/login\",\n            state: {\n                from: location.pathname\n            }\n        });\n    };\n\n    return redirectToLogin\n};\n\nexport default useRedirectToLogin","import useGetAuthorizationHeader from \"./use-get-authorization-header\";\nimport useVerifyToken from \"./use-verify-token\";\nimport {useState} from \"react\";\nimport {useDispatch} from \"react-redux\";\nimport urls from \"./urls\";\nimport {openSnackbar} from \"../redux/actions/snackbar\";\nimport {PostData} from \"../components/post-list/post\";\nimport useRedirectToLogin from \"../utils/use-redirect-to-login\";\n\ntype Type = 'post' | 'comment';\ntype Action = 1 | 0 | -1;\n\nconst useLike = (type: Type, id: string) => {\n    const accessHeader = useGetAuthorizationHeader();\n    const validateToken = useVerifyToken();\n\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(false);\n    const [updatedData, setUpdatedData] = useState<PostData | null>(null);\n    const dispatch = useDispatch();\n    const redirectToLogin = useRedirectToLogin();\n\n    const like = async (\n        action: Action\n    ) => {\n        try {\n            console.log(JSON.stringify({\n                \"target_type\": type,\n                \"target_id\": id,\n                action\n            }));\n            if (loading) return;\n\n            // reset states\n            setError(false);\n            setLoading(true);\n\n            // redirect to login if token not valid\n            const isTokenValid = await validateToken();\n            if (!isTokenValid) {\n                setLoading(false);\n                redirectToLogin();\n                return\n            }\n\n            //\n            const res = await fetch(urls.like, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    ...accessHeader\n                },\n                body: JSON.stringify({\n                    \"target_type\": type,\n                    \"target_id\": id,\n                    action\n                })\n            });\n            const json = await res.json();\n            setLoading(false);\n            if (json.status === 'success') {\n                setUpdatedData(json.data)\n            } else {\n                dispatch(openSnackbar(json.message));\n                setError(true)\n            }\n        } catch (e) {\n            console.log(e);\n            setLoading(false);\n            setError(true);\n            dispatch(openSnackbar('Server is not available please try again later'));\n        }\n    };\n\n    return [loading, error, updatedData, like] as [typeof loading, typeof error, typeof updatedData, typeof like]\n};\n\nexport default useLike","import IconButton from \"@material-ui/core/IconButton\";\nimport ThumbUpRoundedIcon from \"@material-ui/icons/ThumbUpRounded\";\nimport green from \"@material-ui/core/colors/green\";\nimport ThumbDownRoundedIcon from \"@material-ui/icons/ThumbDownRounded\";\nimport red from \"@material-ui/core/colors/red\";\nimport React from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport useLike from \"../../requests/use-like\";\n\nconst useStyles = makeStyles((theme) => ({\n    likeButtons: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'center',\n        marginLeft: '-14px'\n    },\n    buttonText: {\n        lineHeight: 1,\n        color: theme.palette.grey[\"500\"],\n        fontSize: '0.875rem',\n        fontWeight: 700,\n    },\n    button: {\n        color: theme.palette.grey[\"400\"],\n        fontSize: '1.25rem'\n    },\n}));\n\ninterface LikeButtonsProps {\n    type: 'post' | 'comment',\n    id: string\n    likes: number,\n    dislikes: number,\n    isLiked: 0 | 1 | -1 | undefined\n}\n\nconst LikeButtons: React.FC<LikeButtonsProps> = ({type, id, likes, dislikes, isLiked}) => {\n    const classes = useStyles();\n\n    const [likeLoading, likeError, updatedData, like] = useLike(type, id);\n    if (updatedData !== null) {\n        likes = updatedData.likes;\n        dislikes = updatedData.dislikes;\n        if (updatedData['is_liked'] !== undefined) {\n            isLiked = updatedData['is_liked']\n        }\n    }\n\n    const likedByUser = isLiked === 1;\n    const dislikedByUser = isLiked === -1;\n\n    const likeToggler = () => {\n        likedByUser ? like(0) : like(1);\n    };\n\n    const dislikeToggler = () => {\n        dislikedByUser ? like(0) : like(-1);\n    };\n\n    return (\n        <div className={classes.likeButtons}>\n            <IconButton aria-label={`like ${type}`} disabled={likeLoading} onClick={likeToggler}>\n                <ThumbUpRoundedIcon className={classes.button} style={likedByUser ? {color: green[300]} : {}}/>\n            </IconButton>\n            <div className={classes.buttonText}>\n                { likes }\n            </div>\n            <IconButton aria-label={`dislike ${type}`} disabled={likeLoading} onClick={dislikeToggler}>\n                <ThumbDownRoundedIcon className={classes.button} style={dislikedByUser ? {color: red[300]} : {}}/>\n            </IconButton>\n            <div className={classes.buttonText}>\n                { dislikes }\n            </div>\n        </div>\n    )\n};\n\nexport default LikeButtons","import React from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Box, Paper, Typography} from \"@material-ui/core\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport {Link} from \"react-router-dom\";\nimport getTimeString from \"../../utils/get-time-string\";\nimport LikeButtons from \"../commons/like-buttons\";\n\nexport interface PostData {\n    id: string\n    title: string,\n    content: string,\n    likes: number,\n    dislikes: number,\n    created: string,\n    comments: number\n    owner: {\n        email: string,\n        username: string,\n        avatar_url: string\n    },\n    \"is_liked\"?: 0 | 1 | -1\n}\n\ninterface PostProps {\n    isLogin: boolean,\n    data: PostData\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        margin: theme.spacing(1, 0)\n    },\n    paper: {\n        width: '100%',\n        minHeight: '100px',\n        padding: theme.spacing(2),\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'flex-start'\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.primary.light\n    },\n    content: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'flex-start',\n        justifyContent: 'center',\n    },\n    title: {\n        margin: theme.spacing(0, 2),\n        '& h2': {\n            fontSize: '1.25rem',\n            fontWeight: 700,\n            color: theme.palette.text.primary,\n            margin: theme.spacing(0),\n            lineHeight: 1.2\n        },\n        '& h2:hover': {\n            color: theme.palette.primary.main,\n        }\n    },\n    author: {\n        margin: theme.spacing(0, 2),\n    },\n    actionArea: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'flex-start',\n        color: theme.palette.grey[\"500\"],\n        fontSize: '0.875rem',\n        fontWeight: 700,\n        [theme.breakpoints.down('md')]: {\n            flexDirection: 'column',\n            alignItems: 'flex-start',\n            justifyContent: 'center',\n        }\n    },\n    actionItem: {\n        margin: theme.spacing(0, 2)\n    }\n}));\n\nconst Post: React.FC<PostProps> = ({isLogin, data}) => {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <Paper className={classes.paper} elevation={0}>\n                <Avatar variant=\"rounded\" className={classes.avatar} src={data.owner.avatar_url}>\n                    { data.owner.username.charAt(0) }\n                </Avatar>\n                <div className={classes.content}>\n                    <div className={classes.title}>\n                        <Link to={`/post/${data.id}`}>\n                            <h2>\n                                { data.title }\n                            </h2>\n                        </Link>\n                    </div>\n                    <div className={classes.author}>\n                        <Typography variant={'caption'} component={'div'}>\n                            <Box>\n                                { data.owner.username }\n                            </Box>\n                        </Typography>\n                    </div>\n                    <div className={classes.actionArea}>\n                        <div className={classes.actionItem}>\n                            <LikeButtons type={'post'} id={data.id} likes={data.likes} dislikes={data.dislikes} isLiked={data.is_liked}/>\n                        </div>\n                        <div className={classes.actionItem}>\n                            { `${data.comments} ${data.comments > 1 ? 'comments' : 'comment'}` }\n                        </div>\n                        <div className={classes.actionItem}>\n                            { getTimeString(data.created) }\n                        </div>\n                    </div>\n                </div>\n            </Paper>\n        </div>\n    )\n};\n\nexport default Post","import React from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport useGetPostList from \"../../requests/use-get-post-list\";\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport {Box, Typography} from \"@material-ui/core\";\nimport Post from \"./post\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        // padding: theme.spacing(0, 2)\n    }\n}));\n\ninterface PostListProps {\n    isLogin: boolean\n}\n\nconst PostList: React.FC<PostListProps> = ({isLogin}) => {\n    const classes = useStyles();\n\n    const [loading, error, data] = useGetPostList();\n\n    let content;\n    if (loading) {\n        content = (new Array(10)).fill(0).map((_, i) => {\n                return (\n                    <Box width='100%' my={1} borderRadius={'5px'} key={i} overflow={'hidden'}>\n                        <Skeleton variant=\"rect\" animation=\"wave\" width={'100%'} height={150}/>\n                    </Box>\n                )\n            })\n    } else if (error) {\n        content = (\n            <Typography variant={'body1'} component={'h2'}>\n                <Box fontWeight={700} color={'primary.main'} textAlign={'center'}>\n                    Server is unavailable now, please try again later\n                </Box>\n            </Typography>\n        )\n    } else {\n        content = data?.map((_, i) => {\n            return (\n                <Post key={i} isLogin={isLogin} data={_}/>\n            )\n        })\n    }\n\n    return (\n        <div className={classes.root}>\n            { content }\n        </div>\n    )\n};\n\nexport default PostList","import {connect} from \"react-redux\";\nimport {State} from \"../redux/state\";\nimport PostList from \"../components/post-list/post-list\";\n\nfunction mapStateToProps(state: State) {\n    return {\n        isLogin: state.loginStatus.isLogin\n    }\n}\n\n// function mapDispatchToProps(dispatch: Dispatch) {\n//     return {\n//         closeSnackbar: () => dispatch(closeSnackbar())\n//     }\n// }\n\nconst PostListContainer = connect(\n    mapStateToProps\n)(PostList);\n\nexport default PostListContainer;\n","import {Button} from \"@material-ui/core\";\nimport React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\n\nconst useStyles = makeStyles((theme) => ({\n    button: {\n        backgroundColor: theme.palette.primary.light,\n        maxWidth: '100%',\n        color: '#fff',\n        fontWeight: 700,\n        textTransform: 'capitalize',\n        letterSpacing: 'inherit',\n        borderBottom: '2px solid rgba(0,0,0,0.1)',\n        borderRadius: '5px',\n        padding: '4px 10px',\n        '& span': {\n            color: '#fff',\n        },\n        '&:hover': {\n            backgroundColor: theme.palette.secondary.main\n        }\n    }\n}));\n\ninterface BaseButtonProps {\n    width: string,\n    text: string\n}\n\ninterface GenericClickButtonProps extends BaseButtonProps {\n    onClick: any,\n    disabled?: boolean\n}\n\nconst GenericClickButton: React.FC<GenericClickButtonProps> = ({width, text, onClick, disabled}) => {\n    const classes = useStyles();\n\n    return (\n            <Button variant=\"contained\" classes={{root: classes.button}} disableElevation onClick={onClick} style={{width: width}} disabled={disabled}>\n                { text }\n            </Button>\n    )\n};\n\ninterface GenericLinkButtonProps extends BaseButtonProps {\n    link: string\n}\n\nconst GenericLinkButton: React.FC<GenericLinkButtonProps> = ({width, text, link}) => {\n    const classes = useStyles();\n\n    return (\n        <Button variant=\"contained\" classes={{root: classes.button}} disableElevation component={Link} to={link} style={{width: width}}>\n            { text }\n        </Button>\n    )\n};\n\nexport {GenericClickButton, GenericLinkButton};","import React from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport {GenericLinkButton} from \"../commons/generic-button\";\n\ninterface SideBarProps {\n    isLogin: boolean\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: 'calc(100% - 16px)',\n        minHeight: '100px',\n        margin: '8px',\n        padding: '24px 0',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        [theme.breakpoints.down('md')]: {\n            width: '100%',\n            margin: '8px 0',\n        }\n    },\n    rowWrapper: {\n        width: '80%',\n        margin: '8px 0'\n    }\n}));\n\nconst SideBar: React.FC<SideBarProps> = ({isLogin}) => {\n    const classes = useStyles();\n\n    return (\n        <Paper className={classes.root} elevation={0}>\n            <div className={classes.rowWrapper}>\n                <GenericLinkButton link={'/edit-post'} width={'100%'} text={'Create Post'}/>\n            </div>\n            {\n                isLogin &&\n                <div className={classes.rowWrapper}>\n                    <GenericLinkButton link={'/account-setting'} width={'100%'} text={'Account Settings'}/>\n                </div>\n            }\n        </Paper>\n    )\n};\n\nexport default SideBar","import {connect} from \"react-redux\";\nimport {State} from \"../redux/state\";\nimport SideBar from \"../components/side-bar/side-bar\";\n\nfunction mapStateToProps(state: State) {\n    return {\n        isLogin: state.loginStatus.isLogin\n    }\n}\n\nconst SideBarContainer = connect(\n    mapStateToProps\n)(SideBar);\n\nexport default SideBarContainer;\n","import React from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport PostListContainer from \"../../containers/post-list-container\";\nimport SideBarContainer from \"../../containers/side-bar-container\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        margin: theme.spacing(2, 0),\n        width: '100%',\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'flex-start',\n        justifyContent: 'center',\n        [theme.breakpoints.down('md')]: {\n            flexDirection: 'column',\n            margin: 0,\n        }\n    },\n    left: {\n        width: \"75%\",\n        [theme.breakpoints.down('md')]: {\n            width: \"100%\",\n        }\n    },\n    right: {\n        width: \"25%\",\n        [theme.breakpoints.down('md')]: {\n            width: \"100%\",\n        }\n    }\n}));\n\ninterface MainPageProps {\n\n}\n\nconst MainPage: React.FC<MainPageProps> = () => {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.left}>\n                <PostListContainer />\n            </div>\n            <div className={classes.right}>\n                <SideBarContainer />\n            </div>\n        </div>\n    )\n};\n\nexport default MainPage","import React from \"react\";\nimport {\n    Box,\n    createStyles,\n    IconButton,\n    Snackbar as MuiSnackbar,\n    SnackbarContent,\n} from \"@material-ui/core\";\nimport Close from '@material-ui/icons/Close';\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles((theme) => createStyles({\n    root: {\n\n    },\n    content: {\n        backgroundColor: theme.palette.primary.main,\n    },\n}));\n\ninterface SnackbarProps {\n    open: boolean,\n    closeSnackbar: () => void,\n    message: string\n}\n\nconst Snackbar: React.FC<SnackbarProps> = ({open, closeSnackbar, message}) => {\n    const classes = useStyles();\n\n    return (\n        <MuiSnackbar\n            anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'center',\n            }}\n            open={open}\n            autoHideDuration={5000}\n            onClose={closeSnackbar}\n            className={classes.root}\n        >\n            <SnackbarContent\n                className={classes.content}\n                message={\n                    <Typography variant={'body1'} component={'div'}>\n                        <Box fontWeight={700}>\n                            { message }\n                        </Box>\n                    </Typography>\n                }\n                action={[\n                    <IconButton key=\"close\" aria-label=\"close\" color=\"inherit\" onClick={closeSnackbar}>\n                        <Close/>\n                    </IconButton>\n                ]}\n            />\n        </MuiSnackbar>\n    )\n};\n\nexport default Snackbar;","import {connect} from \"react-redux\";\nimport Snackbar from \"../components/snackbar/snackbar\";\nimport {State} from \"../redux/state\";\nimport {Dispatch} from \"redux\";\nimport {closeSnackbar} from \"../redux/actions/snackbar\";\n\nfunction mapStateToProps(state: State) {\n    return {\n        open: state.snackbar.open,\n        message: state.snackbar.message\n    }\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch) {\n    return {\n        closeSnackbar: () => dispatch(closeSnackbar())\n    }\n}\n\nconst SnackbarContainer = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Snackbar);\n\nexport default SnackbarContainer;\n","import React from \"react\";\nimport {Box, Grid, Paper, Typography} from \"@material-ui/core\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Logo from \"../commons/logo\";\nimport {Link} from \"react-router-dom\";\n\ntype FooterColumnData = {\n    title: string,\n    url: string\n}[]\n\ninterface FooterColumnProps {\n    data: FooterColumnData\n}\n\nconst userStyles = makeStyles((theme) => ({\n    root: {\n        listStyleType: 'none',\n        margin: 0,\n        padding: 0\n    },\n    header: {\n        fontSize: '1.25rem',\n        margin: '8px 0',\n        letterSpacing: '0',\n        fontWeight: 700\n    },\n    content: {\n        fontSize: '0.875rem',\n        padding: '2px',\n        '&:hover': {\n            color: theme.palette.secondary.main\n        }\n    }\n}));\n\nconst FooterColumn: React.FC<FooterColumnProps> = ({data}) => {\n    const classes = userStyles();\n\n    return (\n        <ul className={classes.root}>\n            {\n                data.map((item, i) => {\n                    if (i === 0) {\n                        return (\n                            <li key={i}>\n                                <div className={classes.header}>\n                                    { item.title }\n                                </div>\n                            </li>\n                        )\n                    } else {\n                        return (\n                            <li key={i}>\n                                <a href={item.url} target=\"_blank\" rel=\"noopener noreferrer\">\n                                    <div className={classes.content}>\n                                        { item.title }\n                                    </div>\n                                </a>\n                            </li>\n                            )\n                    }\n                })\n            }\n        </ul>\n    )\n};\n\nexport default FooterColumn","import React from \"react\";\nimport {Grid, Paper} from \"@material-ui/core\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Logo from \"../commons/logo\";\nimport FooterColumn from \"./footer-column\";\n\nconst column1 = [\n    {\n        title: 'Learn More',\n        url: ''\n    },\n    {\n        title: 'API Endpoints',\n        url: 'https://www.google.ca/'\n    },\n    {\n        title: 'GitHub',\n        url: 'https://github.com/CptDoraemon/discussion-board-client'\n    },\n    {\n        title: 'XiaoxiHome',\n        url: 'https://www.xiaoxihome.com/'\n    },\n];\n\nconst userStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        margin: '40px 0 8px 0'\n    },\n    paper: {\n        width: '100%',\n        backgroundColor: '#4a5568',\n        color: '#a0aec0',\n        padding: theme.spacing(5)\n    },\n    copyright: {\n        width: '100%',\n        margin: theme.spacing(5, 0, 0, 0),\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'center',\n        fontSize: '0.8rem'\n    }\n}));\n\nconst Footer: React.FC = () => {\n    const classes = userStyles();\n\n    return (\n        <footer className={classes.root}>\n            <Paper className={classes.paper}>\n                <Grid container spacing={5}>\n                    <Grid item>\n                        <Logo/>\n                    </Grid>\n                    <Grid item>\n                        <FooterColumn data={column1} />\n                    </Grid>\n                </Grid>\n                <div className={classes.copyright}>\n                    <div>\n                        © 2020 XiaoxiHome.com\n                    </div>\n                </div>\n            </Paper>\n        </footer>\n    )\n};\n\nexport default Footer","import {\n    Route,\n    Redirect\n} from \"react-router-dom\";\nimport React from \"react\";\n\ninterface PrivateRouteProps {\n    isLogin: boolean,\n    path: string\n}\n\nconst PrivateRoute: React.FC<PrivateRouteProps> = ({ children, isLogin, ...rest}) => {\n    return (\n        <Route\n            {...rest}\n            render={({ location }) =>\n                isLogin ? (\n                    children\n                ) : (\n                    <Redirect\n                        to={{\n                            pathname: \"/login\",\n                            state: { from: location }\n                        }}\n                    />\n                )\n            }\n        />\n    );\n};\n\nexport default PrivateRoute","import {useState} from \"react\";\nimport urls from \"./urls\";\nimport useGetAuthorizationHeader from \"./use-get-authorization-header\";\nimport useVerifyToken from \"./use-verify-token\";\nimport useRedirectToLogin from \"../utils/use-redirect-to-login\";\n\nconst usePostSubmission = () => {\n    const accessHeader = useGetAuthorizationHeader();\n    const validateToken = useVerifyToken();\n\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(false);\n    const [errorMessage, setErrorMessage] = useState('');\n    const [submitted, setSubmitted] = useState(false);\n    const redirectToLogin = useRedirectToLogin();\n\n    const submit = async (\n        title: string,\n        content: string,\n        objectURLArray: string[]\n    ) => {\n        try {\n            if (loading || submitted) return;\n\n            // reset states\n            setError(false);\n            setErrorMessage(' ');\n            setLoading(true);\n\n            // redirect to login if token not valid\n            const isTokenValid = await validateToken();\n            if (!isTokenValid) {\n                setLoading(false);\n                redirectToLogin();\n                return\n            }\n\n            //\n            objectURLArray = removeUnusedObjectURL(content, objectURLArray);\n\n            //\n            const form = await getForm(title, content, objectURLArray);\n            const res = await fetch(urls.createPost, {\n                method: 'POST',\n                headers: {\n                    ...accessHeader\n                },\n                body: form\n            });\n            const json = await res.json();\n            setLoading(false);\n            if (json.status === 'success') {\n                setSubmitted(true)\n            } else {\n                setErrorMessage(json.message);\n                setError(true)\n            }\n        } catch (e) {\n            console.log(e);\n            setLoading(false);\n            setErrorMessage('Server is not available please try again later');\n            setError(true)\n        }\n    };\n\n    return [loading, error, errorMessage, submit, submitted] as [typeof loading, typeof error, typeof errorMessage, typeof submit, typeof submitted]\n};\n\nconst removeUnusedObjectURL = (content: string, objectURLArray: string[]) => {\n    // some images may be deleted while editing\n    return objectURLArray.filter(url => content.indexOf(url) !== -1)\n};\n\ninterface NamedBlob {\n    blob: Blob,\n    name: string\n}\n\nconst getForm = (title: string, content: string, objectURLArray: string[]) => {\n    return new Promise<FormData>((resolve, reject) => {\n        const form = new FormData();\n        form.append('title', title);\n\n        const promiseArray = objectURLArray.map((url) => getBlobFromObjectURL(url));\n\n        Promise.all<NamedBlob>(promiseArray)\n            .then(blobs => {\n                blobs.forEach((blob, i) => {\n                    // blob name has format of:\n                    // blob:http://localhost:3000/f4d49560-de4e-420b-bcdf-64bfa833a555\n                    // use the pathname as the filename (eg: f4d49560-de4e-420b-bcdf-64bfa833a555)\n                    // replace the url in content with the new filename\n                    const urlComponents = blob.name.split('/');\n                    let filename = urlComponents[urlComponents.length - 1].length === 0 ?\n                        urlComponents[urlComponents.length - 2] :\n                        urlComponents[urlComponents.length - 1];\n\n                    content = content.replace(blob.name, filename);\n                    // file ext is .jpg because it was loaded with js, drawn in canvas ans exported as jpg\n                    form.append(`file${i}`, blob.blob, blob.name + '.jpg')\n                });\n                form.append('content', content);\n                resolve(form);\n            })\n    })\n};\n\nconst getBlobFromObjectURL = (url: string) => {\n    return new Promise<NamedBlob>((resolve, reject) => {\n        fetch(url)\n            .then(res => res.blob())\n            .then(blob => resolve({\n                blob,\n                name: url\n            }))\n            .catch((e) => reject(e))\n    })\n};\n\nexport default usePostSubmission","import {useEffect, useState} from \"react\";\nimport Quill from \"quill\";\nimport loadImage from \"blueimp-load-image\";\n\nconst objectURLArray: string[] = [];\n\nconst useEditor = (ID: string) => {\n    const [quill, setQuill] = useState<Quill | null>(null);\n\n    useEffect(() => {\n        // override methods to support objectURL\n        const Image = Quill.import('formats/image');\n        const Link = Quill.import('formats/link');\n        Image.sanitize = function(url: string) {\n            return Link.sanitize(url, ['http', 'https', 'data']) ? url : '//:0';\n        };\n        //\n        const quillInstance = new Quill(`#${ID}`, {\n            modules: {\n                toolbar: [\n                    [{header: [1, 2, false]}],\n                    ['bold', 'italic', 'underline'],\n                    ['image', 'code-block']\n                ]\n            },\n            placeholder: 'Compose an epic...',\n            theme: 'snow'  // or 'bubble'\n        });\n        quillInstance.getModule('toolbar').addHandler('image', () => imageUploadHandler(quillInstance));\n\n        setQuill(quillInstance)\n    }, [ID]);\n\n    const getObjectURLArray = () => {\n        return objectURLArray\n    };\n\n    return [quill, getObjectURLArray] as [typeof quill, typeof getObjectURLArray]\n};\n\nconst imageUploadHandler = (editor: Quill) => {\n    const input = document.createElement('input');\n    input.setAttribute('type', 'file');\n    input.setAttribute('accept', 'image/*');\n    input.click();\n    input.onchange = () => {\n        if (!input.files) return;\n        const image = input.files[0];\n        loadImage(\n            image,\n             (canvas) => {\n                // @ts-ignore\n                canvas.toBlob((blob) => {\n                    const objectURL = URL.createObjectURL(blob);\n\n                    const range = editor.getSelection();\n                    if (range) {\n                        editor.insertEmbed(range.index, 'image', `${objectURL}`);\n                        objectURLArray.push(objectURL)\n                    }\n                }, 'image/jpeg');\n            },\n            {\n                orientation: true,\n                canvas: true\n            }\n        );\n    }\n};\n\nexport default useEditor;","import React, {FormEvent} from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport 'quill/dist/quill.snow.css';\nimport {FormControl, FormHelperText, Input, InputLabel, Paper} from \"@material-ui/core\";\nimport useInputField from \"../../utils/use-input-field\";\nimport {postTitleValidator} from \"../../utils/validators\";\nimport {GenericClickButton} from \"../commons/generic-button\";\nimport usePostSubmission from \"../../requests/use-post-submission\";\nimport ErrorMessage from \"../commons/error-message\";\nimport useEditor from \"./use-editor\";\n\nconst ID = 'editor';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        padding: theme.spacing(2)\n    },\n    editor: {\n        width: '100%',\n        minHeight: '300px',\n        marginBottom: '16px',\n    },\n    title: {\n        width: '100%',\n    }\n}));\n\nconst PostEditor: React.FC = () => {\n    const classes = useStyles();\n    const {postID} = useParams();\n\n    const [editor, getObjectURLArray] = useEditor(ID);\n    const [title, titleChangeHandler, titleError, titleErrorMessage, validateTitle] = useInputField('', postTitleValidator);\n    const [loading, error, errorMessage, submit, submitted] = usePostSubmission();\n\n    const submitHandler = (e: FormEvent) => {\n        e.preventDefault();\n        if (!validateTitle()) return;\n\n        if (!editor) return;\n        submit(title, editor.root.innerHTML, getObjectURLArray())\n    };\n\n    return (\n        <Paper className={classes.root} elevation={0}>\n\n            <form>\n                <FormControl className={classes.title}>\n                    <InputLabel htmlFor=\"post-editor-title\">Title</InputLabel>\n                    <Input\n                        id=\"post-editor-title\"\n                        aria-describedby=\"post-editor-title-helper-text\"\n                        value={title}\n                        onChange={titleChangeHandler}\n                    />\n                    <FormHelperText id=\"post-editor-title-helper-text\" error={titleError}>{titleError && titleErrorMessage ? titleErrorMessage : ' '}</FormHelperText>\n                </FormControl>\n\n                <div id={ID} className={classes.editor}/>\n                <GenericClickButton onClick={submitHandler} width={'250px'} text={submitted ? 'Submitted' : 'Submit'} disabled={submitted || loading}/>\n                <ErrorMessage loading={loading} error={error} errorMessage={errorMessage}/>\n            </form>\n        </Paper>\n    )\n};\n\nexport default PostEditor","import {useEffect} from \"react\";\n\nconst defaultTitle = 'Blog | XiaoxiHome';\n\nfunction useSetTitle(title?: string) {\n\n    useEffect(() => {\n        document.title = title || defaultTitle;\n\n        return () => {\n            document.title = defaultTitle;\n        }\n    }, [title]);\n}\n\nexport default useSetTitle;","import {useEffect, useState} from \"react\";\nimport urls from \"./urls\";\nimport {useStore} from \"react-redux\";\nimport {State} from \"../redux/state\";\nimport useGetAuthorizationHeader from \"./use-get-authorization-header\";\nimport useVerifyToken from \"./use-verify-token\";\nimport {PostDetailData} from \"../components/post-detail/post-detail\";\nimport useSetTitle from \"../utils/use-set-title\";\n\nconst useGetPostDetail = (postID: number) => {\n    const isLogin = useStore<State>().getState().loginStatus.isLogin;\n    const accessHeader = useGetAuthorizationHeader();\n    const validateToken = useVerifyToken();\n\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(false);\n    const [data, setData] = useState<PostDetailData | null>(null);\n\n    useSetTitle(data?.title);\n\n    useEffect(() => {\n        fetchPostDetail()\n    }, [isLogin, postID]);\n\n    const fetchPostDetail = async (\n    ) => {\n        try {\n            if (loading) return;\n\n            // reset states\n            setError(false);\n\n            // validate token if logged in\n            let hasValidToken = false;\n            if (isLogin) {\n                hasValidToken  = await validateToken()\n            }\n\n            // start fetching\n            setLoading(true);\n            const res = await fetch(urls.getPostDetail(postID), {\n                method: 'GET',\n                headers: hasValidToken ? {...accessHeader} : {}\n            });\n            const json = await res.json();\n            setLoading(false);\n            console.log(json);\n\n            if (json.status === 'success') {\n                console.log(json.data);\n                setData(json.data)\n            } else {\n                console.log(json);\n                setError(true);\n            }\n        } catch (e) {\n            setLoading(false);\n            console.log(e);\n            setError(true);\n        }\n    };\n\n    return [loading, error, data] as [typeof loading, typeof error, typeof data]\n\n};\n\nexport default useGetPostDetail","import {useHistory, useLocation} from \"react-router-dom\";\n\nconst useReload = () => {\n    const history = useHistory();\n    const location = useLocation();\n\n    const reload = () => {\n        history.replace('/');\n        history.replace(location)\n    };\n\n    return reload\n};\n\nexport default useReload","import {useState} from \"react\";\nimport urls from \"./urls\";\nimport useGetAuthorizationHeader from \"./use-get-authorization-header\";\nimport useVerifyToken from \"./use-verify-token\";\nimport useRedirectToLogin from \"../utils/use-redirect-to-login\";\nimport useReload from \"../utils/use-reload\";\n\nconst useCommentSubmission = () => {\n    const accessHeader = useGetAuthorizationHeader();\n    const validateToken = useVerifyToken();\n\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(false);\n    const [errorMessage, setErrorMessage] = useState('');\n    const redirectToLogin = useRedirectToLogin();\n    const reload = useReload();\n\n    const submit = async (\n        content: string,\n        parentPost: string,\n        parentComment: string | null\n    ) => {\n        try {\n            if (loading) return;\n\n            // reset states\n            setError(false);\n            setErrorMessage(' ');\n            setLoading(true);\n\n            // redirect to login if token not valid\n            const isTokenValid = await validateToken();\n            if (!isTokenValid) {\n                setLoading(false);\n                redirectToLogin();\n                return\n            }\n\n            //\n            const res = await fetch(urls.createComment, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    ...accessHeader\n                },\n                body: JSON.stringify({\n                    'content': content,\n                    'parent_post': parentPost,\n                    'parent_comment': parentComment\n                })\n            });\n            const json = await res.json();\n            setLoading(false);\n            if (json.status === 'success') {\n                reload()\n            } else {\n                console.log(json);\n                setErrorMessage(json.message);\n                setError(true)\n            }\n        } catch (e) {\n            console.log(e);\n            setLoading(false);\n            setErrorMessage('Server is not available please try again later');\n            setError(true)\n        }\n    };\n\n    return [loading, error, errorMessage, submit] as [typeof loading, typeof error, typeof errorMessage, typeof submit]\n};\n\nexport default useCommentSubmission","import {TextField} from \"@material-ui/core\";\nimport {GenericClickButton} from \"../commons/generic-button\";\nimport ErrorMessage from \"../commons/error-message\";\nimport React, {FormEvent} from \"react\";\nimport useInputField from \"../../utils/use-input-field\";\nimport {commentValidator} from \"../../utils/validators\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport useCommentSubmission from \"../../requests/use-comment-submission\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        margin: '16px 0'\n    },\n    input: {\n        width: '100%',\n    }\n}));\n\ninterface CommentInputProps {\n    parentPost: string,\n    parentComment: string | null\n}\n\nconst CommentInput: React.FC<CommentInputProps> = ({parentPost, parentComment}) => {\n    const classes = useStyles();\n    const [comment, commentChangeHandler, commentError, commentErrorMessage, validateComment] = useInputField('', commentValidator);\n    const [loading, error, errorMessage, submit] = useCommentSubmission();\n\n    const submitHandler = (e: FormEvent) => {\n        e.preventDefault();\n\n        if (!validateComment()) return;\n        submit(comment, parentPost, parentComment)\n    };\n\n    return (\n        <form className={classes.root}>\n            <TextField\n                id=\"comment-input\"\n                label=\"Leave comment\"\n                name=\"comment\"\n                value={comment}\n                onChange={commentChangeHandler}\n                error={commentError}\n                helperText={commentError && commentErrorMessage ? commentErrorMessage : ' '}\n                variant=\"outlined\"\n                className={classes.input}\n            />\n\n            <GenericClickButton onClick={submitHandler} width={'250px'} text={'Submit'} disabled={loading}/>\n            {\n                error && errorMessage &&\n                <ErrorMessage loading={loading} error={error} errorMessage={errorMessage}/>\n            }\n        </form>\n    )\n};\n\nexport default CommentInput","import Avatar from \"@material-ui/core/Avatar\";\nimport getTimeString from \"../../utils/get-time-string\";\nimport LikeButtons from \"../commons/like-buttons\";\nimport React from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    postInfo: {\n        width: '100%',\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'flex-start',\n        color: theme.palette.grey[500],\n        fontWeight: 700,\n        [theme.breakpoints.down('md')]: {\n            flexDirection: 'column',\n            alignItems: 'flex-start',\n            justifyContent: 'center',\n        }\n    },\n    avatar: {\n        backgroundColor: theme.palette.primary.main\n    },\n    avatarSmall: {\n        width: '1.2rem',\n        height: '1.2rem',\n        fontSize: '0.8rem'\n    },\n    username: {\n        color: theme.palette.text.primary\n    },\n    postInfoItem: {\n        margin: theme.spacing(0, 2),\n        [theme.breakpoints.down('md')]: {\n            margin: '4px 0',\n        }\n    }\n}));\n\ninterface ItemInfoProps {\n    type: 'comment' | 'post',\n    username: string,\n    avatarUrl: string\n    created: string,\n    id: string,\n    likes: number,\n    dislikes: number,\n    isLiked: -1 | 0 | 1 | undefined,\n    small?: boolean\n}\n\nconst ItemInfo: React.FC<ItemInfoProps> = ({type, username, avatarUrl, created, id, likes, dislikes, isLiked, small}) => {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.postInfo}>\n            <div className={classes.postInfoItem}>\n                <Avatar\n                    variant=\"rounded\"\n                    className={small ? `${classes.avatar} ${classes.avatarSmall}` : classes.avatar}\n                    src={avatarUrl}\n                >\n                    { username.charAt(0) }\n                </Avatar>\n            </div>\n            <div className={`${classes.postInfoItem} ${classes.username}`}>\n                { username }\n            </div>\n            <div className={classes.postInfoItem}>\n                { getTimeString(created) }\n            </div>\n            <div className={classes.postInfoItem}>\n                <LikeButtons type={type} id={id} likes={likes} dislikes={dislikes} isLiked={isLiked}/>\n            </div>\n        </div>\n    )\n};\n\nexport default ItemInfo","import React from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport ItemInfo from \"./item-info\";\nimport {SubCommentData} from \"./comment-item\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        // margin: theme.spacing(2, 0),\n        width: '100%',\n    },\n    content: {\n        margin: '32px'\n    },\n}));\n\ninterface SubCommentItemProps {\n    data: SubCommentData\n}\n\nconst SubCommentItem: React.FC<SubCommentItemProps> = ({data}) => {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <ItemInfo type={'comment'} username={data.owner.username} avatarUrl={data.owner.avatar_url} created={data.created} id={data.id} likes={data.likes} dislikes={data.dislikes} isLiked={data.isLiked} small/>\n            <div className={classes.content}>\n                { data.content }\n            </div>\n        </div>\n    )\n\n};\n\nexport default SubCommentItem","import React, {useState} from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Box, Divider, Fade, Paper} from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ItemInfo from \"./item-info\";\nimport ChatIcon from '@material-ui/icons/Chat';\nimport Button from \"@material-ui/core/Button\";\nimport SubCommentItem from \"./sub-comment-item\";\nimport CommentInput from \"./comment-input\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        margin: '20px 0',\n        width: '100%',\n        padding: theme.spacing(2)\n    },\n    content: {\n        margin: '32px'\n    },\n    commentButton: {\n        margin: '0 32px',\n        color: theme.palette.grey[500],\n    },\n    subCommentPanel: {\n        width: 'calc(100% - 32px)',\n        margin: '8px 0 8px 32px',\n        border: `1px solid ${theme.palette.grey[400]}`,\n        borderRadius: '5px',\n        padding: theme.spacing(2)\n    }\n}));\n\ninterface CommentBaseData {\n    id: string,\n    owner: {\n        username: string,\n        email: string,\n        avatar_url: string\n    }\n    likes: number,\n    dislikes: number,\n    content: string,\n    created: string,\n    isLiked: -1 | 0 | 1 | undefined\n}\n\nexport interface CommentData extends CommentBaseData {\n    sub_comments: CommentBaseData[]\n}\n\nexport interface SubCommentData extends CommentBaseData {}\n\n\ninterface CommentItemProps {\n    data: CommentData,\n    postID: string,\n    isLogin: boolean\n}\n\nconst CommentItem: React.FC<CommentItemProps> = ({data, postID, isLogin}) => {\n    const classes = useStyles();\n\n    const [isCommentPanelOpen, setIsCommentPanelOpen] = useState(false);\n\n    return (\n        <Paper className={classes.root} elevation={0}>\n            <ItemInfo type={'comment'} username={data.owner.username} avatarUrl={data.owner.avatar_url} created={data.created} id={data.id} likes={data.likes} dislikes={data.dislikes} isLiked={data.isLiked} small/>\n            <div className={classes.content}>\n                { data.content }\n            </div>\n            <Button\n                variant=\"outlined\"\n                className={classes.commentButton}\n                disableElevation\n                startIcon={<ChatIcon />}\n                onClick={() => setIsCommentPanelOpen(prev => !prev)}\n                size={'small'}\n            >\n                { data.sub_comments.length }\n            </Button>\n\n            {\n                isCommentPanelOpen &&\n                <Fade in={isCommentPanelOpen} timeout={1000}>\n                    <div className={classes.subCommentPanel}>\n                        { !data.sub_comments.length && <Box textAlign={'center'}>No comment yet</Box> }\n                        { data.sub_comments.map((item, i) => <SubCommentItem data={item} key={i}/>) }\n                        { isLogin && <CommentInput parentPost={postID} parentComment={data.id}/> }\n                    </div>\n                </Fade>\n            }\n        </Paper>\n    )\n\n};\n\nexport default CommentItem","import React from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Box, Divider, Paper} from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CommentInput from \"./comment-input\";\nimport CommentItem, {CommentData} from \"./comment-item\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        margin: '60px 0',\n        width: '100%',\n    },\n    paper: {\n        width: '100%',\n        padding: theme.spacing(4)\n    },\n    loginToLeaveMessage: {\n        width: '100%',\n        height: '200px',\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'center',\n        fontWeight: 700,\n        color: theme.palette.grey[600]\n    }\n}));\n\ninterface CommentListProps {\n    isLogin: boolean,\n    comments: number,\n    postID: string,\n    data: CommentData[]\n}\n\nconst CommentList: React.FC<CommentListProps> = ({isLogin, comments, postID, data}) => {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <Paper className={classes.paper} elevation={0}>\n                <Typography variant={'body1'} component={'div'}>\n                    <Box fontWeight={700}>\n                        { `${comments} ${comments > 1 ? 'comments' : 'comment'}` }\n                    </Box>\n                </Typography>\n                <Divider />\n            </Paper>\n\n                {\n                    data.map((itemData, i) => <CommentItem data={itemData} postID={postID} key={i} isLogin={isLogin}/>)\n                }\n\n            <Paper className={classes.paper} elevation={0}>\n                {\n                    isLogin ?\n                        <CommentInput parentPost={postID} parentComment={null}/> :\n                        <div className={classes.loginToLeaveMessage}>\n                            Login to leave a comment\n                        </div>\n                }\n            </Paper>\n        </div>\n    )\n\n};\n\nexport default CommentList","import {makeStyles} from \"@material-ui/core/styles\";\n\nconst useInsertedHTMLStyle = makeStyles((theme) => ({\n    root: {\n        display: 'column',\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'center',\n        color: theme.palette.text.primary,\n        whiteSpace: 'normal',\n        '& pre': {\n            whiteSpace: 'pre-wrap',\n            wordWrap: 'break-word'\n        },\n        '& a': {\n            wordWrap: 'break-word',\n            width: '100%',\n        },\n        '& img': {\n            maxWidth: '100%',\n            maxHeight: '600px',\n            alignSelf: 'center',\n            margin: theme.spacing(1, 0)\n        },\n        '& p': {\n            width: '100%',\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'flex-start',\n            justifyContent: 'flex-start'\n        }\n        // '& h1': {\n        //     fontSize: '3rem',\n        //     fontWeight: 700\n        // },\n        // '& h2': {\n        //     fontSize: '2.5rem',\n        //     fontWeight: 700\n        // },\n        // '& h3': {\n        //     fontSize: '2rem',\n        //     fontWeight: 700\n        // },\n        // '& h4': {\n        //     fontSize: '1.5rem',\n        //     fontWeight: 700\n        // },\n        // '& h5': {\n        //     fontSize: '1.5rem',\n        //     fontWeight: 700\n        // },\n        // '& p, span': {\n        //     fontSize: '1.25rem',\n        //     lineHeight: 1.5,\n        // }\n    }\n}));\n\nexport default useInsertedHTMLStyle","import React, {useEffect, useRef} from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Paper} from \"@material-ui/core\";\nimport { useParams } from \"react-router-dom\";\nimport useGetPostDetail from \"../../requests/use-get-post-detail\";\nimport {Skeleton} from \"@material-ui/lab\";\nimport CommentList from \"./comment-list\";\nimport ItemInfo from \"./item-info\";\nimport {CommentData} from \"./comment-item\";\nimport useResizeImages from \"./use-resize-images\";\nimport Box from \"@material-ui/core/Box\";\nimport useInsertedHTMLStyle from \"./inserted-html-style\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n    },\n    paper: {\n        width: '100%',\n        padding: theme.spacing(4)\n    },\n    loading: {\n        width: '100%',\n        height: '500px'\n    },\n    error: {\n        width: '100%',\n        height: '500px',\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'center'\n    }\n}));\n\nexport interface PostDetailData {\n    id: string,\n    owner: {\n        email: string,\n        username: string,\n        avatar_url: string\n    }\n    likes: number,\n    dislikes: number,\n    comments: number,\n    comments_data: CommentData[]\n    title: string,\n    content: string,\n    created: string,\n    is_liked: 0 | 1 | -1 | undefined\n}\n\ninterface PostDetailProps {\n    isLogin: boolean\n}\n\nconst PostDetail: React.FC<PostDetailProps> = ({isLogin}) => {\n    const classes = useStyles();\n    const insertedHTMLClasses = useInsertedHTMLStyle();\n\n    const { postID } = useParams();\n    const [loading, error, data] = useGetPostDetail(parseInt(postID || '1'));\n    const HTMLStringContainerRef = useRef<HTMLDivElement>(null);\n    // useResizeImages(HTMLStringContainerRef, data !== null);\n\n    let content;\n    if (loading) {\n        content = (\n            <div className={classes.loading}>\n                <Skeleton variant=\"rect\" width={'100%'} height={60} />\n                { (new Array(10)).fill(0).map((_, i) => <Skeleton variant=\"text\" width={'100%'} key={i}/>)}\n            </div>\n        )\n    } else if (error) {\n        content = (\n            <div className={classes.error}>\n                <h1>Server error</h1>\n            </div>\n        )\n    } else if (data) {\n        content = (\n            <>\n                <Paper className={classes.paper} elevation={0}>\n                    <h1> {data.title} </h1>\n                    <ItemInfo type={'post'} username={data.owner.username} avatarUrl={data.owner.avatar_url} created={data.created} id={data.id} likes={data.likes} dislikes={data.dislikes} isLiked={data.is_liked}/>\n                    <Box width={'100%'} height={'40px'}> </Box>\n                    <div dangerouslySetInnerHTML={{__html: data.content}} className={insertedHTMLClasses.root} ref={HTMLStringContainerRef}/>\n                </Paper>\n                <CommentList comments={data.comments} isLogin={isLogin} postID={data.id} data={data.comments_data}/>\n            </>\n        )\n    }\n\n    return (\n        <div className={classes.root}>\n            { content }\n        </div>\n    )\n\n};\n\nexport default PostDetail","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function RouterScrollRestoration() {\n    const { pathname } = useLocation();\n\n    useEffect(() => {\n        window.scrollTo(0, 0);\n    }, [pathname]);\n\n    return null;\n}","import React from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Box, Paper, Typography} from \"@material-ui/core\";\n\ninterface SectionTitleProps {\n    sectionTitle: string\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        minHeight: '100px',\n    },\n    sectionTitle: {\n        width: '100%',\n        padding: theme.spacing(1, 2),\n        backgroundColor: theme.palette.primary.light,\n        fontWeight: 700,\n        color: '#fff'\n    },\n    content: {\n        width: '100%',\n        padding: theme.spacing(2),\n    }\n}));\n\nconst SectionWrapper: React.FC<SectionTitleProps> = ({children, sectionTitle}) => {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <Typography variant={'body1'} component={'h3'}>\n                <Box className={classes.sectionTitle}>\n                    { sectionTitle }\n                </Box>\n            </Typography>\n            <div className={classes.content}>\n                { children }\n            </div>\n        </div>\n    )\n};\n\nexport default SectionWrapper","import {Crop} from \"react-image-crop\";\n// import EXIF from \"exif-js/exif\";\n\nconst SIZE = 800;\n\nfunction getCroppedImg(image: HTMLImageElement, crop: Crop, scale: number, fileName: string) {\n    const [x, y, width, height] = [crop.x, crop.y, crop.width, crop.height].map(_ => _ === undefined ? 1 : _);\n\n    const canvas = document.createElement('canvas');\n    canvas.width = SIZE;\n    canvas.height = SIZE;\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return null;\n\n    // As Base64 string\n    // const base64Image = canvas.toDataURL('image/jpeg');\n\n    // As a blob\n    return new Promise<Blob>(async (resolve, reject) => {\n        try {\n            // await rotateAsPerExif(image, ctx, canvas.width, canvas.height);\n            ctx.drawImage(\n                image,\n                x * scale,\n                y * scale,\n                width * scale,\n                height * scale,\n                0,\n                0,\n                SIZE,\n                SIZE,\n            );\n            canvas.toBlob(blob => {\n                if (blob) {\n                    resolve(blob);\n                }\n            }, 'image/jpeg', 1);\n        } catch (e) {\n            throw e\n        }\n    });\n}\n\n// const rotateAsPerExif = (image: HTMLImageElement, ctx: CanvasRenderingContext2D, canvasWidth: number, canvasHeight: number) => {\n//     return new Promise((resolve, reject) => {\n//         // @ts-ignore\n//         EXIF.getData(image, function(this: HTMLImageElement) {\n//             console.log(ctx)\n//             const orientation = EXIF.getTag(this,\"Orientation\");\n//             switch (orientation) {\n//                 case 2: ctx.translate(canvasWidth, 0);     ctx.scale(-1,1); break;\n//                 case 3: ctx.translate(canvasWidth,canvasHeight); ctx.rotate(Math.PI); break;\n//                 case 4: ctx.translate(0,canvasHeight);     ctx.scale(1,-1); break;\n//                 case 5: ctx.rotate(0.5 * Math.PI);   ctx.scale(1,-1); break;\n//                 case 6:\n//                     ctx.rotate(0.5 * Math.PI);\n//                     ctx.translate(0,-canvasHeight);\n//                     break;\n//                 case 7: ctx.rotate(0.5 * Math.PI);   ctx.translate(canvasWidth,-canvasHeight); ctx.scale(-1,1); break;\n//                 case 8: ctx.rotate(-0.5 * Math.PI);  ctx.translate(-canvasWidth,0); break;\n//             }\n//             resolve()\n//         })\n//     })\n// };\n\nexport default getCroppedImg","import React, {useEffect, useMemo, useRef, useState} from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {GenericClickButton} from \"../../commons/generic-button\";\nimport {Box} from \"@material-ui/core\";\nimport ReactCrop, {Crop} from 'react-image-crop';\nimport 'react-image-crop/dist/ReactCrop.css';\nimport ErrorMessage from \"../../commons/error-message\";\nimport getCroppedImg from \"./get-cropped-image\";\nimport useUpdateAvatar from \"../../../requests/use-update-avatar\";\nimport useResizeImage, {getWidthHeight} from \"./use-resize-image\";\nimport loadImage from 'blueimp-load-image'\n\nenum Stage {\n    'UPLOAD' = 'UPLOAD',\n    'CROP' = 'CROP',\n    'CONFIRM' = 'CONFIRM',\n    'FINISH' = 'FINISH'\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center'\n    },\n    row: {\n        width: '100%',\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'flex-start'\n    },\n    backNextButtons: {\n        width: '100%',\n        margin: theme.spacing(1, 0),\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'space-between'\n    },\n    centering: {\n        width: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center'\n    }\n}));\n\ninterface FinishStageProps {\n    restart: () => void\n}\n\nconst FinishStage: React.FC<FinishStageProps> = ({restart}) => {\n    const classes = useStyles();\n\n    return (\n        <>\n            <div className={classes.backNextButtons}>\n                <GenericClickButton onClick={restart} width={'150px'} text={'Start Again'}/>\n            </div>\n            <div className={'centering'}>\n                <Box fontWeight={700} my={2}>\n                    All set\n                </Box>\n            </div>\n        </>\n    )\n};\n\ninterface ConfirmStageProps {\n    blob: Blob | null,\n    back: () => void,\n    next: () => void,\n}\n\nconst ConfirmStage: React.FC<ConfirmStageProps> = ({blob, back, next}) => {\n    const classes = useStyles();\n\n    const [loading, error, errorMessage, upload] = useUpdateAvatar();\n    const containerRef = useRef<HTMLDivElement>(null);\n    const src = useMemo(() => {\n        return URL.createObjectURL(blob)\n    }, [blob]);\n    const [imgWidth, imgHeight] = useResizeImage(containerRef, src);\n\n    const GoNext = async () => {\n        try {\n            if (blob) {\n                const uploaded = await upload(blob);\n                if (uploaded) {\n                    next();\n                }\n            }\n        } catch (e) {}\n    };\n\n    return (\n        <>\n            <div className={classes.backNextButtons}>\n                <Box>\n                    <GenericClickButton onClick={back} width={'150px'} text={'Redo Cropping'}/>\n                </Box>\n                <Box>\n                    <GenericClickButton onClick={GoNext} width={'150px'} text={'Update Avatar'} disabled={loading}/>\n                </Box>\n            </div>\n            <ErrorMessage loading={loading} error={error} errorMessage={errorMessage}/>\n            {\n                !loading &&\n                <div className={classes.centering} ref={containerRef}>\n                    <img\n                        src={src}\n                        alt={'cropped image'}\n                        style={{\n                            width: imgWidth,\n                            height: imgHeight\n                        }}/>\n                </div>\n            }\n        </>\n    )\n};\n\ninterface CropStageProps {\n    src: string,\n    back: () => void,\n    next: (blob: Blob) => void\n}\n\nconst CropStage: React.FC<CropStageProps> = ({src, back, next}) => {\n    const classes = useStyles();\n    const [error, setError] = useState(false);\n    const [image, setImage] = useState<HTMLImageElement | null>(null);\n    const [crop, setCrop] = useState<Crop>({});\n    const cropperWrapperRef = useRef<HTMLDivElement>(null);\n    const [cropperSize, setCropperSize] = useState({\n        width: 1,\n        height: 1\n    });\n\n    const goNext = async () => {\n        try {\n            if (!image) return;\n            const croppedSrc = await getCroppedImg(image, crop, image.naturalWidth / cropperSize.width, ' ');\n            if (croppedSrc) {\n                next(croppedSrc);\n            }\n        } catch (e) {\n            console.log(e);\n        }\n    };\n\n    const handleImageLoaded = (image: HTMLImageElement) => {\n        setImage(image);\n        if (cropperWrapperRef.current) {\n            const [width, height] = getWidthHeight(\n                cropperWrapperRef.current.getBoundingClientRect().width,\n                image.naturalWidth,\n                image.naturalHeight\n            );\n            setCropperSize({\n                width,\n                height\n            });\n        }\n    };\n\n    useEffect(() => {\n        const width = cropperSize.width;\n        const height = cropperSize.height;\n        if (width >= height) {\n            const x = Math.round((width - height) / 2);\n            setCrop({\n                aspect: 1,\n                unit: 'px',\n                height: height,\n                width: height,\n                x,\n                y: 0\n            })\n        } else {\n            const y = Math.round((height - width) / 2);\n            setCrop({\n                aspect: 1,\n                unit: 'px',\n                height: width,\n                width: width,\n                x: 0,\n                y\n            })\n        }\n    }, [cropperSize.width, cropperSize.height]);\n\n\n    return (\n        <>\n            <div className={classes.backNextButtons}>\n                <Box justifySelf={'flex-start'}>\n                    <GenericClickButton onClick={back} width={'150px'} text={'Repick'}/>\n                </Box>\n                <Box justifySelf={'flex-end'}>\n                    <GenericClickButton onClick={goNext} width={'150px'} text={'Crop'}/>\n                </Box>\n            </div>\n            <ErrorMessage loading={false} error={false} errorMessage={''}/>\n            <div ref={cropperWrapperRef} className={classes.centering}>\n                <ReactCrop\n                    src={src}\n                    crop={crop}\n                    onChange={(newCrop) => setCrop(newCrop)}\n                    ruleOfThirds={true}\n                    onImageError={() => setError(true)}\n                    onImageLoaded = {handleImageLoaded}\n                    style={{\n                        width: cropperSize.width,\n                        height: cropperSize.height\n                    }}\n                />\n            </div>\n            {\n                error &&\n                <ErrorMessage loading={false} error={true} errorMessage={'Image can\\'t be loaded'}/>\n            }\n        </>\n    )\n};\n\ninterface UploadStageProps {\n    next: (src: string) => void,\n}\n\nconst UploadStage: React.FC<UploadStageProps> = ({next}) => {\n    const classes = useStyles();\n    const inputRef = useRef<HTMLInputElement>(null);\n    const [link, setLink] = useState('');\n    const [loading, setLoading] = useState(false);\n\n    const openFileInput = () => {\n        inputRef.current?.click();\n    };\n\n    const handleFiles = () => {\n        if (\n            inputRef.current &&\n            inputRef.current.files &&\n            inputRef.current.files.length\n        ) {\n            if (loading) return;\n            setLoading(true);\n            loadImage(\n                inputRef.current.files[0],\n                (img) => {\n                    // @ts-ignore\n                    next(img.toDataURL('image/jpeg'));\n                },\n                {\n                    orientation: true,\n                    canvas: true\n                }\n            );\n        }\n    };\n\n    useEffect(() => {\n        const input = inputRef.current;\n        input?.addEventListener('change', handleFiles);\n        return () => {\n            input?.removeEventListener('change', handleFiles);\n        }\n    }, []);\n\n    return (\n        <div style={{width: '100%'}}>\n            {/*<Box width={'80%'}>*/}\n                {/*<Box my={1}>*/}\n                {/*    <TextField label=\"From Link\" fullWidth value={link} onChange={(e) => setLink(e.currentTarget.value)}/>*/}\n                {/*</Box>*/}\n                <div className={classes.centering}>\n                    {/*<Box>*/}\n                    {/*    <GenericClickButton onClick={() => next(link)} width={'150px'} text={'Get Image'}/>*/}\n                    {/*</Box>*/}\n                    {/*<Box mx={1}> or </Box>*/}\n                    <Box my={2}>\n                        {\n                            loading ?\n                                <ErrorMessage loading={true} error={false} errorMessage={''} /> :\n                                <Box>\n                                    <GenericClickButton onClick={openFileInput} width={'150px'} text={'Upload From Disk'} disabled={loading}/>\n                                </Box>\n                        }\n                    </Box>\n                    <input type=\"file\" ref={inputRef} accept=\"image/*\" style={{display: 'none'}}/>\n                </div>\n            {/*</Box>*/}\n        </div>\n    )\n};\n\ninterface UpdateAvatarProps {\n\n}\n\nconst UpdateAvatar: React.FC<UpdateAvatarProps> = ({}) => {\n    const classes = useStyles();\n\n    const [stage, setStage] = useState(Stage.UPLOAD);\n    const [imageSrc, _setImageSrc] = useState('');\n    const [croppedImageBlob, _setCroppedImageBlob] = useState<Blob | null>(null);\n\n    const moveToUploadStage = () => {\n        setStage(Stage.UPLOAD)\n    };\n\n    const moveToCropStage = (src: string) => {\n        _setImageSrc(src);\n        setStage(Stage.CROP);\n    };\n\n    const backToCropStage = () => {\n        setStage(Stage.CROP);\n    };\n\n    const moveToConfirmStage = (cropped: Blob) => {\n        _setCroppedImageBlob(cropped);\n        setStage(Stage.CONFIRM);\n    };\n\n    const moveToFinishStage = () => {\n        setStage(Stage.FINISH);\n    };\n\n    let content;\n    switch (stage) {\n        case Stage.UPLOAD:\n            content = <UploadStage next={moveToCropStage} />;\n            break;\n        case Stage.CROP:\n            content = <CropStage src={imageSrc} back={moveToUploadStage} next={moveToConfirmStage}/>;\n            break;\n        case Stage.CONFIRM:\n            content = <ConfirmStage blob={croppedImageBlob} back={backToCropStage} next={moveToFinishStage}/>;\n            break;\n        case Stage.FINISH:\n            content = <FinishStage restart={moveToUploadStage}/>;\n            break;\n        default:\n            content = <UploadStage next={moveToCropStage} />;\n    }\n\n    return (\n        <div className={classes.root}>\n            { content }\n        </div>\n    )\n};\n\nexport default UpdateAvatar","import {useState} from \"react\";\nimport urls from \"./urls\";\nimport useReload from \"../utils/use-reload\";\nimport useGetAuthorizationHeader from \"./use-get-authorization-header\";\n\nconst useUpdateAvatar = () => {\n    const accessHeader = useGetAuthorizationHeader();\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(false);\n    const [errorMessage, setErrorMessage] = useState('');\n    const reload = useReload();\n\n    const upload = (\n        file: File | Blob\n    ) => {\n        return new Promise((resolve, reject) => {\n            if (loading) {\n                reject();\n                return\n            }\n\n            // reset states\n            setError(false);\n            setErrorMessage('');\n\n            // start fetching\n            setLoading(true);\n            const form = new FormData();\n            form.append('image', file, \"avatar.jpg\");\n\n            fetch(urls.updateAvatar, {\n                method: 'POST',\n                headers: {\n                    ...accessHeader\n                },\n                body: form\n            })\n                .then((res) => res.json())\n                .then(json => {\n                    setLoading(false);\n                    console.log(json);\n\n                    if (json.status === 'success') {\n                        resolve(true);\n                        return\n                    } else {\n                        setError(true);\n                        if (json.status === 'error') {\n                            setErrorMessage(json.message)\n                        } else {\n                            setErrorMessage('Server unavailable, please try again later.')\n                        }\n                        reject();\n                    }\n                })\n                .catch(e => {\n                    setLoading(false);\n\n                    setError(true);\n                    setErrorMessage('Server unavailable, please try again later.');\n                    reject();\n                });\n        });\n    };\n\n    return [loading, error, errorMessage, upload] as [boolean, boolean, string, typeof upload]\n\n};\n\nexport default useUpdateAvatar","import {RefObject, useEffect, useState} from \"react\";\n\nconst WIDTH = 500;\nconst HEIGHT = 500;\n// try to size the wrapper within the constraints\n// target is no bigger than WIDTH * HEIGHT\n// on smaller screens (maxWidth < WIDTH) the target is SHORTER_EDGE * SHORTER_EDGE\n\nconst useResizeImage = (ref: RefObject<HTMLDivElement>, src: string) => {\n    const [width, setWidth] = useState(0);\n    const [height, setHeight] = useState(0);\n\n    const loadImage = () => {\n        const image = new Image();\n        image.src = src;\n        image.onload = () => resize(image)\n    };\n\n    const resize = (image: HTMLImageElement) => {\n        if (!src || !ref.current) return;\n        const containerWidth = ref.current.getBoundingClientRect().width;\n        const [finalWidth, finalHeight] = getWidthHeight(containerWidth, image.naturalWidth, image.naturalHeight);\n\n        setWidth(finalWidth);\n        setHeight(finalHeight);\n    };\n\n    useEffect(() => {\n        loadImage()\n    }, [ref, src]);\n\n    return [width, height] as [typeof width, typeof height]\n};\n\nconst getWidthHeight = (containerWidth: number, imageNaturalWidth: number, imageNaturalHeight: number) => {\n    const maxWidth = Math.min(WIDTH, containerWidth) || 1;\n    const maxHeight = maxWidth;\n\n    let width = 1;\n    let height = 1;\n    if (imageNaturalWidth >= imageNaturalHeight) {\n        width = maxWidth;\n        height = (width / imageNaturalWidth) * imageNaturalHeight\n    } else {\n        height = maxHeight;\n        width = (height / imageNaturalHeight) * imageNaturalWidth\n    }\n\n    // do no enlarge\n    const finalWidth = Math.min(imageNaturalWidth, Math.round(width));\n    const finalHeight = Math.min(imageNaturalHeight, Math.round(height));\n\n    return [finalWidth, finalHeight] as [typeof finalWidth, typeof finalHeight]\n};\n\nexport {\n    useResizeImage as default,\n    getWidthHeight\n}","import React from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Box, Paper, Typography} from \"@material-ui/core\";\nimport SectionWrapper from \"./section-wrapper\";\nimport UpdateAvatar from \"./update-avatar/update-avatar\";\n\ninterface AccountSettingProps {\n    username: string\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        margin: theme.spacing(1, 0),\n        width: '100%'\n    },\n    paper: {\n        width: '100%',\n        minHeight: '100px',\n        overflow: 'hidden'\n        // display: 'flex',\n        // flexDirection: 'row',\n        // alignItems: 'center',\n        // justifyContent: 'flex-start'\n    }\n}));\n\nconst AccountSetting: React.FC<AccountSettingProps> = ({username}) => {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <Typography variant={'body1'} component={'h2'}>\n                <Box my={2} fontWeight={700}>\n                    { username }\n                </Box>\n            </Typography>\n            <Paper className={classes.paper} elevation={0}>\n                <SectionWrapper sectionTitle={'Avatar'}>\n                    <UpdateAvatar />\n                </SectionWrapper>\n            </Paper>\n        </div>\n    )\n};\n\nexport default AccountSetting","import {connect} from \"react-redux\";\nimport AccountSetting from \"../components/account-setting/account-setting\";\nimport {State} from \"../redux/state\";\n\nfunction mapStateToProps(state: State) {\n    return {\n        username: state.loginStatus.username\n    }\n}\n\nconst AccountSettingContainer = connect(\n    mapStateToProps\n)(AccountSetting);\n\nexport default AccountSettingContainer;\n","import React from 'react';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route\n} from \"react-router-dom\";\nimport {connect} from 'react-redux';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Login from \"./components/login/login\";\nimport Register from \"./components/login/register\";\nimport HeaderContainer from \"./containers/header-container\";\nimport MainPage from \"./components/main-page/main-page\";\nimport SnackbarContainer from \"./containers/snackbar-container\";\nimport Footer from \"./components/footer/footer\";\nimport PrivateRoute from \"./utils/protected-router\";\nimport PostEditor from \"./components/post-editor/post-editor\";\nimport {State} from \"./redux/state\";\nimport PostDetail from \"./components/post-detail/post-detail\";\nimport RouterScrollRestoration from \"./utils/router-scroll-restoration\";\nimport AccountSettingContainer from \"./containers/account-setting-container\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        maxWidth: '100vw',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'flex-start'\n    },\n    widthWrapper: {\n        margin: theme.spacing(5, 0, 0, 0),\n        width: '1000px',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'flex-start',\n        [theme.breakpoints.down('sm')]: {\n            width: 'calc(100% - 16px)',\n            margin: theme.spacing(0, 1),\n        }\n    }\n}));\n\ninterface InnerAppProps {\n    isLogin: boolean\n}\n\nconst InnerApp: React.FC<InnerAppProps> = ({isLogin}) => {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <Router basename={process.env.PUBLIC_URL}>\n                <RouterScrollRestoration />\n                <HeaderContainer />\n                <div className={classes.widthWrapper}>\n                    <Switch>\n                        <Route path=\"/\" exact render={ () => <MainPage /> } />\n                        <Route path=\"/login\" render={ () => <Login /> } />\n                        <Route path=\"/register\" render={ () => <Register /> } />\n                        <Route path=\"/post/:postID\" render={ () => <PostDetail isLogin={isLogin}/> } />\n                        <PrivateRoute path=\"/edit-post/:postID?\" isLogin={isLogin}>\n                            <PostEditor/>\n                        </PrivateRoute>\n                        <PrivateRoute path=\"/account-setting\" isLogin={isLogin}>\n                            <AccountSettingContainer/>\n                        </PrivateRoute>\n                        {/*<Route path=\"/welcome\" component={Welcome} />*/}\n                    </Switch>\n                    <Footer />\n                </div>\n            </Router>\n\n            <SnackbarContainer />\n        </div>\n    )\n};\n\nfunction mapStateToProps(state: State) {\n    return {\n        isLogin: state.loginStatus.isLogin\n    }\n}\n\nconst InnerAppContainer = connect(\n    mapStateToProps,\n)(InnerApp);\n\nexport default InnerAppContainer;\n","import React from 'react';\nimport {Provider} from 'react-redux';\nimport configureStore from \"./redux/configure-store\";\nimport { CssBaseline } from \"@material-ui/core\";\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport theme from './theme';\nimport InnerApp from \"./inner-app\";\n\nconst store = configureStore();\n\ninterface AppProps {\n\n}\n\nconst App: React.FC<AppProps> = () => {\n    return (\n        <Provider store={store}>\n        <ThemeProvider theme={theme}>\n        <CssBaseline />\n            <InnerApp />\n        </ThemeProvider>\n        </Provider>\n    )\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}