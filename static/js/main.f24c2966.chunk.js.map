{"version":3,"sources":["redux/actions/login-status.ts","redux/state.ts","redux/reducers/login-status.ts","redux/actions/confetti.ts","redux/actions/snackbar.ts","redux/reducers/snakbar.ts","redux/reducers/confetti.ts","redux/reducers/root-reducers.ts","redux/configure-store.ts","theme.tsx","utils/use-full-height.tsx","components/login/commons/login-common.tsx","components/commons/form-button.tsx","utils/use-input-field.tsx","utils/validators.ts","requests/urls.ts","utils/redirects/use-redirect-back.tsx","requests/use-login.tsx","components/commons/error-message.tsx","components/login/login.tsx","requests/use-register.tsx","components/login/register.tsx","components/commons/theme-button.tsx","utils/redirects/use-redirect-to-home.tsx","requests/use-logout.tsx","components/header/logged-in-user-panel.tsx","components/header/anonymous-user-panel.tsx","components/commons/logo.tsx","components/header/header.tsx","containers/header-container.tsx","requests/common/generic-error-message.ts","utils/redirects/use-redirect-to-login.tsx","requests/common/use-fetch-with-token-verification.tsx","requests/common/use-protected-get.tsx","requests/use-get-post-list.tsx","utils/get-time-string.tsx","requests/common/use-post.tsx","requests/use-like.tsx","components/commons/like-buttons.tsx","components/commons/tag-chip/tag-chip-common.tsx","components/commons/tag-chip/tag-chip.tsx","components/post-list/post.tsx","components/post-list/server-waking-notification.tsx","utils/use-query.tsx","components/pagination/pagination.tsx","components/main-page/active-tag-chip.tsx","components/post-list/post-list.tsx","containers/post-list-container.tsx","components/commons/generic-button.tsx","components/side-bar/common/side-bar-section.tsx","components/side-bar/side-bar-top.tsx","requests/common/use-unprotected-get.tsx","requests/use-get-tag-list.tsx","components/side-bar/common/side-bar-list-view-item.tsx","components/side-bar/common/side-bar-list-view.tsx","routes.ts","components/side-bar/side-bar-tags.tsx","requests/use-get-popular-posts.ts","components/side-bar/side-bar-popular.tsx","components/side-bar/side-bar.tsx","containers/side-bar-container.tsx","components/main-page/main-page.tsx","components/snackbar/snackbar.tsx","containers/snackbar-container.tsx","components/footer/footer-column.tsx","components/footer/footer.tsx","utils/protected-router.tsx","requests/use-post-submission.tsx","components/post-editor/use-editor.tsx","utils/use-set-title.ts","requests/use-get-post-detail.tsx","components/post-editor/tag-selector.tsx","components/post-editor/post-editor.tsx","utils/redirects/use-reload.tsx","requests/use-comment-submission.tsx","components/post-detail/comment-input.tsx","components/post-detail/item-info.tsx","components/post-detail/sub-comment-item.tsx","components/post-detail/comment-item.tsx","components/commons/theme-link.tsx","components/post-detail/comment-list.tsx","components/post-detail/inserted-html-style.tsx","requests/use-delete.tsx","components/commons/delete-button.tsx","components/commons/edit-button.tsx","components/post-detail/post-detail.tsx","utils/router-scroll-restoration.tsx","components/account-setting/section-wrapper.tsx","components/account-setting/update-avatar/get-cropped-image.ts","components/account-setting/update-avatar/update-avatar.tsx","requests/use-update-avatar.tsx","components/account-setting/update-avatar/use-resize-image.tsx","components/account-setting/account-setting.tsx","containers/account-setting-container.tsx","components/confetti/confetti.ts","components/confetti/confetti-wrapper.tsx","inner-app.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["LoginStatusActionTypes","defaultState","loginStatus","isLogin","username","token","access","refresh","snackbar","open","message","confetti","updateLoginStatus","newStatus","type","UPDATE_LOGIN_STATUS","ConfettiActionTypes","SnackbarActionTypes","state","action","LOGOUT","REFRESH_TOKEN","Object","assign","newAccessToken","openConfetti","dispatch","OPEN_CONFETTI","window","setTimeout","CLOSE_CONFETTI","openSnackbarWithConfetti","openSnackbar","OPEN_SNACKBAR","CLOSE_SNACKBAR","rootReducers","combineReducers","loggerMiddleware","createLogger","theme","createMuiTheme","palette","primary","main","contrastText","secondary","text","background","default","typography","responsiveFontSizes","useFullHeight","ref","useState","height","setHeight","useEffect","current","getBoundingClientRect","useStyles","makeStyles","root","width","margin","spacing","display","flexDirection","alignItems","justifyContent","overflow","image","objectFit","breakpoints","down","content","padding","textField","fontWeight","link","color","LoginCommon","children","imageUrl","classes","containerRef","useRef","Paper","elevation","className","style","src","process","alt","title","button","backgroundColor","textTransform","borderBottom","borderRadius","opacity","FormButton","disabled","form","variant","disableElevation","useInputField","defaultValue","validator","value","setValue","error","setError","errorMessage","setErrorMessage","e","target","reference","validatorResult","isValid","usernameValidator","length","emailValidator","indexOf","passwordValidator","confirmPasswordValidator","postTitleValidator","commentValidator","execValidators","validators","validationResults","map","_","i","base","postBase","urls","login","accountBase","register","verifySession","updateAvatar","getPostList","tag","page","url","popularPosts","getPostDetail","id","createPost","editPost","deletePost","tagList","createComment","commentBase","like","userActionsBase","blacklist","useRedirectBack","history","useHistory","location","useLocation","from","pathname","replace","useLogin","loading","setLoading","useDispatch","goBack","email","password","fetch","method","headers","body","JSON","stringify","then","res","json","status","data","catch","ErrorMessage","spinnerSize","Typography","component","Box","CircularProgress","size","Login","setEmail","emailError","emailErrorMessage","validateEmail","setPassword","passwordError","passwordErrorMessage","validatePassword","onSubmit","preventDefault","Grid","container","item","xs","textAlign","justify","TextField","label","name","onChange","helperText","Divider","to","useRegister","confirmPassword","Register","setUsername","usernameError","usernameErrorMessage","validateUsername","setConfirmPassword","confirmPasswordError","confirmPasswordErrorMessage","validateConfirmPassword","validationCheck1","validationCheck2","md","letterSpacing","ThemeButton","onClick","Link","useRedirectToHome","useLogout","toHome","clientSideLogout","LoggedInUserPanel","logout","AnonymousUserPanel","fontFamily","join","fontSize","fontStyle","whiteSpace","Logo","headerDimension","position","zIndex","appBar","left","top","placeholder","widthWrapper","values","logo","flex","buttonGroup","Header","HeaderContainer","connect","GENERIC_ERROR_MESSAGE","useRedirectToLogin","push","useFetchWithTokenVerification","useStore","getState","refreshToken","redirectToLogin","getAccessHeader","redirect","options","a","undefined","noAuthenticationHandler","Promise","resolve","reject","refreshRes","refreshJson","console","log","messages","useProtectedGet","fetchWhenComponentDidMount","redirectInvalidToken","setData","fetchWithTokenVerification","doGet","useGetPostList","months","getTimeString","ISOString","date","Date","hour","getHours","minute","getMinutes","getDate","getMonth","getFullYear","usePost","doPost","callbackOnSuccess","callbackOnError","callbackOnUnknownError","useLike","updatedData","errorCallback","unknownErrorCallback","likeButtons","marginLeft","buttonText","lineHeight","grey","LikeButtons","likes","dislikes","isLiked","likeLoading","likedByUser","dislikedByUser","IconButton","aria-label","green","red","TagChipCommon","Chip","clickable","chipRoot","chipLabel","fade","light","transitions","create","chipLabelSmall","caption","chipLabelNormal","TagChip","_classes","toUpperCase","paper","minHeight","avatar","author","actionArea","actionItem","Post","is_liked","Avatar","owner","avatar_url","charAt","comments","created","timeoutID","warning","noWrap","textDecoration","ServerWakingNotification","isLoaded","active","setActive","isMount","setIsMount","cleanUp","clearTimeout","showNotification","handleLoaded","turnToInactive","unMount","useServerWaking","Fade","in","timeout","onExited","href","rel","useQuery","URLSearchParams","search","Pagination","count","query","shape","renderItem","set","toString","PaginationItem","inheritColor","body2","ActiveTagChip","onDelete","deletable","tags","PostList","Array","fill","my","key","Skeleton","animation","posts","total_pages","current_page","PostListContainer","maxWidth","GenericClickButton","Button","GenericLinkButton","titleText","SideBarSection","isLoading","rowWrapper","SideBarTop","useUnprotectedGet","useGetTagList","SideBarListViewItem","barWidth","number","barPercentage","transition","textOverflow","paddingLeft","barWrapper","bottom","barItem","SideBarListView","items","bars","useMemo","maxCount","reduce","b","Math","max","toFixed","index","routes","home","postDetail","accountSetting","fallback","params","entries","pair","postID","getEditPost","SideBarTags","obj","toLowerCase","useGetPopularPosts","SideBarPopular","post","view_count","SideBar","SideBarContainer","flexWrap","right","MainPage","get","createStyles","Snackbar","closeSnackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","SnackbarContent","SnackbarContainer","userStyles","listStyleType","header","FooterColumn","column1","copyright","Footer","PrivateRoute","rest","render","removeUnusedObjectURL","objectURLArray","filter","getForm","FormData","append","promiseArray","getBlobFromObjectURL","all","blobs","forEach","blob","urlComponents","split","filename","usePostSubmission","submitted","setSubmitted","updatePostID","imageUploadHandler","editor","objectURLs","input","document","createElement","setAttribute","click","onchange","files","loadImage","canvas","toBlob","objectURL","URL","createObjectURL","range","getSelection","cursorPosition","insertEmbed","setSelection","orientation","useEditor","ID","quill","setQuill","Image","Quill","import","sanitize","quillInstance","modules","toolbar","clipboard","matchVisual","getModule","addHandler","delta","convert","setContents","useSetTitle","useGetPostDetail","icon","menuItemRoot","menuRoot","TagSelector","tagValue","tagChangeHandler","Select","displayEmpty","disableUnderline","MenuProps","MenuItem","marginBottom","PostEditorForm","updatePost","defaultTitle","defaultTag","getObjectURLArray","setContent","titleChangeHandler","titleError","titleErrorMessage","validateTitle","setTag","submit","isEditorHydrated","FormControl","InputLabel","htmlFor","Input","aria-describedby","FormHelperText","mb","innerHTML","mt","PostEditor","useParams","needData","setNeedData","postDetailError","postDetailData","fetchPostDetail","tagListError","parseInt","showEditor","useReload","useCommentSubmission","reload","parentPost","parentComment","CommentInput","comment","commentChangeHandler","commentError","commentErrorMessage","validateComment","postInfo","avatarSmall","postInfoItem","iconTextItem","ItemInfo","avatarUrl","small","viewCount","_isLiked","Tooltip","SubCommentItem","commentButton","subCommentPanel","border","CommentItem","isCommentPanelOpen","setIsCommentPanelOpen","startIcon","prev","sub_comments","ThemeLink","fromState","_to","loginToLeaveMessage","CommentList","itemData","useInsertedHTMLStyle","overflowWrap","wordWrap","backgroundPosition","backgroundRepeat","backgroundSize","maxHeight","useDelete","successCallback","confirmButton","DeleteButton","dialog","setDialog","closeDialog","Dialog","aria-labelledby","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","textColor","success","EditButton","center","PostDetail","insertedHTMLClasses","HTMLStringContainerRef","is_owner","dangerouslySetInnerHTML","__html","comments_data","RouterScrollRestoration","scrollTo","sectionTitle","SectionWrapper","getCroppedImg","Stage","crop","scale","fileName","x","y","ctx","getContext","drawImage","useUpdateAvatar","file","useResizeImage","setWidth","resize","containerWidth","getWidthHeight","naturalWidth","naturalHeight","finalWidth","finalHeight","onload","imageNaturalWidth","imageNaturalHeight","min","round","row","backNextButtons","centering","FinishStage","restart","ConfirmStage","back","next","upload","imgWidth","imgHeight","GoNext","CropStage","setImage","setCrop","cropperWrapperRef","cropperSize","setCropperSize","goNext","croppedSrc","aspect","unit","justifySelf","newCrop","ruleOfThirds","onImageError","onImageLoaded","UploadStage","inputRef","handleFiles","img","toDataURL","addEventListener","removeEventListener","accept","UpdateAvatar","UPLOAD","stage","setStage","imageSrc","_setImageSrc","croppedImageBlob","_setCroppedImageBlob","moveToUploadStage","moveToCropStage","CROP","cropped","CONFIRM","FINISH","AccountSetting","AccountSettingContainer","COLORS","ConfettiSprite","r","rotation","vx","vy","finished","dx","dy","g","dr","dOpacity","dRotation","random","ddRotation","this","floor","getColor","PI","nextOpacity","Confetti","sprites","initParams","loop","bind","defaultOptions","spritesCount","getElementById","ellipse","drawer","arc","clearRect","save","beginPath","fillStyle","globalAlpha","restore","move","draw","update","requestAnimationFrame","initCanvas","initSprites","initDrawer","ConfettiWrapper","tooltip","InnerAppContainer","basename","path","exact","store","DEBUG","createStore","applyMiddleware","thunkMiddleware","App","ThemeProvider","CssBaseline","Boolean","hostname","match","ReactDOM","StrictMode","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f24c2966.chunk.js","sourcesContent":["import {State, defaultState} from \"../state\";\n\nexport enum LoginStatusActionTypes {\n    'UPDATE_LOGIN_STATUS'='UPDATE_LOGIN_STATUS',\n    'LOGOUT'='LOGOUT',\n    'REFRESH_TOKEN'='REFRESH_TOKEN'\n}\n\nexport type LoginStatusAction = ReturnType<typeof logout> | ReturnType<typeof updateLoginStatus> | ReturnType<typeof refreshToken>\n\nexport function logout() {\n    return {\n        type: LoginStatusActionTypes.LOGOUT as typeof LoginStatusActionTypes.LOGOUT,\n        newStatus: defaultState.loginStatus\n    }\n}\n\nexport function updateLoginStatus(newStatus: State['loginStatus']) {\n    return {\n        type: LoginStatusActionTypes.UPDATE_LOGIN_STATUS as typeof LoginStatusActionTypes.UPDATE_LOGIN_STATUS,\n        newStatus\n    }\n}\n\nexport function refreshToken(newAccessToken: State['loginStatus']['token']['access']) {\n    return {\n        type: LoginStatusActionTypes.REFRESH_TOKEN as typeof LoginStatusActionTypes.REFRESH_TOKEN,\n        newAccessToken\n    }\n}","export interface State {\n    loginStatus: {\n        isLogin: boolean,\n        username: string,\n        token: {\n            access: string,\n            refresh: string\n        }\n    },\n    snackbar: {\n        open: boolean,\n        message: string\n    },\n    confetti: boolean\n}\n\nexport const defaultState: State = {\n    loginStatus: {\n        isLogin: false,\n        username: '',\n        token: {\n            access: '',\n            refresh: ''\n        }\n    },\n    snackbar: {\n        open: false,\n        message: ''\n    },\n    confetti: false\n};","import {defaultState, State} from \"../state\";\nimport {LoginStatusAction, LoginStatusActionTypes} from \"../actions/login-status\";\n\n\nfunction loginStatus(\n    state = defaultState.loginStatus,\n    action: LoginStatusAction\n): State['loginStatus'] {\n    switch (action.type) {\n        case LoginStatusActionTypes.UPDATE_LOGIN_STATUS:\n            return action.newStatus;\n        case LoginStatusActionTypes.LOGOUT:\n            return action.newStatus;\n        case LoginStatusActionTypes.REFRESH_TOKEN:\n            const newStatus = Object.assign({}, state);\n            newStatus.token.access = action.newAccessToken;\n            return newStatus;\n        default:\n            return state\n    }\n}\n\nexport default loginStatus;","import {ThunkDispatch} from \"redux-thunk\";\nimport {State} from \"../state\";\n\nexport enum ConfettiActionTypes {\n    'CLOSE_CONFETTI'='CLOSE_CONFETTI',\n    'OPEN_CONFETTI'='OPEN_CONFETTI',\n}\n\nexport type ConfettiActions = ReturnType<typeof openConfetti>\n\nexport function openConfetti(): any {\n    return (dispatch: ThunkDispatch<State, null, ConfettiActions>) => {\n        dispatch(_openConfetti());\n        window.setTimeout(() => dispatch(_closeConfetti()), 2000)\n    }\n}\n\nfunction _openConfetti() {\n    return {\n        type: ConfettiActionTypes.OPEN_CONFETTI as typeof ConfettiActionTypes.OPEN_CONFETTI,\n    }\n}\n\nfunction _closeConfetti() {\n    return {\n        type: ConfettiActionTypes.CLOSE_CONFETTI as typeof ConfettiActionTypes.CLOSE_CONFETTI,\n    }\n}\n","import {ThunkDispatch} from \"redux-thunk\";\nimport {State} from \"../state\";\nimport {ConfettiActions, openConfetti} from \"./confetti\";\n\nexport enum SnackbarActionTypes {\n    'CLOSE_SNACKBAR'='CLOSE_SNACKBAR',\n    'OPEN_SNACKBAR'='OPEN_SNACKBAR',\n}\n\nexport type SnackbarAction = ReturnType<typeof openSnackbar> | ReturnType<typeof closeSnackbar>\n\nexport function openSnackbarWithConfetti(message: string) {\n    return (dispatch: ThunkDispatch<State, null, ConfettiActions>) => {\n        dispatch(openSnackbar(message));\n        window.setTimeout(() => dispatch(openConfetti()), 300)\n    };\n}\n\nexport function openSnackbar(message: string) {\n    return {\n        type: SnackbarActionTypes.OPEN_SNACKBAR as typeof SnackbarActionTypes.OPEN_SNACKBAR,\n        message\n    }\n}\n\nexport function closeSnackbar() {\n    return {\n        type: SnackbarActionTypes.CLOSE_SNACKBAR as typeof SnackbarActionTypes.CLOSE_SNACKBAR,\n    }\n}\n","import {defaultState, State} from \"../state\";\nimport {SnackbarAction, SnackbarActionTypes} from \"../actions/snackbar\";\n\n\nfunction snackbar (\n    state = defaultState.snackbar,\n    action: SnackbarAction\n): State['snackbar'] {\n    switch (action.type) {\n        case SnackbarActionTypes.OPEN_SNACKBAR:\n            return {\n                open: true,\n                message: action.message\n            };\n        case SnackbarActionTypes.CLOSE_SNACKBAR:\n            return defaultState.snackbar;\n        default:\n            return state\n    }\n}\n\nexport default snackbar;","import {defaultState, State} from \"../state\";\nimport {ConfettiActions, ConfettiActionTypes} from \"../actions/confetti\";\n\n\nfunction confetti (\n    state = defaultState.confetti,\n    action: ConfettiActions\n): State['confetti'] {\n    switch (action.type) {\n        case ConfettiActionTypes.OPEN_CONFETTI:\n            return true;\n        case ConfettiActionTypes.CLOSE_CONFETTI:\n            return false;\n        default:\n            return state\n    }\n}\n\nexport default confetti;","import {combineReducers} from \"redux\";\nimport loginStatus from \"./login-status\";\nimport snackbar from \"./snakbar\";\nimport confetti from \"./confetti\";\n\nconst rootReducers = combineReducers({\n    loginStatus,\n    snackbar,\n    confetti\n});\n\nexport default rootReducers;","import { createStore, applyMiddleware } from 'redux'\nimport thunkMiddleware from 'redux-thunk'\nimport rootReducers from \"./reducers/root-reducers\";\nimport {defaultState} from \"./state\";\n\nimport { createLogger } from 'redux-logger'\nconst loggerMiddleware = createLogger();\n\n\nexport default function configureStore() {\n    if (process.env.DEBUG === 'true') {\n        return createStore(\n            rootReducers,\n            defaultState,\n            applyMiddleware(thunkMiddleware, loggerMiddleware)\n        )\n    } else {\n        return createStore(\n            rootReducers,\n            defaultState,\n            applyMiddleware(thunkMiddleware)\n        )\n    }\n}","import {createMuiTheme, responsiveFontSizes} from \"@material-ui/core/styles\";\n\nlet theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: '#41b3a3',\n            contrastText: '#fff',\n        },\n        secondary: {\n            main: '#e8a87c',\n            contrastText: '#fff',\n        },\n        text: {\n            primary: '#4a5568'\n        },\n        background: {\n            default: 'rgb(241, 242, 245)'\n        },\n    },\n    typography: {\n        \"fontFamily\": \"system-ui,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,Noto Sans,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol,Noto Color Emoji\",\n        \"fontSize\": 14,\n        \"fontWeightLight\": 300,\n        \"fontWeightRegular\": 400,\n        \"fontWeightMedium\": 500\n    },\n});\ntheme = responsiveFontSizes(theme);\n\nexport default theme;\n","import React, {useEffect, useState} from \"react\";\n\nconst useFullHeight = (ref: React.RefObject<HTMLDivElement>) => {\n    const [height, setHeight] = useState(0);\n\n    useEffect(() => {\n        if (!ref.current) return;\n        setHeight(ref.current.getBoundingClientRect().height)\n    }, [ref]);\n\n    return height\n};\n\nexport default useFullHeight","import React, {useRef} from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Paper} from \"@material-ui/core\";\nimport useFullHeight from \"../../../utils/use-full-height\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        margin: theme.spacing(2, 0),\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'center',\n        overflow: 'hidden',\n    },\n    image: {\n        width: '40%',\n        height: '0',\n        '& img': {\n            width: '100%',\n            height: '100%',\n            objectFit: 'cover'\n        },\n        [theme.breakpoints.down('sm')]: {\n            display:'none'\n        }\n    },\n    content: {\n        width: '60%',\n        padding: theme.spacing(10, 5),\n        [theme.breakpoints.down('sm')]: {\n            width: '100%'\n        }\n    },\n    textField: {\n        width: '100%',\n        fontWeight: 700\n    },\n    link: {\n        fontWeight: 700,\n        '& a:link': {\n            color: theme.palette.primary.main\n        },\n        '& a:visited': {\n            color: theme.palette.primary.main\n        },\n        '& a:hover': {\n            color: theme.palette.secondary.main\n        }\n    }\n}));\n\ninterface LoginCommonProps {\n    imageUrl: string\n}\n\nconst LoginCommon: React.FC<LoginCommonProps> = ({children, imageUrl}) => {\n    const classes = useStyles();\n\n    const containerRef = useRef<HTMLDivElement>(null);\n    const height = useFullHeight(containerRef);\n\n    return (\n        <Paper elevation={0} className={classes.root} ref={containerRef}>\n            <div className={classes.image} style={{height: `${height}px`}}>\n                <img\n                    src={process.env.PUBLIC_URL + imageUrl}\n                    alt={'login background'}\n                    title={'login background'}\n                />\n            </div>\n            <div className={classes.content}>\n                { children }\n            </div>\n        </Paper>\n    )\n};\n\nexport default LoginCommon","import React from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Button as MuiButton} from \"@material-ui/core\";\nimport {Link} from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n    button: {\n        width: '100%',\n        backgroundColor: theme.palette.primary.main,\n        color: '#fff',\n        fontWeight: 700,\n        textTransform: 'none',\n        borderBottom: '2px solid rgba(0,0,0,0.1)',\n        borderRadius: '5px',\n        '&:hover': {\n            backgroundColor: theme.palette.secondary.main\n        },\n        '&:disabled': {\n            backgroundColor: theme.palette.secondary.main,\n            opacity: 0.7\n        }\n    }\n}));\n\ninterface ButtonProps {\n    text: string,\n    disabled: boolean,\n    form: string\n}\n\nconst FormButton: React.FC<ButtonProps> = ({text, disabled, form}) => {\n    const classes = useStyles();\n\n    return (\n        <MuiButton variant=\"contained\" classes={{root: classes.button}} disableElevation type={'submit'} form={form} disabled={disabled}>\n            { text }\n        </MuiButton>\n    )\n};\n\nexport default FormButton\n","import React, {ChangeEvent, useEffect, useState} from \"react\";\nimport {Validator} from \"./validators\";\n\ntype ChangeHandler = (e: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => void\n\nconst useInputField = (\n    defaultValue: string,\n    validator: Validator\n) => {\n    const [value, setValue] = useState(defaultValue);\n    const [error, setError] = useState(false);\n    const [errorMessage, setErrorMessage] = useState('');\n\n    const validate = (reference?: string) => {\n        const validatorResult = reference ? validator(value, reference) : validator(value);\n        setError(!validatorResult.isValid);\n        setErrorMessage(validatorResult.message);\n\n        return validatorResult.isValid as boolean\n    };\n\n    const changeHandler: ChangeHandler = (e) => {\n        if (error) setError(false);\n        setValue(e.target.value)\n    };\n\n    return [value, changeHandler, error, errorMessage, validate] as [string, ChangeHandler, boolean, string, typeof validate]\n};\n\nexport default useInputField","export type Validator = (value: string, reference?: string) => {isValid: boolean, message: string}\n\nconst usernameValidator: Validator = (value) => {\n    let isValid = true;\n    let message = '';\n\n    if (value.length >= 30) {\n        isValid = true;\n        message = 'Username length must be less than 30 characters';\n    } else if (value.length === 0) {\n        isValid = true;\n        message = 'Username cannot be empty';\n    }\n\n    return {\n        isValid,\n        message\n    }\n};\n\nconst emailValidator: Validator = (value) => {\n    let isValid = true;\n    let message = '';\n\n    if (value.indexOf('@') === -1) {\n        isValid = false;\n        message = 'Invalid Email format'\n    } else if (value.indexOf('.') === -1) {\n        isValid = false;\n        message = 'Invalid Email format'\n    } else if (value.length === 0) {\n        isValid = false;\n        message = 'Email cannot be empty';\n    } else if (value.length >= 60) {\n        isValid = false;\n        message = 'Email too long';\n    }\n\n    return {\n        isValid,\n        message\n    }\n};\n\nconst passwordValidator: Validator = (value) => {\n    let isValid = true;\n    let message = '';\n\n    if (value.length === 0) {\n        isValid = false;\n        message = 'Email cannot be empty';\n    }\n\n    return {\n        isValid,\n        message\n    }\n};\n\nconst confirmPasswordValidator: Validator = (value, reference) => {\n    let isValid = true;\n    let message = '';\n\n    if (value !== reference) {\n        message = 'Not same as the password';\n        isValid = false;\n    }\n\n    return {\n        isValid,\n        message\n    }\n};\n\nconst postTitleValidator: Validator = (value) => {\n    let isValid = true;\n    let message = '';\n\n    if (value.length === 0) {\n        message = 'Title cannot be empty';\n        isValid = false;\n    }\n\n    return {\n        isValid,\n        message\n    }\n};\n\nconst commentValidator: Validator = (value) => {\n    let isValid = true;\n    let message = '';\n\n    if (value.length === 0) {\n        message = 'Comment cannot be empty';\n        isValid = false;\n    } else if (value.length < 5) {\n        message = 'Comment needs to be at least 5 characters';\n        isValid = false;\n    }\n\n    return {\n        isValid,\n        message\n    }\n};\n\nconst execValidators = (validators: (()=>boolean)[]) => {\n    const validationResults = validators.map(_ => _());\n    for (let i=0; i<validationResults.length; i++) {\n        if (!validationResults[i]) {\n            return false\n        }\n    }\n\n    return true\n};\n\nexport {\n    usernameValidator,\n    emailValidator,\n    passwordValidator,\n    confirmPasswordValidator,\n    execValidators,\n    postTitleValidator,\n    commentValidator\n}","const base = 'https://django-api-xiaoxihome.herokuapp.com/api/discussion_board/';\n// const base = 'http://127.0.0.1:8000/api/discussion_board/';\n\nconst accountBase = base + 'account/';\nconst login = accountBase + 'login/';\nconst register = accountBase + 'register/';\nconst verifySession = accountBase + 'verify_session/';\nconst refresh = accountBase + 'refresh/';\nconst updateAvatar = accountBase + 'update_avatar/';\n\nconst postBase = base + 'post/';\nconst getPostList = ({tag, page}: {tag: string | null, page: string}) => {\n    let url = postBase + `all/?page=${page}`;\n    if (tag) {\n        url += `&tag=${tag}`\n    }\n    return url\n};\nconst popularPosts = postBase + `all/?sort_by=view_count&limit=5`;\nconst getPostDetail = (id: number) => `${postBase}${id}/`;\nconst createPost = postBase + 'create/';\nconst editPost = (id: number) => `${postBase}edit/${id}/`;\nconst deletePost = (id: number) => `${postBase}delete/${id}/`;\nconst tagList = postBase + 'tag-list/';\n\nconst commentBase = base + 'comment/';\nconst createComment = commentBase + 'create/';\n\nconst userActionsBase = base + 'user_actions/';\nconst like = userActionsBase + 'like/';\n\nconst urls = {\n    login,\n    register,\n    verifySession,\n    refresh,\n    updateAvatar,\n    getPostList,\n    popularPosts,\n    getPostDetail,\n    createPost,\n    editPost,\n    deletePost,\n    tagList,\n    createComment,\n    like\n};\n\nexport default urls\n","import {useHistory, useLocation} from \"react-router-dom\";\n\n// redirect to \"/\" in these cases:\nconst blacklist: string[] = [\n    \"/login\",\n    \"/register\"\n];\n\nconst useRedirectBack = () => {\n    let history = useHistory();\n    let location = useLocation<any>();\n\n    const goBack = () => {\n        let from = \"/\";\n\n        if (location.state && location.state.from) {\n            if (typeof location.state.from === \"string\") {\n                if (blacklist.indexOf(location.state.from) === -1) {\n                    from = location.state.from\n                }\n            } else {\n                // from is object\n                if (location.state.from.pathname) {\n                    if (blacklist.indexOf(location.state.from.pathname) === -1) {\n                        from = Object.assign({}, location.state.from)\n                    }\n                }\n            }\n        }\n\n        history.replace(from);\n    };\n\n    return goBack\n};\n\nexport default useRedirectBack","import {useState} from \"react\";\nimport urls from \"./urls\";\nimport { useDispatch } from 'react-redux'\nimport { updateLoginStatus } from \"../redux/actions/login-status\";\nimport {openSnackbarWithConfetti} from \"../redux/actions/snackbar\";\nimport useRedirectBack from \"../utils/redirects/use-redirect-back\";\n\nconst useLogin = () => {\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(false);\n    const [errorMessage, setErrorMessage] = useState('');\n    const dispatch = useDispatch();\n    const goBack = useRedirectBack();\n\n    const login = (\n        email: string,\n        password: string\n    ) => {\n        if (loading) return;\n\n        // reset states\n        setError(false);\n        setErrorMessage('');\n\n        // start fetching\n        setLoading(true);\n        fetch(urls.login, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                email,\n                password\n            })\n        })\n            .then((res) => res.json())\n            .then(json => {\n                setLoading(false);\n\n                if (json.status === 'success') {\n                    const username = json.data.username;\n                    dispatch(updateLoginStatus({\n                        isLogin: true,\n                        username: username,\n                        token: {\n                            access: json.data.access,\n                            refresh: json.data.refresh\n                        }\n                    }));\n                    goBack();\n                    dispatch(openSnackbarWithConfetti(`Welcome back ${username}`));\n                } else {\n                    setError(true);\n                    if (json.status === 'error') {\n                        setErrorMessage(json.message)\n                    } else {\n                        setErrorMessage('Server unavailable, please try again later.')\n                    }\n                }\n            })\n            .catch(e => {\n                setLoading(false);\n\n                setError(true);\n                setErrorMessage('Server unavailable, please try again later.')\n            });\n    };\n\n    return [loading, error, errorMessage, login] as [boolean, boolean, string, typeof login]\n\n};\n\nexport default useLogin","import {Box, CircularProgress, Typography} from \"@material-ui/core\";\nimport React from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    errorMessage: {\n        fontWeight: 700,\n        color: theme.palette.error.main\n    }\n}));\n\ninterface ErrorMessageProps {\n    loading: boolean,\n    error: boolean,\n    errorMessage: string,\n    spinnerSize?: number\n\n}\n\nconst ErrorMessage:React.FC<ErrorMessageProps> = ({loading, errorMessage, error, spinnerSize}) => {\n    const classes = useStyles();\n\n    return (\n        <Typography variant={'body1'} component={'div'}>\n            <Box className={classes.errorMessage} height={40}>\n                {   loading ?\n                        <CircularProgress color=\"primary\" size={spinnerSize || 40}/> :\n                        error && errorMessage ?\n                            errorMessage :\n                            ' '\n                }\n            </Box>\n        </Typography>\n    )\n};\n\nexport default ErrorMessage\n","import React, {FormEvent} from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport LoginCommon from \"./commons/login-common\";\nimport {Box, Divider, Grid, TextField, Typography} from \"@material-ui/core\";\nimport FormButton from \"../commons/form-button\";\nimport {Link} from \"react-router-dom\";\nimport useInputField from \"../../utils/use-input-field\";\nimport {emailValidator, execValidators, passwordValidator} from \"../../utils/validators\";\nimport useLogin from \"../../requests/use-login\";\nimport ErrorMessage from \"../commons/error-message\";\n\nconst useStyles = makeStyles((theme) => ({\n    textField: {\n        width: '100%',\n        fontWeight: 700\n    },\n    link: {\n        fontWeight: 700,\n        '& a:link': {\n            color: theme.palette.primary.main\n        },\n        '& a:visited': {\n            color: theme.palette.primary.main\n        },\n        '& a:hover': {\n            color: theme.palette.secondary.main\n        }\n    }\n}));\n\ninterface LoginProps {\n\n}\n\nconst Login: React.FC<LoginProps> = () => {\n    const classes = useStyles();\n    const [email, setEmail, emailError, emailErrorMessage, validateEmail] = useInputField('', emailValidator);\n    const [password, setPassword, passwordError, passwordErrorMessage, validatePassword] = useInputField('', passwordValidator);\n\n    const [loading, error, errorMessage, login] = useLogin();\n\n    const submitHandler = (e: FormEvent) => {\n        e.preventDefault();\n\n        if (execValidators([validateEmail, validatePassword])) {\n            login(email, password)\n        }\n    };\n\n    return (\n        <LoginCommon imageUrl={'/images/login_bg.jpg'}>\n            <form onSubmit={submitHandler} id={'login-form'}>\n                <Grid container spacing={2}>\n                    <Grid item xs={12}>\n                        <Typography variant={'h5'} component={'h1'} color={\"textPrimary\"}>\n                            <Box textAlign={'center'} fontWeight={700}>\n                                Log In\n                            </Box>\n                        </Typography>\n                    </Grid>\n\n                    <Grid item xs={12}>\n                        <Grid container justify={'center'}>\n                            <TextField\n                                error={emailError}\n                                label=\"Email\"\n                                id=\"login-email\"\n                                name=\"email\"\n                                value={email}\n                                onChange={setEmail}\n                                variant=\"outlined\"\n                                helperText={emailError ? emailErrorMessage: ' '}\n                                className={classes.textField}\n                            />\n                        </Grid>\n                    </Grid>\n\n                    <Grid item xs={12}>\n                        <Grid container justify={'center'}>\n                            <TextField\n                                error={passwordError}\n                                type=\"password\"\n                                label=\"Password\"\n                                id=\"login-password\"\n                                name=\"password\"\n                                value={password}\n                                onChange={setPassword}\n                                variant=\"outlined\"\n                                helperText={passwordError ? passwordErrorMessage : ' '}\n                                className={classes.textField}\n                            />\n                        </Grid>\n                    </Grid>\n\n                    <Grid item xs={12}>\n                        <Grid container justify={'center'}>\n                            <FormButton text={'Log me in!'} form={'login-form'} disabled={loading}/>\n                        </Grid>\n                    </Grid>\n\n                    <Grid item xs={12}>\n                        <Grid container justify={'center'}>\n                            <ErrorMessage loading={loading} error={error} errorMessage={errorMessage}/>\n                        </Grid>\n                    </Grid>\n\n                    <Grid item xs={12}>\n                        <Divider />\n                    </Grid>\n\n                    <Grid item xs={12} className={classes.link}>\n                        <Grid container justify={'center'}>\n                            <Link to={'/register'}>\n                                Need an account?\n                            </Link>\n                        </Grid>\n                    </Grid>\n\n                </Grid>\n            </form>\n        </LoginCommon>\n    )\n\n};\n\nexport default Login\n","import {useState} from \"react\";\nimport urls from \"./urls\";\nimport { useDispatch } from 'react-redux'\nimport { updateLoginStatus } from \"../redux/actions/login-status\";\nimport {openSnackbarWithConfetti} from \"../redux/actions/snackbar\";\nimport useRedirectBack from \"../utils/redirects/use-redirect-back\";\n\nconst useRegister = () => {\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(false);\n    const [errorMessage, setErrorMessage] = useState('');\n    const dispatch = useDispatch();\n    const goBack = useRedirectBack();\n\n    const register = (\n        username: string,\n        email: string,\n        password: string,\n        confirmPassword: string\n    ) => {\n        if (loading) return;\n\n        // reset states\n        setError(false);\n        setErrorMessage('');\n\n        // start fetching\n        setLoading(true);\n        fetch(urls.register, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                username,\n                email,\n                password,\n                'confirm_password': confirmPassword\n            })\n        })\n            .then((res) => res.json())\n            .then(json => {\n                setLoading(false);\n\n                if (json.status === 'success') {\n                    dispatch(updateLoginStatus({\n                        isLogin: true,\n                        username: json.data.username,\n                        token: {\n                            access: json.data.access,\n                            refresh: json.data.refresh\n                        }\n                    }));\n\n                    goBack();\n                    dispatch(openSnackbarWithConfetti(`Welcome ${username}!`));\n                } else {\n                    setError(true);\n                    if (json.status === 'error') {\n                        setErrorMessage(json.message)\n                    } else {\n                        setErrorMessage('Server unavailable, please try again later.')\n                    }\n                }\n            })\n            .catch(e => {\n                setLoading(false);\n\n                setError(true);\n                setErrorMessage('Server unavailable, please try again later.')\n            });\n    };\n\n    return [loading, error, errorMessage, register] as [boolean, boolean, string, typeof register]\n\n};\n\nexport default useRegister","import React, {FormEvent} from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Box, Divider, Grid, TextField, Typography} from \"@material-ui/core\";\nimport FormButton from \"../commons/form-button\";\nimport {Link} from \"react-router-dom\";\nimport LoginCommon from \"./commons/login-common\";\nimport useInputField from \"../../utils/use-input-field\";\nimport {\n    confirmPasswordValidator,\n    emailValidator,\n    execValidators,\n    passwordValidator,\n    usernameValidator\n} from \"../../utils/validators\";\nimport ErrorMessage from \"../commons/error-message\";\nimport useRegister from \"../../requests/use-register\";\n\nconst useStyles = makeStyles((theme) => ({\n    textField: {\n        width: '100%',\n        fontWeight: 700\n    },\n    link: {\n        fontWeight: 700,\n        '& a:link': {\n            color: theme.palette.primary.main\n        },\n        '& a:visited': {\n            color: theme.palette.primary.main\n        },\n        '& a:hover': {\n            color: theme.palette.secondary.main\n        }\n    }\n}));\n\ninterface RegisterProps {\n\n}\n\nconst Register: React.FC<RegisterProps> = () => {\n    const classes = useStyles();\n\n    const [username, setUsername, usernameError, usernameErrorMessage, validateUsername] = useInputField('', usernameValidator);\n    const [email, setEmail, emailError, emailErrorMessage, validateEmail] = useInputField('', emailValidator);\n    const [password, setPassword, passwordError, passwordErrorMessage, validatePassword] = useInputField('', passwordValidator);\n    const [confirmPassword, setConfirmPassword, confirmPasswordError, confirmPasswordErrorMessage, validateConfirmPassword] = useInputField('', confirmPasswordValidator);\n\n    const [loading, error, errorMessage, register] = useRegister();\n\n    const submitHandler = (e: FormEvent) => {\n        e.preventDefault();\n        const validationCheck1 = execValidators([validateUsername, validateEmail, validatePassword]);\n        const validationCheck2 =  validateConfirmPassword(password);\n        if (validationCheck1 && validationCheck2) {\n            register(username, email, password, confirmPassword)\n        }\n    };\n\n    const formID = 'register-form';\n\n    return (\n        <LoginCommon imageUrl={'/images/register_bg.jpg'}>\n            <form onSubmit={submitHandler} id={formID}>\n                <Grid container spacing={2}>\n                    <Grid item xs={12}>\n                        <Typography variant={'h5'} component={'h1'} color={\"textPrimary\"}>\n                            <Box textAlign={'center'} fontWeight={700}>\n                                Join Us\n                            </Box>\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Grid container justify={'center'}>\n                            <TextField\n                                error={usernameError}\n                                label=\"Username\"\n                                id=\"register-username\"\n                                name=\"username\"\n                                value={username}\n                                onChange={setUsername}\n                                helperText={usernameError ? usernameErrorMessage: ' '}\n                                variant=\"outlined\"\n                                className={classes.textField}\n                            />\n                        </Grid>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Grid container justify={'center'}>\n                            <TextField\n                                error={emailError}\n                                label=\"Email\"\n                                id=\"register-email\"\n                                name=\"email\"\n                                value={email}\n                                onChange={setEmail}\n                                helperText={emailError ? emailErrorMessage: ' '}\n                                variant=\"outlined\"\n                                className={classes.textField}\n                            />\n                        </Grid>\n                    </Grid>\n                    <Grid item xs={12} md={6}>\n                        <Grid container justify={'center'}>\n                            <TextField\n                                error={passwordError}\n                                label=\"Password\"\n                                name=\"password\"\n                                id=\"register-password\"\n                                type=\"password\"\n                                value={password}\n                                onChange={setPassword}\n                                helperText={passwordError ? passwordErrorMessage: ' '}\n                                variant=\"outlined\"\n                                className={classes.textField}\n                            />\n                        </Grid>\n                    </Grid>\n                    <Grid item xs={12} md={6}>\n                        <Grid container justify={'center'}>\n                            <TextField\n                                error={confirmPasswordError}\n                                label=\"Confirm Password\"\n                                name=\"confirm-password\"\n                                id=\"register-confirm-password\"\n                                type=\"password\"\n                                value={confirmPassword}\n                                onChange={setConfirmPassword}\n                                helperText={confirmPasswordError ? confirmPasswordErrorMessage: ' '}\n                                variant=\"outlined\"\n                                className={classes.textField}\n                            />\n                        </Grid>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Grid container justify={'center'}>\n                            <FormButton text={'I\\'m in!'} form={formID} disabled={false}/>\n                        </Grid>\n                    </Grid>\n\n                    <Grid item xs={12}>\n                        <Grid container justify={'center'}>\n                            <ErrorMessage loading={loading} error={error} errorMessage={errorMessage}/>\n                        </Grid>\n                    </Grid>\n\n                    <Grid item xs={12}>\n                        <Divider />\n                    </Grid>\n                    <Grid item xs={12} className={classes.link}>\n                        <Grid container justify={'center'}>\n                            <Link to={'/login'}>\n                                Already have an account?\n                            </Link>\n                        </Grid>\n                    </Grid>\n\n                </Grid>\n            </form>\n        </LoginCommon>\n    )\n};\n\nexport default Register\n","import React from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Button as MuiButton} from \"@material-ui/core\";\nimport {Link, useLocation} from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n    button: {\n        backgroundColor: 'rgba(255,255,255,0.3)',\n        color: '#fff',\n        fontWeight: 700,\n        textTransform: 'capitalize',\n        letterSpacing: 'inherit',\n        borderBottom: '2px solid rgba(0,0,0,0.1)',\n        borderRadius: '5px',\n        // margin: '0 4px',\n        padding: '4px 10px',\n        '&:hover': {\n            backgroundColor: theme.palette.secondary.main\n        }\n    }\n}));\n\ninterface ButtonProps {\n    text: string,\n    url?: string,\n    onClick?: () => void\n}\n\nconst ThemeButton: React.FC<ButtonProps> = ({text, url, onClick}) => {\n    const classes = useStyles();\n    const location = useLocation();\n\n    if (url) {\n        const to = {\n            pathname: url,\n            state: {\n                from: location.pathname\n            }\n        };\n        return (\n            <MuiButton variant=\"contained\" classes={{root: classes.button}} disableElevation component={Link} to={to}>\n                { text }\n            </MuiButton>\n        )\n    } else {\n        return (\n            <MuiButton variant=\"contained\" classes={{root: classes.button}} disableElevation onClick={onClick}>\n                { text }\n            </MuiButton>\n        )\n    }\n};\n\nexport default ThemeButton\n","import {useHistory} from \"react-router-dom\";\n\nconst useRedirectToHome = () => {\n    const history = useHistory();\n\n    const toHome = () => {\n        history.replace('/404');\n        history.replace('/');\n    };\n\n    return toHome\n};\n\nexport default useRedirectToHome","import {useState} from \"react\";\nimport { useDispatch } from 'react-redux'\nimport {logout as logoutAction} from \"../redux/actions/login-status\";\nimport {openSnackbar} from \"../redux/actions/snackbar\";\nimport useRedirectToHome from \"../utils/redirects/use-redirect-to-home\";\n\nconst useLogout = () => {\n    const [loading, setLoading] = useState(false);\n    const dispatch = useDispatch();\n    const toHome = useRedirectToHome();\n\n    const clientSideLogout = () => {\n        dispatch(logoutAction());\n        toHome();\n\n        dispatch(openSnackbar('Logout succeeded'))\n    };\n\n    const logout = () => {\n        clientSideLogout()\n    };\n\n    return [loading, logout] as [typeof loading, typeof logout]\n\n};\n\nexport default useLogout","import ThemeButton from \"../commons/theme-button\";\nimport React from \"react\";\nimport {Box, CircularProgress, Grid, Typography} from \"@material-ui/core\";\nimport useLogout from \"../../requests/use-logout\";\n\ninterface LoggedInUserPanelProps {\n    username: string\n}\n\nconst LoggedInUserPanel: React.FC<LoggedInUserPanelProps> = ({username}) => {\n    const [loading, logout] = useLogout();\n\n    return (\n        <Grid container alignItems={\"center\"} justify={\"center\"} spacing={1}>\n            <Grid item>\n                <Typography component={'div'}>\n                    <Box>\n                        { username }\n                    </Box>\n                </Typography>\n            </Grid>\n            <Grid item>\n                {\n                    loading ?\n                        <CircularProgress color=\"secondary\" size={'1rem'}/> :\n                        <ThemeButton text={'Logout'} onClick={logout}/>\n                }\n            </Grid>\n        </Grid>\n    )\n};\n\nexport default LoggedInUserPanel","import ThemeButton from \"../commons/theme-button\";\nimport React from \"react\";\nimport {Grid} from \"@material-ui/core\";\n\nconst AnonymousUserPanel: React.FC = () => {\n    return (\n        <Grid container alignItems={\"center\"} justify={\"center\"} spacing={1}>\n            <Grid item>\n                <ThemeButton text={'Join'} url={'/register'}/>\n            </Grid>\n            <Grid item>\n                <ThemeButton text={'Login'} url={'/login'}/>\n            </Grid>\n        </Grid>\n    )\n};\n\nexport default AnonymousUserPanel","import {Box, Typography} from \"@material-ui/core\";\nimport {Link} from \"react-router-dom\";\nimport React from \"react\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        fontFamily: [\n            'Oleo Script Swash Caps',\n            'sans-serif',\n        ].join(','),\n        fontWeight: 700,\n        fontSize: '1.75rem',\n        fontStyle: \"normal\",\n        color: theme.palette.primary.contrastText,\n        whiteSpace: 'nowrap',\n        width: 'fit-content',\n        [theme.breakpoints.down('sm')]: {\n            fontSize: '1.25rem',\n        },\n    }\n}));\n\nconst Logo: React.FC = () => {\n    const classes = useStyles();\n\n    return (\n        <Typography variant={'h1'} component={'h1'} className={classes.root}>\n            <Box fontWeight={700} textAlign={\"center\"}>\n                <Link to={'/'}>\n                    Blog | XiaoxiHome\n                </Link>\n            </Box>\n        </Typography>\n    )\n};\n\nexport default Logo\n","import React from 'react';\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport LoggedInUserPanel from \"./logged-in-user-panel\";\nimport AnonymousUserPanel from \"./anonymous-user-panel\";\nimport Logo from \"../commons/logo\";\n\ninterface HeaderProps {\n    isLogin: boolean,\n    username: string,\n}\n\nconst useStyles = makeStyles((theme) => ({\n    headerDimension: {\n        width: '100%',\n        height: '80px',\n    },\n    root: {\n        width: '100%',\n        height: '80px',\n        backgroundColor: theme.palette.primary.main,\n        position: 'fixed',\n        zIndex: theme.zIndex.appBar,\n        left: 0,\n        top: 0,\n        color: theme.palette.primary.contrastText,\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'center'\n    },\n    placeholder: {\n        position: 'relative',\n    },\n    widthWrapper: {\n        width: theme.breakpoints.values['md'],\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'center',\n        padding: theme.spacing(0, 1),\n        [theme.breakpoints.down('sm')]: {\n            width: '100%',\n        },\n    },\n    logo: {\n        flex: 1\n    },\n    buttonGroup: {\n\n    },\n    button: {\n        backgroundColor: 'rgba(255,255,255,0.5)',\n        color: '#fff',\n        fontWeight: 700,\n        textTransform: 'capitalize',\n        '&:hover': {\n            backgroundColor: theme.palette.secondary.main\n        }\n    }\n}));\n\n\nconst Header: React.FC<HeaderProps> = ({isLogin, username}) => {\n    const classes = useStyles();\n\n    return (\n        <header className={`${classes.placeholder} ${classes.headerDimension}`}>\n            <div className={`${classes.root} ${classes.headerDimension}`}>\n                <div className={classes.widthWrapper}>\n                    <div className={classes.logo}>\n                        <Logo/>\n                    </div>\n                    <div className={classes.buttonGroup}>\n                        { isLogin ? <LoggedInUserPanel username={username}/> : <AnonymousUserPanel />}\n                    </div>\n                </div>\n            </div>\n        </header>\n    )\n};\n\nexport default Header;\n","import {connect} from \"react-redux\";\nimport Header from \"../components/header/header\";\nimport {State} from \"../redux/state\";\n\nfunction mapStateToProps(state: State) {\n    return {\n        isLogin: state.loginStatus.isLogin,\n        username: state.loginStatus.username\n    }\n}\n\nconst HeaderContainer = connect(\n    mapStateToProps\n)(Header);\n\nexport default HeaderContainer;\n","const GENERIC_ERROR_MESSAGE = 'Server is not available right now, please try again later';\n\nexport default GENERIC_ERROR_MESSAGE","import {useHistory, useLocation} from \"react-router-dom\";\n\nconst useRedirectToLogin = () => {\n    const history = useHistory();\n    const location = useLocation();\n\n    const redirectToLogin = () => {\n        history.push({\n            pathname: \"/login\",\n            state: {\n                from: location.pathname\n            }\n        });\n    };\n\n    return redirectToLogin\n};\n\nexport default useRedirectToLogin","import urls from \"../urls\";\nimport {useDispatch, useStore} from 'react-redux'\nimport { refreshToken as refreshTokenAction } from '../../redux/actions/login-status'\nimport {State} from \"../../redux/state\";\nimport useRedirectToLogin from \"../../utils/redirects/use-redirect-to-login\";\n\n/**\n * enhanced fetch with JWT token verification, and token refreshing when needed\n * return a promise of actual fetch if token is valid or refreshed successfully\n * if specified by @param redirect, redirect to login page if token is invalid or expired\n * no need to pass Authorization Header in @param options\n */\nconst useFetchWithTokenVerification = () => {\n    const state = useStore<State>().getState();\n    const isLogin = state.loginStatus.isLogin;\n    const refreshToken = state.loginStatus.token.refresh;\n    const dispatch = useDispatch();\n    const redirectToLogin = useRedirectToLogin();\n\n    const getAccessHeader = (token?: string) => ({\n        'Authorization': `Bearer ${token || state.loginStatus.token.access}`\n    });\n\n    const fetchWithTokenVerification = async (redirect: boolean, url: RequestInfo, options: RequestInit): Promise<Response> => {\n        try {\n            // delete Authorization header in options in case it is provided\n            if (options.headers !== undefined) {\n                const headers = options.headers as Record<string, string>;\n                if (headers['Authorization']) {\n                    delete headers['Authorization'];\n                    options.headers = {...headers}\n                }\n            }\n\n            const noAuthenticationHandler = (): Promise<Response> => {\n                // don't worry about unsolved promise memory leak\n                // https://stackoverflow.com/questions/20068467/does-never-resolved-promise-cause-memory-leak\n                if (redirect) {\n                    return new Promise((resolve, reject) => {\n                        redirectToLogin();\n                    });\n                } else {\n                    return fetch(url, {\n                        ...options\n                    })\n                }\n            };\n\n            // not login\n            if (!isLogin) {\n                return noAuthenticationHandler();\n            }\n\n            // verify if access token still valid\n            const res = await fetch(urls.verifySession, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    ...getAccessHeader()\n                }\n            });\n            const json = await res.json();\n            if (json.status === 'success') {\n                // access token still valid\n                options.headers = {\n                    ...options.headers,\n                    ...getAccessHeader()\n                };\n                return fetch(url, {...options})\n            }\n\n            // access token not valid\n            // try refresh\n            const refreshRes = await fetch(urls.refresh, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    refresh: refreshToken\n                })\n            });\n            const refreshJson = await refreshRes.json();\n            if (refreshJson.status === 'success') {\n                // refresh successful\n                dispatch(refreshTokenAction(refreshJson.data.access));\n                options.headers = {\n                    ...options.headers,\n                    ...getAccessHeader(refreshJson.data.access)\n                };\n                return fetch(url, {...options})\n            }\n\n            // refresh failed\n            return noAuthenticationHandler();\n        } catch (e) {\n            console.log(e);\n            return new Promise((resolve, reject) => {\n                reject(e.messages);\n            });\n        }\n    };\n\n    return fetchWithTokenVerification\n};\n\nexport default useFetchWithTokenVerification;","import {useEffect, useState} from \"react\";\nimport GENERIC_ERROR_MESSAGE from \"./generic-error-message\";\nimport useFetchWithTokenVerification from \"./use-fetch-with-token-verification\";\n\n/**\n * Generic hook to fetch data with get method, with authentications\n * @param {string} url The link to fetch\n * @param {boolean} fetchWhenComponentDidMount If true, will fetch automatically when componentDidMount\n * @param {boolean} redirectInvalidToken Redirect to login page if true\n */\nconst useProtectedGet = <FetchedDataType,>(\n    url: RequestInfo,\n    fetchWhenComponentDidMount: boolean,\n    redirectInvalidToken: boolean\n) => {\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(false);\n    const [errorMessage, setErrorMessage] = useState('');\n    const [data, setData] = useState<FetchedDataType | null>(null);\n\n    const fetchWithTokenVerification = useFetchWithTokenVerification();\n\n    useEffect(() => {\n        if (fetchWhenComponentDidMount) {\n            doGet(url, redirectInvalidToken)\n        }\n    }, []);\n\n    const doGet = async (\n        url: RequestInfo,\n        redirectInvalidToken: boolean\n    ) => {\n        try {\n            if (loading) return;\n\n            // reset states\n            setError(false);\n            setErrorMessage('');\n\n            // start fetching\n            setLoading(true);\n            const res = await fetchWithTokenVerification(redirectInvalidToken, url, {});\n            const json = await res.json();\n\n            // server responded\n            setLoading(false);\n            if (json.status === 'success') {\n                setData(json.data)\n            } else if (json.status === 'error') {\n                setError(true);\n                setErrorMessage(json.message || GENERIC_ERROR_MESSAGE)\n            }\n            else {\n                console.log(json);\n                setError(true);\n            }\n        } catch (e) {\n            console.log(e);\n            setLoading(false);\n            setError(true);\n            setErrorMessage(GENERIC_ERROR_MESSAGE)\n        }\n    };\n\n    return {\n        loading,\n        error,\n        errorMessage,\n        data,\n        doGet\n    }\n\n};\n\nexport default useProtectedGet","import {useEffect} from \"react\";\nimport urls from \"./urls\";\nimport useProtectedGet from \"./common/use-protected-get\";\n\nexport interface PostListPost {\n    id: string\n    title: string,\n    likes: number,\n    dislikes: number,\n    created: string,\n    comments: number\n    owner: {\n        email: string,\n        username: string,\n        avatar_url: string\n    },\n    tag: string,\n    \"is_liked\"?: 0 | 1 | -1,\n    view_count: number\n}\n\nexport interface PostListData {\n    posts: PostListPost[],\n    total_pages: number\n    current_page: number\n}\n\n\nconst useGetPostList = ({tag, page}: {tag: string | null, page: string}) => {\n    const url = urls.getPostList({tag, page});\n\n    const {\n        loading,\n        error,\n        data,\n        doGet\n    } = useProtectedGet<PostListData>(url, false, false);\n\n    useEffect(() => {\n        doGet(url, false)\n    }, [tag, page]);\n\n    return [loading, error, data] as [typeof loading, typeof error, typeof data]\n};\n\nexport default useGetPostList\n","const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n\nconst getTimeString = (ISOString: string) => {\n    const date = new Date(ISOString);\n    const hour = date.getHours() < 10 ? `0${date.getHours()}` : date.getHours();\n    const minute = date.getMinutes() < 10 ? `0${date.getMinutes()}` : date.getMinutes();\n    return `${date.getDate()} ${months[date.getMonth()]}, ${date.getFullYear()} - ${hour}:${minute}`\n};\n\nexport default getTimeString","import {useState} from \"react\";\nimport GENERIC_ERROR_MESSAGE from \"./generic-error-message\";\nimport useFetchWithTokenVerification from \"./use-fetch-with-token-verification\";\n\n/**\n * The base of fetch with get method\n * @return {usePost~doPost} The actual post function\n */\nconst usePost = <ResponseDataType,>() => {\n    const fetchWithTokenVerification = useFetchWithTokenVerification();\n\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(false);\n    const [errorMessage, setErrorMessage] = useState('');\n    const [data, setData] = useState<ResponseDataType | null>(null);\n\n    /**\n     * The actual post function\n     * @param {string} url The link to fetch\n     * @param {boolean} options The options that will be passed to fetch\n     * @param {boolean} redirectInvalidToken Redirect to login page if true\n     * @param {boolean} callbackOnSuccess A function to be called upon success response is received\n     * @param {boolean} callbackOnError A function to be called upon error response is received\n     * @param {boolean} callbackOnUnknownError A function to be called upon unexpected error is captured\n     */\n    const doPost = async (\n        url: RequestInfo,\n        options: RequestInit,\n        redirectInvalidToken: boolean,\n        callbackOnSuccess?: (<T>(data?: T) => void) | null,\n        callbackOnError?: ((message: string) => void) | null,\n        callbackOnUnknownError?: (() => void) | null,\n    ) => {\n        try {\n            if (loading) return;\n\n            // reset states\n            setError(false);\n            setErrorMessage('');\n            setLoading(true);\n\n            // start fetching\n            const res = await fetchWithTokenVerification(redirectInvalidToken, url, {...options});\n            const json = await res.json();\n\n            // response received\n            setLoading(false);\n            if (json.status === 'success') {\n                setData(json.data);\n                if (callbackOnSuccess) callbackOnSuccess(json.data);\n            } else if (json.status === 'error') {\n                setErrorMessage(json.message);\n                setError(true);\n                if (callbackOnError) callbackOnError(json.message);\n            } else {\n                setErrorMessage(GENERIC_ERROR_MESSAGE);\n                setError(true);\n                if (callbackOnUnknownError) callbackOnUnknownError();\n            }\n        } catch (e) {\n            console.log(e);\n            setLoading(false);\n            setErrorMessage(GENERIC_ERROR_MESSAGE);\n            setError(true);\n            if (callbackOnUnknownError) callbackOnUnknownError();\n        }\n    };\n\n    return {\n        loading,\n        error,\n        errorMessage,\n        data,\n        doPost\n    }\n};\n\nexport default usePost","import {useDispatch} from \"react-redux\";\nimport urls from \"./urls\";\nimport {openSnackbar} from \"../redux/actions/snackbar\";\nimport usePost from \"./common/use-post\";\nimport GENERIC_ERROR_MESSAGE from \"./common/generic-error-message\";\nimport {PostListPost} from \"./use-get-post-list\";\n\ntype Type = 'post' | 'comment';\ntype Action = 1 | 0 | -1;\n\nconst useLike = (type: Type, id: string) => {\n    const dispatch = useDispatch();\n\n    const {\n        loading,\n        error,\n        data: updatedData,\n        doPost\n    } = usePost<PostListPost>();\n\n    const like = async (\n        action: Action\n    ) => {\n        const options = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                \"target_type\": type,\n                \"target_id\": id,\n                action\n            })\n        };\n        const errorCallback = (message: string) => {\n            dispatch(openSnackbar(message || GENERIC_ERROR_MESSAGE));\n        };\n        const unknownErrorCallback = () => {\n            dispatch(openSnackbar(GENERIC_ERROR_MESSAGE));\n        };\n\n        doPost(urls.like, options, true, null, errorCallback, unknownErrorCallback);\n    };\n\n    return [loading, error, updatedData, like] as [typeof loading, typeof error, typeof updatedData, typeof like]\n};\n\nexport default useLike;\n","import IconButton from \"@material-ui/core/IconButton\";\nimport ThumbUpRoundedIcon from \"@material-ui/icons/ThumbUpRounded\";\nimport green from \"@material-ui/core/colors/green\";\nimport ThumbDownRoundedIcon from \"@material-ui/icons/ThumbDownRounded\";\nimport red from \"@material-ui/core/colors/red\";\nimport React from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport useLike from \"../../requests/use-like\";\n\nconst useStyles = makeStyles((theme) => ({\n    likeButtons: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'center',\n        marginLeft: '-14px'\n    },\n    buttonText: {\n        lineHeight: 1,\n        color: theme.palette.grey[\"500\"],\n        fontSize: '0.875rem',\n        fontWeight: 700,\n    },\n    button: {\n        color: theme.palette.grey[\"400\"],\n        fontSize: '1.25rem'\n    },\n}));\n\ninterface LikeButtonsProps {\n    type: 'post' | 'comment',\n    id: string\n    likes: number,\n    dislikes: number,\n    isLiked: 0 | 1 | -1 | undefined\n}\n\nconst LikeButtons: React.FC<LikeButtonsProps> = ({type, id, likes, dislikes, isLiked}) => {\n    const classes = useStyles();\n\n    const [likeLoading, likeError, updatedData, like] = useLike(type, id);\n    if (updatedData !== null) {\n        likes = updatedData.likes;\n        dislikes = updatedData.dislikes;\n        if (updatedData['is_liked'] !== undefined) {\n            isLiked = updatedData['is_liked']\n        }\n    }\n\n    const likedByUser = isLiked === 1;\n    const dislikedByUser = isLiked === -1;\n\n    const handleLikeClick = () => {\n        likedByUser ? like(0) : like(1);\n    };\n\n    const handleDislikeClick = () => {\n        dislikedByUser ? like(0) : like(-1);\n    };\n\n    return (\n        <div className={classes.likeButtons}>\n            <IconButton aria-label={`like ${type}`} disabled={likeLoading} onClick={handleLikeClick}>\n                <ThumbUpRoundedIcon className={classes.button} style={likedByUser ? {color: green[300]} : {}}/>\n            </IconButton>\n            <div className={classes.buttonText}>\n                { likes }\n            </div>\n            <IconButton aria-label={`dislike ${type}`} disabled={likeLoading} onClick={handleDislikeClick}>\n                <ThumbDownRoundedIcon className={classes.button} style={dislikedByUser ? {color: red[300]} : {}}/>\n            </IconButton>\n            <div className={classes.buttonText}>\n                { dislikes }\n            </div>\n        </div>\n    )\n};\n\nexport default LikeButtons\n","import React from \"react\";\nimport Chip from \"@material-ui/core/Chip\";\nimport {Link} from \"react-router-dom\";\n\ninterface TagChipCommonProps {\n  text: string,\n  to: string,\n  classes: {\n    root: string,\n    chipRoot: string,\n    chipLabel: string\n  }\n}\n\nconst TagChipCommon: React.FC<TagChipCommonProps> = ({text, to, classes}) => {\n  return (\n    <div className={classes.root}>\n      <Chip\n        label={text}\n        component={Link}\n        to={to}\n        clickable\n        classes={{\n          clickable: classes.chipRoot,\n          label: classes.chipLabel\n        }}\n      />\n    </div>\n  )\n};\n\nexport default TagChipCommon\n","import React from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport { fade } from '@material-ui/core/styles/colorManipulator';\nimport TagChipCommon from \"./tag-chip-common\";\n\ninterface TagChipProps {\n    text: string\n    size: 'small' | 'normal',\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        color: theme.palette.primary.contrastText,\n    },\n    chipRoot: {\n        borderRadius: 2,\n        height: 'auto',\n        backgroundColor: fade(theme.palette.primary.light, 0.8),\n        transitions: theme.transitions.create('background-color'),\n        '&:hover, &:focus, &:active': {\n            backgroundColor: theme.palette.primary.main,\n        },\n    },\n    chipLabelSmall: {\n        padding: '0 5px',\n        fontSize: theme.typography.caption.fontSize\n    },\n    chipLabelNormal: {\n        padding: '2px 15px',\n        fontSize: theme.typography.caption.fontSize,\n        fontWeight: 700\n    },\n}));\n\nconst TagChip: React.FC<TagChipProps> = ({text, size}) => {\n    const _classes = useStyles();\n    const classes = {\n        root: _classes.root,\n        chipRoot: _classes.chipRoot,\n        chipLabel: size === 'small' ? _classes.chipLabelSmall : _classes.chipLabelNormal\n    };\n\n    return (\n        <TagChipCommon text={text.toUpperCase()} classes={classes} to={`/?tag=${text.toUpperCase()}`} />\n    )\n};\n\nexport default TagChip\n","import React from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Box, Paper, Typography} from \"@material-ui/core\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport {Link} from \"react-router-dom\";\nimport getTimeString from \"../../utils/get-time-string\";\nimport LikeButtons from \"../commons/like-buttons\";\nimport TagChip from \"../commons/tag-chip/tag-chip\";\nimport {PostListPost} from \"../../requests/use-get-post-list\";\n\ninterface PostProps {\n    isLogin: boolean,\n    data: PostListPost\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        margin: theme.spacing(1, 0)\n    },\n    paper: {\n        width: '100%',\n        minHeight: '100px',\n        padding: theme.spacing(2),\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'flex-start'\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.primary.light\n    },\n    content: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'flex-start',\n        justifyContent: 'center',\n    },\n    title: {\n        margin: theme.spacing(0, 2),\n        '& h2': {\n            fontSize: '1.25rem',\n            fontWeight: 700,\n            color: theme.palette.text.primary,\n            margin: theme.spacing(0),\n            lineHeight: 1.2\n        },\n        '& h2:hover': {\n            color: theme.palette.primary.main,\n        }\n    },\n    author: {\n        margin: theme.spacing(0, 2),\n    },\n    actionArea: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'flex-start',\n        color: theme.palette.grey[\"500\"],\n        fontSize: '0.875rem',\n        fontWeight: 700,\n        [theme.breakpoints.down('md')]: {\n            flexDirection: 'column',\n            alignItems: 'flex-start',\n            justifyContent: 'center',\n        }\n    },\n    actionItem: {\n        margin: theme.spacing(0, 2)\n    }\n}));\n\nconst Post: React.FC<PostProps> = ({isLogin, data}) => {\n    const classes = useStyles();\n    const isLiked = isLogin ? data.is_liked : undefined;\n\n    return (\n        <div className={classes.root}>\n            <Paper className={classes.paper} elevation={0}>\n                <Avatar variant=\"rounded\" className={classes.avatar} src={data.owner.avatar_url}>\n                    { data.owner.username.charAt(0) }\n                </Avatar>\n                <div className={classes.content}>\n                    <div className={classes.title}>\n                        <Link to={`/post/${data.id}`}>\n                            <h2>\n                                { data.title }\n                            </h2>\n                        </Link>\n                    </div>\n                    <div className={classes.author}>\n                        <Typography variant={'caption'} component={'div'}>\n                            <Box>\n                                { data.owner.username }\n                            </Box>\n                        </Typography>\n                    </div>\n                    <div className={classes.author}>\n                        <TagChip text={data.tag} size={'small'}/>\n                    </div>\n                    <div className={classes.actionArea}>\n                        <div className={classes.actionItem}>\n                            <LikeButtons type={'post'} id={data.id} likes={data.likes} dislikes={data.dislikes} isLiked={isLiked}/>\n                        </div>\n                        <div className={classes.actionItem}>\n                            { `${data.comments} ${data.comments > 1 ? 'comments' : 'comment'}` }\n                        </div>\n                        <div className={classes.actionItem}>\n                            { getTimeString(data.created) }\n                        </div>\n                    </div>\n                </div>\n            </Paper>\n        </div>\n    )\n};\n\nexport default Post\n","import React, {useEffect, useState} from 'react';\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport {fade, Paper} from \"@material-ui/core\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from '@material-ui/icons/Close';\nimport Fade from \"@material-ui/core/Fade\";\n\nconst DELAY = 5000; // ms\nconst FADE_ANIMATION_DURATION = 500;\nlet timeoutID: null | number = null;\n\n/**\n * 1. init states: active === false, isMount === false --> null component returned\n * 2. switch active and isMount to true after DELAY after component is mounted --> actual component returned, fade in animation is activated\n * 3. if isLoaded props set to true within DELAY --> step 2 will be canceled\n * 4. if isLoaded props set to true after DELAY --> step 5\n * 5. active set to false, fade out animation is activated\n * 6. isMounted will be set to false when fade out animation is done\n */\nexport const useServerWaking = () => {\n    // the state of fade is in\n    const [active, setActive] = useState(false);\n    // the state of mounting (null component returned if !isMount)\n    const [isMount, setIsMount] = useState(false);\n\n    const cleanUp = () => {\n        if (timeoutID !== null) {\n            clearTimeout(timeoutID);\n            timeoutID = null;\n        }\n    };\n\n    const showNotification = () => {\n        setIsMount(true);\n        setActive(true)\n    };\n\n    const handleLoaded = () => {\n        cleanUp();\n        if (active) {\n            setActive(false)\n        }\n    };\n\n    const turnToInactive = () => {\n        if (active) {\n            setActive(false)\n        }\n    };\n\n    const unMount = () => {\n        if (isMount) {\n            setIsMount(false)\n        }\n    };\n\n    useEffect(() => {\n        // set active to true after DELAY\n        timeoutID = window.setTimeout(showNotification, DELAY);\n\n        return () => {\n            cleanUp();\n        }\n    }, []);\n\n    return {\n        active,\n        handleLoaded,\n        turnToInactive,\n        isMount,\n        unMount\n    }\n};\n\ninterface HeaderProps {\n    isLoaded: boolean\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        backgroundColor: theme.palette.warning.light,\n        color: theme.palette.warning.contrastText,\n        padding: theme.spacing(1, 2),\n        margin: theme.spacing(1, 0, 0, 0),\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'flex-start'\n    },\n    text: {\n        width: 'calc(100% - 50px)'\n    },\n    button: {\n        width: '50px',\n    },\n    noWrap: {\n        whiteSpace: 'nowrap'\n    },\n    link: {\n        '&:link': {\n            textDecoration: 'underline',\n            fontWeight: 700\n        },\n        '&:visited': {\n            textDecoration: 'underline',\n            fontWeight: 700\n        },\n        '&:hover': {\n            color: fade(theme.palette.warning.contrastText, 0.5)\n        }\n    }\n}));\n\n\nconst ServerWakingNotification: React.FC<HeaderProps> = ({isLoaded}) => {\n    const classes = useStyles();\n\n    const {active, handleLoaded, turnToInactive, isMount, unMount} = useServerWaking();\n\n    useEffect(() => {\n        if (isLoaded) handleLoaded();\n    }, [isLoaded, handleLoaded]);\n\n    if (isMount) {\n        return (\n            <Fade in={active} timeout={FADE_ANIMATION_DURATION} onExited={unMount}>\n                <Paper elevation={0} className={classes.root}>\n                    <div className={classes.text}>\n                        <p>\n                            {'The backend of this application falls asleep again, usually he will wake up in half minute '}\n                            <span className={classes.noWrap}>\n                                ٩(ˊ〇ˋ*)و\n                            </span>\n                        </p>\n                        <p>\n                            <span>Wanna check out </span>\n                            <a\n                                href='https://www.xiaoxihome.com/'\n                                target='_blank'\n                                rel='noopener noreferrer'\n                                className={classes.link}\n                            >\n                                XiaoxiHome\n                            </a>\n                            <span> while waiting?</span>\n                        </p>\n                    </div>\n                    <IconButton aria-label=\"close\" name=\"close\" title=\"close\" onClick={turnToInactive} className={classes.button}>\n                        <CloseIcon />\n                    </IconButton>\n                </Paper>\n            </Fade>\n        )\n    } else {\n        return null\n    }\n};\n\nexport default ServerWakingNotification;\n","// import React from \"react\";\nimport {useLocation} from \"react-router-dom\";\n\nfunction useQuery() {\n  return new URLSearchParams(useLocation().search);\n}\n\n// interface QueryParamProps {\n//   children: React.ReactElement\n// }\n//\n// const MainPageQueryParamParser: React.FC<QueryParamProps> = ({children}) => {\n//   const query = useQuery();\n//\n//   return (\n//     <children.type {...children.props} tag={query.get('tag')} page={query.get('page') || 1}/>\n//   )\n//   const props = {\n//     tag: query.get('tag'),\n//     page: query.get('page')\n//   };\n//   return React.cloneElement(children as React.ReactElement<{tag: string, page: string}>, props)\n// };\n\n\nexport default useQuery\n// export {MainPageQueryParamParser}\n","import React from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport MuiPagination from '@material-ui/lab/Pagination';\nimport {PaginationItem} from \"@material-ui/lab\";\nimport {Link} from \"react-router-dom\";\nimport useQuery from \"../../utils/use-query\";\nimport Paper from \"@material-ui/core/Paper\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    width: '100%',\n    padding: theme.spacing(2, 0)\n  },\n  root: {\n    '& .Mui-selected': {\n      backgroundColor: theme.palette.primary.light,\n      color: theme.palette.primary.contrastText,\n    },\n    '& .MuiPaginationItem-rounded:hover': {\n      backgroundColor: theme.palette.secondary.light,\n      color: theme.palette.secondary.contrastText,\n    }\n  }\n}));\n\ninterface PaginationProps {\n  count: number,\n  page: number,\n}\n\nconst Pagination: React.FC<PaginationProps> = ({count, page}) => {\n  const classes = useStyles();\n  const query = useQuery();\n\n  if (count > 1) {\n    return (\n      <Paper className={classes.paper} elevation={0}>\n        <MuiPagination\n          count={count} page={page} shape={'rounded'} className={classes.root}\n          renderItem={(item) => {\n            query.set('page', item.page.toString());\n            return <PaginationItem\n             component={Link}\n             to={'/?' + query.toString()}\n             {...item}\n            />\n          }}\n        />\n      </Paper>\n    )\n  } else {\n    return <></>\n  }\n};\n\nexport default Pagination\n","import React from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Chip from \"@material-ui/core/Chip\";\nimport {Box} from \"@material-ui/core\";\nimport { fade } from '@material-ui/core/styles/colorManipulator';\nimport {useHistory} from 'react-router-dom'\n\ninterface ActiveTagChipProps {\n    text: string\n}\n\nconst useStyles = makeStyles((theme) => ({\n    inheritColor: {\n        color: theme.palette.primary.contrastText,\n    },\n    chipRoot: {\n        borderRadius: 5,\n        backgroundColor: theme.palette.primary.light,\n        transitions: theme.transitions.create('background-color'),\n        '&:hover': {\n            backgroundColor: theme.palette.primary.main,\n        },\n        '&:focus': {\n            backgroundColor: theme.palette.primary.main,\n        }\n    },\n    chipLabel: {\n        padding: '2px 20px',\n        fontSize: theme.typography.body2.fontSize,\n        fontWeight: 700\n    },\n}));\n\nconst ActiveTagChip: React.FC<ActiveTagChipProps> = ({text}) => {\n    const classes = useStyles();\n    let history = useHistory();\n\n    const handleDelete = () => {\n        history.push('/')\n    };\n\n    return (\n        <Box className={classes.inheritColor}>\n            <Chip\n                label={text.toUpperCase()}\n                onDelete={handleDelete}\n                color={'primary'}\n                classes={{\n                    deletable: classes.chipRoot,\n                    label: classes.chipLabel\n                }}\n            />\n        </Box>\n    )\n};\n\nexport default ActiveTagChip\n","import React from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport useGetPostList from \"../../requests/use-get-post-list\";\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport {Box, Typography} from \"@material-ui/core\";\nimport Post from \"./post\";\nimport ServerWakingNotification from \"./server-waking-notification\";\nimport Pagination from \"../pagination/pagination\";\nimport Paper from \"@material-ui/core/Paper\";\nimport useQuery from \"../../utils/use-query\";\nimport ActiveTagChip from \"../main-page/active-tag-chip\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%'\n    },\n    tags: {\n        padding: theme.spacing(2, 2),\n        margin: theme.spacing(1, 0),\n        width: \"100%\",\n    },\n}));\n\ninterface PostListProps {\n    isLogin: boolean,\n    tag: string | null,\n    page: string\n}\n\nconst PostList: React.FC<PostListProps> = ({isLogin, tag, page}) => {\n    const classes = useStyles();\n    const [loading, error, data] = useGetPostList({tag, page});\n    const isLoaded = data !== null;\n\n    let content;\n    if (loading || !isLoaded) {\n        content = (new Array(10)).fill(0).map((_, i) => {\n            return (\n                <Box width='100%' my={1} borderRadius={'5px'} key={i} overflow={'hidden'}>\n                    <Skeleton variant=\"rect\" animation=\"wave\" width={'100%'} height={150}/>\n                </Box>\n            )\n        })\n    } else if (error) {\n        content = (\n            <Typography variant={'body1'} component={'h2'}>\n                <Box fontWeight={700} color={'primary.main'} textAlign={'center'}>\n                    Server is unavailable now, please try again later\n                </Box>\n            </Typography>\n        )\n    } else if (data) {\n        content = (\n          <>\n              {\n                  tag &&\n                  <Paper className={classes.tags} elevation={0}>\n                      <ActiveTagChip text={tag}/>\n                  </Paper>\n              }\n              { data.posts.map((_, i) =>  <Post key={i} isLogin={isLogin} data={_}/> ) }\n              <Pagination count={data?.total_pages || 1} page={data?.current_page || 1}/>\n          </>\n        )\n    }\n\n    return (\n        <div className={classes.root}>\n            <ServerWakingNotification isLoaded={isLoaded}/>\n            { content }\n        </div>\n    )\n};\n\nexport default PostList\n","import {connect} from \"react-redux\";\nimport {State} from \"../redux/state\";\nimport PostList from \"../components/post-list/post-list\";\n\nfunction mapStateToProps(state: State) {\n    return {\n        isLogin: state.loginStatus.isLogin\n    }\n}\n\n// function mapDispatchToProps(dispatch: Dispatch) {\n//     return {\n//         closeSnackbar: () => dispatch(closeSnackbar())\n//     }\n// }\n\nconst PostListContainer = connect(\n    mapStateToProps\n)(PostList);\n\nexport default PostListContainer;\n","import {Button} from \"@material-ui/core\";\nimport React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport {makeStyles} from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    button: {\n        backgroundColor: theme.palette.primary.light,\n        maxWidth: '100%',\n        color: '#fff',\n        fontWeight: 700,\n        textTransform: 'capitalize',\n        letterSpacing: 'inherit',\n        borderBottom: '2px solid rgba(0,0,0,0.1)',\n        borderRadius: '5px',\n        padding: '4px 10px',\n        '& span': {\n            color: '#fff',\n        },\n        '&:hover': {\n            backgroundColor: theme.palette.secondary.main\n        }\n    }\n}));\n\ninterface BaseButtonProps {\n    width: string,\n    text: string\n}\n\ninterface GenericClickButtonProps extends BaseButtonProps {\n    onClick: any,\n    disabled?: boolean\n}\n\nconst GenericClickButton: React.FC<GenericClickButtonProps> = ({width, text, onClick, disabled}) => {\n    const classes = useStyles();\n\n    return (\n            <Button variant=\"contained\" classes={{root: classes.button}} disableElevation onClick={onClick} style={{width: width}} disabled={disabled}>\n                { text }\n            </Button>\n    )\n};\n\ninterface GenericLinkButtonProps extends BaseButtonProps {\n    link: string\n}\n\nconst GenericLinkButton: React.FC<GenericLinkButtonProps> = ({width, text, link}) => {\n    const classes = useStyles();\n\n    return (\n        <Button variant=\"contained\" classes={{root: classes.button}} disableElevation component={Link} to={link} style={{width: width}}>\n            { text }\n        </Button>\n    )\n};\n\nexport {GenericClickButton, GenericLinkButton};\n","import React from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport {CircularProgress} from \"@material-ui/core\";\nimport BrokenImageIcon from '@material-ui/icons/BrokenImage';\n\ninterface SideBarSectionProps {\n  isLoading?: boolean,\n  title?: string,\n  error?: boolean\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: 'calc(100% - 16px)',\n    margin: theme.spacing(1),\n    overflow: 'hidden',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    [theme.breakpoints.down('md')]: {\n      width: '100%',\n      margin: theme.spacing(1, 0),\n    }\n  },\n  main: {\n    width: '80%',\n    minHeight: '100px',\n    padding: theme.spacing(2, 0),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  title: {\n    padding: theme.spacing(0.25, 1),\n    fontWeight: 700,\n    textTransform: 'uppercase',\n    fontSize: theme.typography.caption.fontSize,\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: theme.palette.primary.light,\n    color: theme.palette.primary.contrastText,\n    width: '100%',\n    borderRadius: theme.shape.borderRadius\n  },\n  titleText: {\n    padding: theme.spacing(0, 1),\n  }\n}));\n\nconst SideBarSection: React.FC<SideBarSectionProps> = ({children, isLoading, title, error}) => {\n  const classes = useStyles();\n\n  return (\n    <Paper className={classes.root} elevation={0}>\n      {\n        title &&\n        <div className={classes.title}>{title}</div>\n      }\n      <div className={classes.main}>\n        {\n          isLoading && <CircularProgress color=\"primary\" size={25}/>\n        }\n        {\n          error && <BrokenImageIcon color='disabled'/>\n        }\n        {\n          !isLoading && !error && children\n        }\n      </div>\n    </Paper>\n  )\n};\n\nexport default SideBarSection\n","import React from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {GenericLinkButton} from \"../commons/generic-button\";\nimport SideBarSection from \"./common/side-bar-section\";\n\ninterface SideBarTopProps {\n  isLogin: boolean\n}\n\nconst useStyles = makeStyles((theme) => ({\n  rowWrapper: {\n    width: '100%',\n    margin: '8px 0'\n  }\n}));\n\nconst SideBarTop: React.FC<SideBarTopProps> = ({isLogin}) => {\n  const classes = useStyles();\n\n  return (\n    <SideBarSection>\n      <div className={classes.rowWrapper}>\n        <GenericLinkButton link={'/edit-post'} width={'100%'} text={'Create Post'}/>\n      </div>\n      {\n        isLogin &&\n        <div className={classes.rowWrapper}>\n          <GenericLinkButton link={'/account-setting'} width={'100%'} text={'Account Settings'}/>\n        </div>\n      }\n    </SideBarSection>\n  )\n};\n\nexport default SideBarTop\n","import {useEffect, useState} from \"react\";\nimport GENERIC_ERROR_MESSAGE from \"./generic-error-message\";\n\n/**\n * Generic hook to fetch data with get method, with no authentications\n * @param {string} url The link to fetch\n * @param {boolean} fetchWhenComponentDidMount If true, will fetch automatically when componentDidMount\n */\nconst useUnprotectedGet = <FetchedDataType,>(\n    url: RequestInfo,\n    fetchWhenComponentDidMount: boolean\n) => {\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(false);\n    const [errorMessage, setErrorMessage] = useState('');\n    const [data, setData] = useState<FetchedDataType | null>(null);\n\n    useEffect(() => {\n        if (fetchWhenComponentDidMount) {\n            doGet()\n        }\n    }, []);\n\n    const doGet = async (\n    ) => {\n        try {\n            if (loading) return;\n            // reset states\n            setError(false);\n            setErrorMessage('');\n\n            // start fetching\n            setLoading(true);\n            const res = await fetch(url);\n            const json = await res.json();\n\n            // server responded\n            setLoading(false);\n            if (json.status === 'success') {\n                setData(json.data)\n            } else if (json.status === 'error') {\n                setError(true);\n                setErrorMessage(json.message || GENERIC_ERROR_MESSAGE)\n            }\n            else {\n                console.log(json);\n                setError(true);\n            }\n        } catch (e) {\n            console.log(e);\n            setLoading(false);\n            setError(true);\n            setErrorMessage(GENERIC_ERROR_MESSAGE)\n        }\n    };\n\n    return {\n        loading,\n        error,\n        errorMessage,\n        data,\n        doGet\n    }\n\n};\n\nexport default useUnprotectedGet","import urls from \"./urls\";\nimport useUnprotectedGet from \"./common/use-unprotected-get\";\n\ninterface Tag {\n    tag: string,\n    count: number\n}\n\nexport type TagList = Tag[]\n\nconst useGetTagList = () => {\n    const {\n        loading,\n        error,\n        data\n    } = useUnprotectedGet<TagList>(urls.tagList, true);\n\n    return [loading, error, data] as [typeof loading, typeof error, typeof data]\n\n};\n\nexport default useGetTagList\n","import React from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport { fade } from '@material-ui/core/styles/colorManipulator';\nimport {Button} from \"@material-ui/core\";\nimport {Link} from \"react-router-dom\";\n\ninterface SideBarListViewItemProps {\n  text: string,\n  to: string,\n  number: number,\n  barPercentage: string\n}\n\nconst useStyles = (barWidth: string) => makeStyles((theme) => ({\n  root: {\n    margin: 0,\n    width: '100%',\n    padding: 2,\n    borderRadius: 2,\n    height: 'auto',\n    backgroundColor: fade(theme.palette.primary.light, 0),\n    transitions: theme.transitions.create(['background-color']),\n    color: theme.palette.text.primary,\n    justifyContent: 'flex-start',\n    position: 'relative',\n    '&:hover $barItem': {\n      height: '100%',\n      width: '100%',\n      transition: theme.transitions.create(['height', 'width']),\n    },\n  },\n  label: {\n    width: '100%',\n    fontSize: theme.typography.caption.fontSize,\n    fontWeight: 700,\n    textTransform: 'capitalize',\n    padding: '2px',\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  text: {\n    flex: 1,\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n  },\n  number: {\n    textAlign: 'end',\n    paddingLeft: '4px'\n  },\n  barWrapper: {\n    position: 'absolute',\n    bottom: 0,\n    left: 0,\n    width: '100%',\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'flex-end',\n    justifyContent: 'flex-start',\n    borderRadius: theme.shape.borderRadius\n  },\n  barItem: {\n    backgroundColor: fade(theme.palette.secondary.light, 0.5),\n    height: '50%',\n    width: barWidth,\n    borderRadius: theme.shape.borderRadius,\n    transition: theme.transitions.create(['height', 'width'])\n  }\n}));\n\nconst SideBarListViewItem: React.FC<SideBarListViewItemProps> = ({text, to, number, barPercentage}) => {\n  const classes = useStyles(barPercentage)();\n\n  return (\n    <Button component={Link} to={to} classes={{root: classes.root, label: classes.label}}>\n      <div className={classes.text} style={{zIndex: 2}}>\n        {text}\n      </div>\n      <div className={classes.number} style={{zIndex: 2}}>\n        {number}\n      </div>\n      <div className={classes.barWrapper} style={{zIndex: 1}}>\n        <div className={classes.barItem}>\n\n        </div>\n      </div>\n    </Button>\n  );\n};\n\nexport default SideBarListViewItem\n","import React, {useMemo} from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport SideBarListViewItem from \"./side-bar-list-view-item\";\n\ntype Items = {\n  text: string,\n  number: number,\n  to: string\n}[]\n\ninterface TagChipSideBarProps {\n  items: Items\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    position: 'relative'\n  }\n}));\n\nconst SideBarListView: React.FC<TagChipSideBarProps> = ({items}) => {\n  const classes = useStyles();\n  const bars = useMemo(() => {\n    const maxCount = items.reduce((a, b) => Math.max(a, b.number), 0);\n    return items.map(item => `${(item.number/maxCount*100).toFixed(2)}%`)\n  }, [items]);\n\n  return (\n    <div className={classes.root}>\n      {\n        items.map((item, index) => <SideBarListViewItem key={item.text} text={item.text} to={item.to} number={item.number} barPercentage={bars[index]}/>)\n      }\n    </div>\n  );\n};\n\nexport default SideBarListView\n","class Routes {\n  home = '/';\n  login = '/login';\n  register = '/register';\n  postDetail = '/post/:postID';\n  editPost = '/edit-post/:postID?';\n  accountSetting = '/account-setting';\n  fallback = '/*';\n\n  getPostList = (params: {tag?: string, page?: string}) => {\n    let base = this.home;\n    const entries = Object.entries(params);\n    if (entries.length > 0) {\n      base += '?';\n      const paramStrings = entries.map(pair => `${pair[0]}=${pair[1]}`);\n      const string = paramStrings.join('&');\n      base += string;\n    }\n    return base\n  };\n  getPostDetail = (postID: string) => `/post/${postID}`;\n  getEditPost = (postID: string | undefined) => `/edit-post/${postID}`;\n}\n\n\nconst routes = new Routes();\n\nexport default routes\n","import React, {useMemo} from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport SideBarSection from \"./common/side-bar-section\";\nimport useGetTagList from \"../../requests/use-get-tag-list\";\nimport SideBarListView from \"./common/side-bar-list-view\";\nimport routes from \"../../routes\";\n\nconst useStyles = makeStyles((theme) => ({\n\n}));\n\ninterface SideBarTagsProps {\n\n}\n\nconst SideBarTags: React.FC<SideBarTagsProps> = () => {\n  const classes = useStyles();\n  const [\n    loading,\n    error,\n    data\n  ] = useGetTagList();\n\n  const items = useMemo(() => {\n    return data?.map(obj => ({\n      text: obj.tag.toLowerCase(),\n      to: routes.getPostList({tag: obj.tag}),\n      number: obj.count\n    }))\n  }, [data]);\n\n  return (\n    <SideBarSection isLoading={loading} title={'tags'} error={error}>\n      {\n        items && <SideBarListView items={items}/>\n      }\n    </SideBarSection>\n  )\n};\n\nexport default SideBarTags\n","import urls from \"./urls\";\nimport useUnprotectedGet from \"./common/use-unprotected-get\";\nimport {PostListData} from \"./use-get-post-list\";\n\nconst useGetPopularPosts = () => {\n  const url = urls.popularPosts;\n\n  const {\n    loading,\n    error,\n    data\n  } = useUnprotectedGet<PostListData>(url, true);\n\n  return [loading, error, data] as [typeof loading, typeof error, typeof data]\n};\n\nexport default useGetPopularPosts\n","import React, {useMemo} from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport SideBarSection from \"./common/side-bar-section\";\nimport useGetPopularPosts from \"../../requests/use-get-popular-posts\";\nimport SideBarListView from \"./common/side-bar-list-view\";\nimport routes from \"../../routes\";\n\nconst useStyles = makeStyles((theme) => ({\n\n}));\n\ninterface SideBarTagsProps {\n\n}\n\nconst SideBarPopular: React.FC<SideBarTagsProps> = () => {\n  const classes = useStyles();\n  const [loading, error, data] = useGetPopularPosts();\n\n  const items = useMemo(() => {\n    return data?.posts.map(post => ({\n      text: post.title,\n      to: routes.getPostDetail(post.id),\n      number: post.view_count\n    }))\n  }, [data]);\n\n  return (\n    <SideBarSection isLoading={loading} title={'popular posts'} error={error}>\n      {\n        items && <SideBarListView items={items}/>\n      }\n    </SideBarSection>\n  )\n};\n\nexport default SideBarPopular\n","import React from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport SideBarTop from \"./side-bar-top\";\nimport SideBarTags from \"./side-bar-tags\";\nimport SideBarPopular from \"./side-bar-popular\";\n\ninterface SideBarProps {\n    isLogin: boolean\n}\n\nconst useStyles = makeStyles((theme) => ({\n\n}));\n\nconst SideBar: React.FC<SideBarProps> = ({isLogin}) => {\n    const classes = useStyles();\n\n    return (\n      <>\n          <SideBarTop isLogin={isLogin}/>\n          <SideBarTags/>\n          <SideBarPopular/>\n      </>\n    )\n};\n\nexport default SideBar\n","import {connect} from \"react-redux\";\nimport {State} from \"../redux/state\";\nimport SideBar from \"../components/side-bar/side-bar\";\n\nfunction mapStateToProps(state: State) {\n    return {\n        isLogin: state.loginStatus.isLogin\n    }\n}\n\nconst SideBarContainer = connect(\n    mapStateToProps\n)(SideBar);\n\nexport default SideBarContainer;\n","import React from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport PostListContainer from \"../../containers/post-list-container\";\nimport SideBarContainer from \"../../containers/side-bar-container\";\nimport useQuery from \"../../utils/use-query\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        margin: theme.spacing(2, 0),\n        width: '100%',\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'flex-start',\n        justifyContent: 'center',\n        flexWrap: 'wrap',\n        [theme.breakpoints.down('md')]: {\n            flexDirection: 'column',\n            margin: 0,\n        }\n    },\n    left: {\n        width: \"75%\",\n        [theme.breakpoints.down('md')]: {\n            width: \"100%\",\n        }\n    },\n    right: {\n        width: \"25%\",\n        [theme.breakpoints.down('md')]: {\n            width: \"100%\",\n        }\n    }\n}));\n\ninterface MainPageProps {\n\n}\n\nconst MainPage: React.FC<MainPageProps> = () => {\n    const classes = useStyles();\n    const query = useQuery();\n    const tag = query.get('tag');\n    const page = query.get('page') || '1';\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.left}>\n                <PostListContainer tag={tag} page={page} key={`tag=${tag}&page=${page}`}/>\n            </div>\n            <div className={classes.right}>\n                <SideBarContainer />\n            </div>\n        </div>\n    )\n};\n\nexport default MainPage\n","import React from \"react\";\nimport {\n    Box,\n    createStyles,\n    IconButton,\n    Snackbar as MuiSnackbar,\n    SnackbarContent,\n} from \"@material-ui/core\";\nimport Close from '@material-ui/icons/Close';\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles((theme) => createStyles({\n    root: {\n\n    },\n    content: {\n        backgroundColor: theme.palette.primary.main,\n    },\n}));\n\ninterface SnackbarProps {\n    open: boolean,\n    closeSnackbar: () => void,\n    message: string\n}\n\nconst Snackbar: React.FC<SnackbarProps> = ({open, closeSnackbar, message}) => {\n    const classes = useStyles();\n\n    return (\n        <MuiSnackbar\n            anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'center',\n            }}\n            open={open}\n            autoHideDuration={5000}\n            onClose={closeSnackbar}\n            className={classes.root}\n        >\n            <SnackbarContent\n                className={classes.content}\n                message={\n                    <Typography variant={'body1'} component={'div'}>\n                        <Box fontWeight={700}>\n                            { message }\n                        </Box>\n                    </Typography>\n                }\n                action={[\n                    <IconButton key=\"close\" aria-label=\"close\" color=\"inherit\" onClick={closeSnackbar}>\n                        <Close/>\n                    </IconButton>\n                ]}\n            />\n        </MuiSnackbar>\n    )\n};\n\nexport default Snackbar;","import {connect} from \"react-redux\";\nimport Snackbar from \"../components/snackbar/snackbar\";\nimport {State} from \"../redux/state\";\nimport {Dispatch} from \"redux\";\nimport {closeSnackbar} from \"../redux/actions/snackbar\";\n\nfunction mapStateToProps(state: State) {\n    return {\n        open: state.snackbar.open,\n        message: state.snackbar.message\n    }\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch) {\n    return {\n        closeSnackbar: () => dispatch(closeSnackbar())\n    }\n}\n\nconst SnackbarContainer = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Snackbar);\n\nexport default SnackbarContainer;\n","import React from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\n\ntype FooterColumnData = {\n    title: string,\n    url: string\n}[]\n\ninterface FooterColumnProps {\n    data: FooterColumnData\n}\n\nconst userStyles = makeStyles((theme) => ({\n    root: {\n        listStyleType: 'none',\n        margin: 0,\n        padding: 0\n    },\n    header: {\n        fontSize: '1.25rem',\n        margin: '8px 0',\n        letterSpacing: '0',\n        fontWeight: 700\n    },\n    content: {\n        fontSize: '0.875rem',\n        padding: '2px',\n        '&:hover': {\n            color: theme.palette.secondary.main\n        }\n    }\n}));\n\nconst FooterColumn: React.FC<FooterColumnProps> = ({data}) => {\n    const classes = userStyles();\n\n    return (\n        <ul className={classes.root}>\n            {\n                data.map((item, i) => {\n                    if (i === 0) {\n                        return (\n                            <li key={i}>\n                                <div className={classes.header}>\n                                    { item.title }\n                                </div>\n                            </li>\n                        )\n                    } else {\n                        return (\n                            <li key={i}>\n                                <a href={item.url} target=\"_blank\" rel=\"noopener noreferrer\">\n                                    <div className={classes.content}>\n                                        { item.title }\n                                    </div>\n                                </a>\n                            </li>\n                            )\n                    }\n                })\n            }\n        </ul>\n    )\n};\n\nexport default FooterColumn","import React from \"react\";\nimport {Grid, Paper} from \"@material-ui/core\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Logo from \"../commons/logo\";\nimport FooterColumn from \"./footer-column\";\n\nconst column1 = [\n    {\n        title: 'Learn More',\n        url: ''\n    },\n    {\n        title: 'API Endpoints',\n        url: 'https://www.google.ca/'\n    },\n    {\n        title: 'GitHub',\n        url: 'https://github.com/CptDoraemon/discussion-board-client'\n    },\n    {\n        title: 'XiaoxiHome',\n        url: 'https://www.xiaoxihome.com/'\n    },\n];\n\nconst userStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        margin: '40px 0 8px 0'\n    },\n    paper: {\n        width: '100%',\n        backgroundColor: '#4a5568',\n        color: '#a0aec0',\n        padding: theme.spacing(5)\n    },\n    copyright: {\n        width: '100%',\n        margin: theme.spacing(5, 0, 0, 0),\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'center',\n        fontSize: '0.8rem'\n    }\n}));\n\nconst Footer: React.FC = () => {\n    const classes = userStyles();\n\n    return (\n        <footer className={classes.root}>\n            <Paper className={classes.paper}>\n                <Grid container spacing={5}>\n                    <Grid item>\n                        <Logo/>\n                    </Grid>\n                    <Grid item>\n                        <FooterColumn data={column1} />\n                    </Grid>\n                </Grid>\n                <div className={classes.copyright}>\n                    <div>\n                        © 2020 XiaoxiHome.com\n                    </div>\n                </div>\n            </Paper>\n        </footer>\n    )\n};\n\nexport default Footer","import {\n    Route,\n    Redirect\n} from \"react-router-dom\";\nimport React from \"react\";\n\ninterface PrivateRouteProps {\n    isLogin: boolean,\n    path: string\n}\n\nconst PrivateRoute: React.FC<PrivateRouteProps> = ({ children, isLogin, ...rest}) => {\n    return (\n        <Route\n            {...rest}\n            render={({ location }) =>\n                isLogin ? (\n                    children\n                ) : (\n                    <Redirect\n                        to={{\n                            pathname: \"/login\",\n                            state: { from: location }\n                        }}\n                    />\n                )\n            }\n        />\n    );\n};\n\nexport default PrivateRoute","import {useState} from \"react\";\nimport urls from \"./urls\";\nimport useFetchWithTokenVerification from \"./common/use-fetch-with-token-verification\";\n\nconst usePostSubmission = () => {\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(false);\n    const [errorMessage, setErrorMessage] = useState('');\n    const [submitted, setSubmitted] = useState(false);\n    const fetchWithTokenVerification = useFetchWithTokenVerification();\n\n    const submit = async (\n        title: string,\n        tag: string,\n        content: string,\n        objectURLArray: string[],\n        updatePostID?: number\n    ) => {\n        try {\n            if (loading || submitted) return;\n\n            // reset states\n            setError(false);\n            setErrorMessage(' ');\n            setLoading(true);\n\n            //\n            objectURLArray = removeUnusedObjectURL(content, objectURLArray);\n\n            //\n            const form = await getForm(title, tag, content, objectURLArray);\n            const url = updatePostID === undefined ? urls.createPost : urls.editPost(updatePostID);\n            const res = await fetchWithTokenVerification(true, url, {\n                method: 'POST',\n                body: form\n            });\n            const json = await res.json();\n            setLoading(false);\n            if (json.status === 'success') {\n                setSubmitted(true)\n            } else {\n                setErrorMessage(json.message);\n                setError(true)\n            }\n        } catch (e) {\n            console.log(e);\n            setLoading(false);\n            setErrorMessage('Server is not available please try again later');\n            setError(true)\n        }\n    };\n\n    return [loading, error, errorMessage, submit, submitted] as [typeof loading, typeof error, typeof errorMessage, typeof submit, typeof submitted]\n};\n\nconst removeUnusedObjectURL = (content: string, objectURLArray: string[]) => {\n    // some images may be deleted while editing\n    return objectURLArray.filter(url => content.indexOf(url) !== -1)\n};\n\ninterface NamedBlob {\n    blob: Blob,\n    name: string\n}\n\nconst getForm = (title: string, tag: string, content: string, objectURLArray: string[]) => {\n    return new Promise<FormData>((resolve, reject) => {\n        const form = new FormData();\n        form.append('title', title);\n        form.append('tag', tag);\n\n        const promiseArray = objectURLArray.map((url) => getBlobFromObjectURL(url));\n\n        Promise.all<NamedBlob>(promiseArray)\n            .then(blobs => {\n                blobs.forEach((blob, i) => {\n                    // blob name has format of:\n                    // blob:http://localhost:3000/f4d49560-de4e-420b-bcdf-64bfa833a555\n                    // use the pathname as the filename (eg: f4d49560-de4e-420b-bcdf-64bfa833a555)\n                    // replace the url in content with the new filename\n                    const urlComponents = blob.name.split('/');\n                    let filename = urlComponents[urlComponents.length - 1].length === 0 ?\n                        urlComponents[urlComponents.length - 2] :\n                        urlComponents[urlComponents.length - 1];\n\n                    content = content.replace(blob.name, filename);\n                    // file ext is .jpg because it was loaded with js, drawn in canvas ans exported as jpg\n                    form.append(`file${i}`, blob.blob, blob.name + '.jpg')\n                });\n                form.append('content', content);\n                resolve(form);\n            })\n    })\n};\n\nconst getBlobFromObjectURL = (url: string) => {\n    return new Promise<NamedBlob>((resolve, reject) => {\n        fetch(url)\n            .then(res => res.blob())\n            .then(blob => resolve({\n                blob,\n                name: url\n            }))\n            .catch((e) => reject(e))\n    })\n};\n\nexport default usePostSubmission","import {useEffect, useRef, useState} from \"react\";\nimport Quill from \"quill\";\nimport loadImage from \"blueimp-load-image\";\n\nconst useEditor = (ID: string) => {\n    const [quill, setQuill] = useState<Quill | null>(null);\n    const objectURLs = useRef<string[]>([]);\n\n    const setContent = (content: string) => {\n        if (!quill) return;\n        const delta = quill.clipboard.convert(content);\n        quill.setContents(delta)\n    };\n\n    const getObjectURLArray = () => {\n        return objectURLs.current\n    };\n\n    useEffect(() => {\n        // override methods to support objectURL\n        const Image = Quill.import('formats/image');\n        const Link = Quill.import('formats/link');\n        Image.sanitize = function(url: string) {\n            return Link.sanitize(url, ['http', 'https', 'data']) ? url : '//:0';\n        };\n        //\n        const quillInstance = new Quill(`#${ID}`, {\n            modules: {\n                toolbar: [\n                    [{header: [1, 2, false]}],\n                    ['bold', 'italic', 'underline'],\n                    ['link', 'image', 'code-block']\n                ],\n                clipboard: {\n                    matchVisual: false\n                }\n            },\n            placeholder: 'Compose an epic...',\n            theme: 'snow'  // or 'bubble'\n        });\n        quillInstance.getModule('toolbar').addHandler('image', () => imageUploadHandler(quillInstance, objectURLs.current));\n        setQuill(quillInstance);\n    }, [ID]);\n\n    return [quill, getObjectURLArray, setContent] as [typeof quill, typeof getObjectURLArray, typeof setContent]\n};\n\nconst imageUploadHandler = (editor: Quill, objectURLs: string[]) => {\n    const input = document.createElement('input');\n    input.setAttribute('type', 'file');\n    input.setAttribute('accept', 'image/*');\n    input.click();\n    input.onchange = () => {\n        if (!input.files) return;\n        const image = input.files[0];\n        loadImage(\n            image,\n             (canvas) => {\n                // @ts-ignore\n                canvas.toBlob((blob) => {\n                    const objectURL = URL.createObjectURL(blob);\n\n                    const range = editor.getSelection();\n                    const cursorPosition = range ? range.index : 0;\n                    editor.insertEmbed(cursorPosition, 'image', `${objectURL}`);\n                    editor.setSelection(cursorPosition + 1, 0, 'api');\n                    objectURLs.push(objectURL);\n                }, 'image/jpeg');\n            },\n            {\n                orientation: true,\n                canvas: true\n            }\n        );\n    }\n};\n\nexport default useEditor;\n","import {useEffect} from \"react\";\n\nconst defaultTitle = 'Blog | XiaoxiHome';\n\nfunction useSetTitle(title?: string) {\n\n    useEffect(() => {\n        document.title = title || defaultTitle;\n\n        return () => {\n            document.title = defaultTitle;\n        }\n    }, [title]);\n}\n\nexport default useSetTitle;","import urls from \"./urls\";\nimport useSetTitle from \"../utils/use-set-title\";\nimport useProtectedGet from \"./common/use-protected-get\";\nimport {useMemo} from \"react\";\nimport {CommentData} from \"../components/post-detail/comment-item\";\n\nexport interface PostDetailData {\n    id: string,\n    owner: {\n        email: string,\n        username: string,\n        avatar_url: string\n    }\n    likes: number,\n    dislikes: number,\n    comments: number,\n    comments_data: CommentData[]\n    title: string,\n    content: string,\n    created: string,\n    tag: string,\n    is_liked: 0 | 1 | -1 | undefined,\n    is_owner?: boolean,\n    view_count: number\n}\n\nconst useGetPostDetail = () => {\n    const {\n        loading,\n        error,\n        data,\n        doGet,\n    } = useProtectedGet<PostDetailData>('', false, false);\n\n    useSetTitle(data?.title);\n\n    const fetchPostDetail = useMemo(() => {\n        return (\n          postID: number\n        ) => {\n            doGet(urls.getPostDetail(postID), false);\n        };\n    }, []);\n\n    return [loading, error, data, fetchPostDetail] as [typeof loading, typeof error, typeof data, typeof fetchPostDetail]\n\n};\n\nexport default useGetPostDetail\n","import React from \"react\";\nimport {FormControl} from \"@material-ui/core\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {fade} from \"@material-ui/core/styles/colorManipulator\";\nimport {TagList} from \"../../requests/use-get-tag-list\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        textTransform: 'capitalize',\n        backgroundColor: fade(theme.palette.primary.main, 0.8),\n        color: theme.palette.primary.contrastText,\n        borderRadius: 5,\n        padding: '5px 15px',\n        '&:focus': {\n            backgroundColor: fade(theme.palette.primary.main, 0.8),\n            color: theme.palette.primary.contrastText,\n            borderRadius: 5,\n        },\n    },\n    icon: {\n        color: theme.palette.primary.contrastText,\n    },\n    menuItemRoot: {\n        textTransform: 'capitalize',\n        '&:hover': {\n            backgroundColor: theme.palette.primary.main,\n        },\n        '&:focus': {\n            backgroundColor: theme.palette.primary.main,\n        }\n    },\n    menuRoot: {\n        backgroundColor: theme.palette.primary.light,\n        color: theme.palette.primary.contrastText,\n        borderRadius: 5,\n    }\n}));\n\ninterface TagSelectorProps {\n    tagList: TagList,\n    tagValue: string,\n    tagChangeHandler: (e: any) => void\n}\n\nconst TagSelector: React.FC<TagSelectorProps> = ({tagList, tagValue, tagChangeHandler}) => {\n    const classes = useStyles();\n\n    return (\n        <Select\n            value={tagValue}\n            onChange={tagChangeHandler}\n            displayEmpty\n            disableUnderline\n            classes={{\n                root: classes.root,\n                icon: classes.icon\n            }}\n            MenuProps={{\n                classes: {\n                    paper: classes.menuRoot,\n                }\n            }}\n        >\n            {\n                tagList.map(obj => {\n                    const tag = obj.tag;\n                    return (\n                        <MenuItem\n                            value={tag}\n                            key={tag}\n                            classes={{\n                                root: classes.menuItemRoot\n                            }}\n                        >{tag.toLowerCase()}</MenuItem>\n                        )\n                })\n            }\n        </Select>\n    )\n};\n\nexport default TagSelector\n","import React, {FormEvent, useEffect, useRef, useState} from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport 'quill/dist/quill.snow.css';\nimport {FormControl, FormHelperText, Input, InputLabel, Paper} from \"@material-ui/core\";\nimport useInputField from \"../../utils/use-input-field\";\nimport {postTitleValidator} from \"../../utils/validators\";\nimport {GenericClickButton} from \"../commons/generic-button\";\nimport usePostSubmission from \"../../requests/use-post-submission\";\nimport ErrorMessage from \"../commons/error-message\";\nimport useEditor from \"./use-editor\";\nimport useGetPostDetail from \"../../requests/use-get-post-detail\";\nimport Box from \"@material-ui/core/Box\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport useGetTagList, {TagList} from \"../../requests/use-get-tag-list\";\nimport TagSelector from \"./tag-selector\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        padding: theme.spacing(2)\n    },\n    editor: {\n        width: '100%',\n        minHeight: '300px',\n        marginBottom: '16px',\n    },\n    title: {\n        width: '100%',\n    }\n}));\n\nconst PostEditor: React.FC = () => {\n    const classes = useStyles();\n    const {postID} = useParams();\n    const [needData, setNeedData] = useState(true);\n    const [postDetailLoading, postDetailError, postDetailData, fetchPostDetail] = useGetPostDetail();\n    const [tagListLoading, tagListError, tagList] = useGetTagList();\n\n    useEffect(() => {\n        if (postID === undefined) {\n            setNeedData(false)\n        } else {\n            fetchPostDetail(parseInt(postID))\n        }\n    }, [postID, fetchPostDetail]);\n\n    const showEditor = (!needData || postDetailData !== null) && tagList !== null;\n\n    return (\n        <Paper className={classes.root} elevation={0}>\n            {\n                !showEditor &&\n                    <Box width={\"100%\"} height={500} display={\"flex\"} flexDirection={\"column\"} alignItems={\"center\"} justifyContent={\"center\"}>\n                        {\n                            postDetailError || tagListError ?\n                                \"Cannot retrieve post data at the moment\" :\n                                <CircularProgress color=\"primary\" />\n                        }\n                    </Box>\n            }\n            {\n                !needData && showEditor &&\n                    <PostEditorForm tagList={tagList || []}/>\n            }\n            {\n                postDetailData !== null && showEditor &&\n                    <PostEditorForm\n                        tagList={tagList || []}\n                        updatePost={{\n                            title: postDetailData.title,\n                            content: postDetailData.content,\n                            postID: parseInt(postDetailData.id),\n                            tag: postDetailData.tag\n                        }}\n                    />\n            }\n        </Paper>\n    )\n};\n\ninterface PostEditorFormProps {\n    updatePost?: {\n        title: string,\n        content: string,\n        postID: number,\n        tag: string\n    },\n    tagList: TagList\n}\n\nconst ID = 'editor';\nconst PostEditorForm: React.FC<PostEditorFormProps> = ({updatePost, tagList}) => {\n    // create new post if updatePost === undefined\n    // else update existing post\n    const classes = useStyles();\n\n    const defaultTitle = updatePost === undefined ? \"\" : updatePost.title;\n    const defaultTag = updatePost === undefined ? tagList[0].tag : updatePost.tag;\n    const [editor, getObjectURLArray, setContent] = useEditor(ID);\n    const [title, titleChangeHandler, titleError, titleErrorMessage, validateTitle] = useInputField(defaultTitle, postTitleValidator);\n    const [tag, setTag] = useState<string>(defaultTag);\n    const [loading, error, errorMessage, submit, submitted] = usePostSubmission();\n\n    const isEditorHydrated = useRef(false);\n    useEffect(() => {\n        if (!editor || updatePost === undefined) return;\n        if (isEditorHydrated.current) return;\n        setContent(updatePost.content);\n        isEditorHydrated!.current = true;\n    }, [editor, setContent, updatePost]);\n\n    const submitHandler = (e: FormEvent) => {\n        e.preventDefault();\n        if (!validateTitle()) return;\n\n        if (!editor) return;\n        if (updatePost === undefined) {\n            submit(title, tag, editor.root.innerHTML, getObjectURLArray())\n        } else {\n            submit(title, tag, editor.root.innerHTML, getObjectURLArray(), updatePost.postID)\n        }\n    };\n\n    const tagChangeHandler = (e: any) => {\n        setTag(e.target.value)\n    };\n\n    return (\n        <form>\n            <FormControl className={classes.title}>\n                <InputLabel htmlFor=\"post-editor-title\">Title</InputLabel>\n                <Input\n                    id=\"post-editor-title\"\n                    aria-describedby=\"post-editor-title-helper-text\"\n                    value={title}\n                    onChange={titleChangeHandler}\n                />\n                <FormHelperText id=\"post-editor-title-helper-text\" error={titleError}>{titleError && titleErrorMessage ? titleErrorMessage : ' '}</FormHelperText>\n            </FormControl>\n\n            <Box mb={2}>\n                {'Tag: '}\n                <TagSelector tagList={tagList} tagValue={tag} tagChangeHandler={tagChangeHandler}/>\n            </Box>\n\n            <div id={ID} className={classes.editor}/>\n            <GenericClickButton onClick={submitHandler} width={'250px'} text={submitted ? 'Submitted' : 'Submit'} disabled={submitted || loading}/>\n            <Box mt={1}>\n                <ErrorMessage loading={loading} error={error} errorMessage={errorMessage} spinnerSize={25}/>\n            </Box>\n        </form>\n    )\n};\n\nexport default PostEditor\n","import {useHistory, useLocation} from \"react-router-dom\";\n\nconst useReload = () => {\n    const history = useHistory();\n    const location = useLocation();\n\n    const reload = () => {\n        history.replace('/');\n        history.replace(location)\n    };\n\n    return reload\n};\n\nexport default useReload","import urls from \"./urls\";\nimport useReload from \"../utils/redirects/use-reload\";\nimport usePost from \"./common/use-post\";\n\nconst useCommentSubmission = () => {\n    const reload = useReload();\n    const {\n        loading,\n        error,\n        errorMessage,\n        doPost\n    } = usePost();\n\n    const submit = (\n        content: string,\n        parentPost: string,\n        parentComment: string | null\n    ) => {\n        const options = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                'content': content,\n                'parent_post': parentPost,\n                'parent_comment': parentComment\n            })\n        };\n        doPost(urls.createComment, options, true, reload);\n    };\n\n    return [loading, error, errorMessage, submit] as [typeof loading, typeof error, typeof errorMessage, typeof submit]\n};\n\nexport default useCommentSubmission","import {TextField} from \"@material-ui/core\";\nimport {GenericClickButton} from \"../commons/generic-button\";\nimport ErrorMessage from \"../commons/error-message\";\nimport React, {FormEvent} from \"react\";\nimport useInputField from \"../../utils/use-input-field\";\nimport {commentValidator} from \"../../utils/validators\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport useCommentSubmission from \"../../requests/use-comment-submission\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        margin: '16px 0'\n    },\n    input: {\n        width: '100%',\n    }\n}));\n\ninterface CommentInputProps {\n    parentPost: string,\n    parentComment: string | null\n}\n\nconst CommentInput: React.FC<CommentInputProps> = ({parentPost, parentComment}) => {\n    const classes = useStyles();\n    const [comment, commentChangeHandler, commentError, commentErrorMessage, validateComment] = useInputField('', commentValidator);\n    const [loading, error, errorMessage, submit] = useCommentSubmission();\n\n    const submitHandler = (e: FormEvent) => {\n        e.preventDefault();\n\n        if (!validateComment()) return;\n        submit(comment, parentPost, parentComment)\n    };\n\n    return (\n        <form className={classes.root}>\n            <TextField\n                id=\"comment-input\"\n                label=\"Leave comment\"\n                name=\"comment\"\n                value={comment}\n                onChange={commentChangeHandler}\n                error={commentError}\n                helperText={commentError && commentErrorMessage ? commentErrorMessage : ' '}\n                variant=\"outlined\"\n                className={classes.input}\n            />\n\n            <GenericClickButton onClick={submitHandler} width={'250px'} text={'Submit'} disabled={loading}/>\n            {\n                error && errorMessage &&\n                <ErrorMessage loading={loading} error={error} errorMessage={errorMessage}/>\n            }\n        </form>\n    )\n};\n\nexport default CommentInput","import Avatar from \"@material-ui/core/Avatar\";\nimport getTimeString from \"../../utils/get-time-string\";\nimport LikeButtons from \"../commons/like-buttons\";\nimport React from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport ChromeReaderModeIcon from '@material-ui/icons/ChromeReaderMode';\nimport {Tooltip} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n    postInfo: {\n        width: '100%',\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'flex-start',\n        color: theme.palette.grey[500],\n        fontWeight: 700,\n        [theme.breakpoints.down('md')]: {\n            flexDirection: 'column',\n            alignItems: 'flex-start',\n            justifyContent: 'center',\n        }\n    },\n    avatar: {\n        backgroundColor: theme.palette.primary.main\n    },\n    avatarSmall: {\n        width: '1.2rem',\n        height: '1.2rem',\n        fontSize: '0.8rem'\n    },\n    username: {\n        color: theme.palette.text.primary\n    },\n    postInfoItem: {\n        margin: theme.spacing(0, 2),\n        [theme.breakpoints.down('md')]: {\n            margin: '4px 0',\n        }\n    },\n    iconTextItem: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'center',\n        color: theme.palette.grey[400],\n        '& p': {\n            margin: theme.spacing(0, 1),\n            color: theme.palette.grey[500],\n        }\n    }\n}));\n\ninterface ItemInfoProps {\n    type: 'comment' | 'post',\n    isLogin: boolean,\n    username: string,\n    avatarUrl: string\n    created: string,\n    id: string,\n    likes: number,\n    dislikes: number,\n    isLiked: -1 | 0 | 1 | undefined,\n    viewCount?: number,\n    small?: boolean\n}\n\nconst ItemInfo: React.FC<ItemInfoProps> = ({type, isLogin, username, avatarUrl, created, id, likes, dislikes, isLiked, small, viewCount}) => {\n    const classes = useStyles();\n    const _isLiked = isLogin ? isLiked : undefined;\n\n    return (\n        <div className={classes.postInfo}>\n            <div className={classes.postInfoItem}>\n                <Avatar\n                    variant=\"rounded\"\n                    className={small ? `${classes.avatar} ${classes.avatarSmall}` : classes.avatar}\n                    src={avatarUrl}\n                >\n                    { username.charAt(0) }\n                </Avatar>\n            </div>\n            <div className={`${classes.postInfoItem} ${classes.username}`}>\n                { username }\n            </div>\n            <div className={classes.postInfoItem}>\n                { getTimeString(created) }\n            </div>\n            <div className={classes.postInfoItem}>\n                <LikeButtons type={type} id={id} likes={likes} dislikes={dislikes} isLiked={_isLiked}/>\n            </div>\n            {\n                viewCount !== undefined &&\n                <div className={classes.postInfoItem}>\n                    <Tooltip title=\"Page View\" aria-label=\"Page View\">\n                        <div className={classes.iconTextItem}>\n                            <ChromeReaderModeIcon/>\n                            <p>{viewCount}</p>\n                        </div>\n                    </Tooltip>\n                </div>\n            }\n        </div>\n    )\n};\n\nexport default ItemInfo\n","import React from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport ItemInfo from \"./item-info\";\nimport {SubCommentData} from \"./comment-item\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        // margin: theme.spacing(2, 0),\n        width: '100%',\n    },\n    content: {\n        margin: '32px'\n    },\n}));\n\ninterface SubCommentItemProps {\n    isLogin: boolean,\n    data: SubCommentData\n}\n\nconst SubCommentItem: React.FC<SubCommentItemProps> = ({isLogin, data}) => {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <ItemInfo\n                type={'comment'}\n                isLogin={isLogin}\n                username={data.owner.username}\n                avatarUrl={data.owner.avatar_url}\n                created={data.created}\n                id={data.id}\n                likes={data.likes}\n                dislikes={data.dislikes}\n                isLiked={data.is_liked}\n                small\n            />\n            <div className={classes.content}>\n                { data.content }\n            </div>\n        </div>\n    )\n\n};\n\nexport default SubCommentItem","import React, {useState} from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Box, Fade, Paper} from \"@material-ui/core\";\nimport ItemInfo from \"./item-info\";\nimport ChatIcon from '@material-ui/icons/Chat';\nimport Button from \"@material-ui/core/Button\";\nimport SubCommentItem from \"./sub-comment-item\";\nimport CommentInput from \"./comment-input\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        margin: '20px 0',\n        width: '100%',\n        padding: theme.spacing(2)\n    },\n    content: {\n        margin: '32px'\n    },\n    commentButton: {\n        margin: '0 32px',\n        color: theme.palette.grey[500],\n    },\n    subCommentPanel: {\n        width: 'calc(100% - 32px)',\n        margin: '8px 0 8px 32px',\n        border: `1px solid ${theme.palette.grey[400]}`,\n        borderRadius: '5px',\n        padding: theme.spacing(2)\n    }\n}));\n\ninterface CommentBaseData {\n    id: string,\n    owner: {\n        username: string,\n        email: string,\n        avatar_url: string\n    }\n    likes: number,\n    dislikes: number,\n    content: string,\n    created: string,\n    is_liked: 0 | 1 | -1 | undefined,\n    is_owner?: boolean\n}\n\nexport interface CommentData extends CommentBaseData {\n    sub_comments: CommentBaseData[]\n}\n\nexport interface SubCommentData extends CommentBaseData {}\n\n\ninterface CommentItemProps {\n    data: CommentData,\n    postID: string,\n    isLogin: boolean\n}\n\nconst CommentItem: React.FC<CommentItemProps> = ({data, postID, isLogin}) => {\n    const classes = useStyles();\n\n    const [isCommentPanelOpen, setIsCommentPanelOpen] = useState(false);\n\n    return (\n        <Paper className={classes.root} elevation={0}>\n            <ItemInfo\n                type={'comment'}\n                isLogin={isLogin}\n                username={data.owner.username}\n                avatarUrl={data.owner.avatar_url}\n                created={data.created}\n                id={data.id}\n                likes={data.likes}\n                dislikes={data.dislikes}\n                isLiked={data.is_liked}\n                small\n            />\n            <div className={classes.content}>\n                { data.content }\n            </div>\n            <Button\n                variant=\"outlined\"\n                className={classes.commentButton}\n                disableElevation\n                startIcon={<ChatIcon />}\n                onClick={() => setIsCommentPanelOpen(prev => !prev)}\n                size={'small'}\n            >\n                { data.sub_comments.length }\n            </Button>\n\n            {\n                isCommentPanelOpen &&\n                <Fade in={isCommentPanelOpen} timeout={1000}>\n                    <div className={classes.subCommentPanel}>\n                        { !data.sub_comments.length && <Box textAlign={'center'}>No comment yet</Box> }\n                        { data.sub_comments.map((item, i) => <SubCommentItem isLogin={isLogin} data={item} key={i}/>) }\n                        { isLogin && <CommentInput parentPost={postID} parentComment={data.id}/> }\n                    </div>\n                </Fade>\n            }\n        </Paper>\n    )\n\n};\n\nexport default CommentItem\n","import React from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Link, useLocation} from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n    link: {\n        '&:link': {\n            color: theme.palette.primary.main\n        },\n        '&:visited': {\n            color: theme.palette.primary.main\n        },\n        '&:hover': {\n            color: theme.palette.secondary.main\n        }\n    }\n}));\n\ninterface ButtonProps {\n    text: string,\n    to: string,\n    fromState: boolean // pass state.from = location.pathname to Link to object if true\n}\n\nconst ThemeLink: React.FC<ButtonProps> = ({text, to, fromState}) => {\n    const classes = useStyles();\n    const location = useLocation();\n\n    const _to = fromState ?\n        {\n            pathname: to,\n            state: {\n                from: location.pathname\n            }\n        } :\n        to;\n\n\n    return (\n        <Link to={_to} className={classes.link}>{text}</Link>\n    )\n};\n\nexport default ThemeLink\n","import React from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Box, Divider, Paper} from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CommentInput from \"./comment-input\";\nimport CommentItem, {CommentData} from \"./comment-item\";\nimport ThemeLink from \"../commons/theme-link\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        margin: '60px 0',\n        width: '100%',\n    },\n    paper: {\n        width: '100%',\n        padding: theme.spacing(4)\n    },\n    loginToLeaveMessage: {\n        width: '100%',\n        height: '200px',\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'center',\n        fontWeight: 700,\n        color: theme.palette.grey[600]\n    }\n}));\n\ninterface CommentListProps {\n    isLogin: boolean,\n    comments: number,\n    postID: string,\n    data: CommentData[]\n}\n\nconst CommentList: React.FC<CommentListProps> = ({isLogin, comments, postID, data}) => {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <Paper className={classes.paper} elevation={0}>\n                <Typography variant={'body1'} component={'div'}>\n                    <Box fontWeight={700}>\n                        { `${comments} ${comments > 1 ? 'comments' : 'comment'}` }\n                    </Box>\n                </Typography>\n                <Divider />\n            </Paper>\n\n                {\n                    data.map((itemData, i) => <CommentItem data={itemData} postID={postID} key={i} isLogin={isLogin}/>)\n                }\n\n            <Paper className={classes.paper} elevation={0}>\n                {\n                    isLogin ?\n                        <CommentInput parentPost={postID} parentComment={null}/> :\n                        <div className={classes.loginToLeaveMessage}>\n                            <span>\n                                <ThemeLink text={'Login'} to={'/login'} fromState/>\n                                {` to leave a comment`}\n                            </span>\n                        </div>\n                }\n            </Paper>\n        </div>\n    )\n\n};\n\nexport default CommentList","import {makeStyles} from \"@material-ui/core/styles\";\n\nconst useInsertedHTMLStyle = makeStyles((theme) => ({\n    root: {\n        display: 'column',\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'center',\n        color: theme.palette.text.primary,\n        whiteSpace: 'normal',\n        overflowWrap: 'break-word',\n        '& pre': {\n            whiteSpace: 'pre-wrap',\n            wordWrap: 'break-word'\n        },\n        '& a': {\n            wordWrap: 'break-word',\n            background: `linear-gradient(to bottom, ${theme.palette.primary.light} 0%, ${theme.palette.primary.light} 100%)`,\n            backgroundPosition: '0 100%',\n            backgroundRepeat: 'repeat-x',\n            backgroundSize: '4px 4px',\n            transition: theme.transitions.create(['background-size', 'color']),\n        },\n        '& a:hover': {\n            backgroundSize: '4px 100%',\n            color: theme.palette.primary.contrastText,\n        },\n        '& img': {\n            maxWidth: '100%',\n            maxHeight: '600px',\n            display: 'block',\n            margin: '4px auto'\n        },\n        '& p': {\n\n        }\n        // '& h1': {\n        //     fontSize: '3rem',\n        //     fontWeight: 700\n        // },\n        // '& h2': {\n        //     fontSize: '2.5rem',\n        //     fontWeight: 700\n        // },\n        // '& h3': {\n        //     fontSize: '2rem',\n        //     fontWeight: 700\n        // },\n        // '& h4': {\n        //     fontSize: '1.5rem',\n        //     fontWeight: 700\n        // },\n        // '& h5': {\n        //     fontSize: '1.5rem',\n        //     fontWeight: 700\n        // },\n        // '& p, span': {\n        //     fontSize: '1.25rem',\n        //     lineHeight: 1.5,\n        // }\n    }\n}));\n\nexport default useInsertedHTMLStyle","import {useDispatch} from \"react-redux\";\nimport urls from \"./urls\";\nimport {openSnackbar} from \"../redux/actions/snackbar\";\nimport {useHistory} from \"react-router-dom\";\nimport usePost from \"./common/use-post\";\nimport GENERIC_ERROR_MESSAGE from \"./common/generic-error-message\";\n\nconst useDelete = () => {\n    const dispatch = useDispatch();\n    let history = useHistory();\n\n    const {\n        loading,\n        error,\n        doPost\n    } = usePost();\n\n    const deletePost = async (\n        id: number\n    ) => {\n        const options = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        };\n        const successCallback = () => {\n            history.replace('/');\n            dispatch(openSnackbar('Post deleted'));\n        };\n        const errorCallback = (message: string) => {\n            dispatch(openSnackbar(message || GENERIC_ERROR_MESSAGE));\n        };\n        const unknownErrorCallback = () => {\n            dispatch(openSnackbar(GENERIC_ERROR_MESSAGE));\n        };\n\n        doPost(urls.deletePost(id), options, true, successCallback, errorCallback, unknownErrorCallback);\n    };\n\n    return [loading, error, deletePost] as [typeof loading, typeof error, typeof deletePost]\n};\n\nexport default useDelete","import IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport React, {useState} from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Tooltip} from \"@material-ui/core\";\nimport useDelete from \"../../requests/use-delete\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\n\nconst useStyles = makeStyles((theme) => ({\n    button: {\n        color: theme.palette.warning.light,\n        fontSize: '1.25rem',\n        \"&:hover\": {\n            color: theme.palette.warning.main\n        },\n        \"&:focus\": {\n            color: theme.palette.warning.main\n        }\n    },\n    confirmButton: {\n        color: theme.palette.warning.main\n    }\n}));\n\ninterface DeleteButtonProps {\n    id: number\n}\n\nconst DeleteButton: React.FC<DeleteButtonProps> = ({id}) => {\n    const classes = useStyles();\n    const [loading, error, deletePost] = useDelete();\n    const [dialog, setDialog] = useState(false);\n\n    const openDialog = () => {\n        setDialog(true)\n    };\n\n    const closeDialog = () => {\n        setDialog(false)\n    };\n\n    const doDeletePost = () => {\n        deletePost(id)\n    };\n\n    return (\n        <>\n            <Tooltip title=\"Delete\" aria-label=\"delete\">\n                <IconButton\n                    aria-label={`delete`}\n                    className={classes.button}\n                    disabled={loading}\n                    onClick={openDialog}\n                >\n                    <DeleteIcon/>\n                </IconButton>\n            </Tooltip>\n            <Dialog\n                open={dialog}\n                onClose={closeDialog}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n            >\n                <DialogTitle id=\"alert-dialog-title\">Are you sure to delete this post?</DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\">\n                        It will not be possible to recover this post once deleted.\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={closeDialog} color=\"primary\">\n                        Forget it\n                    </Button>\n                    <Button onClick={doDeletePost} autoFocus disabled={loading} className={classes.confirmButton}>\n                        I'm sure\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </>\n    )\n};\n\nexport default DeleteButton","import IconButton from \"@material-ui/core/IconButton\";\nimport EditIcon from '@material-ui/icons/Edit';\nimport React from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Tooltip} from \"@material-ui/core\";\nimport {Link} from \"react-router-dom\";\nimport Box from \"@material-ui/core/Box\";\n\nconst useStyles = makeStyles((theme) => ({\n    textColor: {\n        color: theme.palette.success.light,\n    },\n    button: {\n        fontSize: '1.25rem',\n        \"&:hover\": {\n            color: theme.palette.success.main\n        },\n        \"&:focus\": {\n            color: theme.palette.success.main\n        }\n    },\n}));\n\ninterface EditButtonProps {\n    id: number\n}\n\nconst EditButton: React.FC<EditButtonProps> = ({id}) => {\n    const classes = useStyles();\n\n    return (\n        <Tooltip title=\"Edit\" aria-label=\"edit\">\n            <Box className={classes.textColor}>\n                <IconButton\n                    aria-label={`edit`}\n                    component={Link}\n                    to={`/edit-post/${id}`}\n                    classes={{\n                        root: classes.button\n                    }}\n                >\n                    <EditIcon/>\n                </IconButton>\n            </Box>\n        </Tooltip>\n    )\n};\n\nexport default EditButton","import React, {useEffect, useRef} from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Paper} from \"@material-ui/core\";\nimport { useParams } from \"react-router-dom\";\nimport useGetPostDetail from \"../../requests/use-get-post-detail\";\nimport {Skeleton} from \"@material-ui/lab\";\nimport CommentList from \"./comment-list\";\nimport ItemInfo from \"./item-info\";\nimport Box from \"@material-ui/core/Box\";\nimport useInsertedHTMLStyle from \"./inserted-html-style\";\nimport DeleteButton from \"../commons/delete-button\";\nimport EditButton from \"../commons/edit-button\";\nimport TagChip from \"../commons/tag-chip/tag-chip\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        margin: theme.spacing(1, 0, 0, 0)\n    },\n    paper: {\n        width: '100%',\n        padding: theme.spacing(4)\n    },\n    loading: {\n        width: '100%',\n        height: '500px',\n    },\n    center: {\n        width: '100%',\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'center'\n    }\n}));\n\ninterface PostDetailProps {\n    isLogin: boolean\n}\n\nconst PostDetail: React.FC<PostDetailProps> = ({isLogin}) => {\n    const classes = useStyles();\n    const insertedHTMLClasses = useInsertedHTMLStyle();\n    const HTMLStringContainerRef = useRef<HTMLDivElement>(null);\n\n    const { postID } = useParams();\n    const [loading, error, data, fetchPostDetail] = useGetPostDetail();\n    useEffect(() => {\n        fetchPostDetail(parseInt(postID || '1'))\n    }, []);\n\n    let content;\n    if (loading) {\n        content = (\n            <div className={classes.loading}>\n                <Skeleton variant=\"rect\" width={'100%'} height={'100%'}/>\n            </div>\n        )\n    } else if (error) {\n        content = (\n            <Box className={classes.center} height={500}>\n                <h1>Server error</h1>\n            </Box>\n        )\n    } else if (data) {\n        content = (\n            <>\n                <Paper className={classes.paper} elevation={0}>\n                    <Box width={'100%'}>\n                        <TagChip text={data.tag} size={'normal'}/>\n                    </Box>\n                    <h1> {data.title} </h1>\n                    <ItemInfo\n                        type={'post'}\n                        isLogin={isLogin}\n                        username={data.owner.username}\n                        avatarUrl={data.owner.avatar_url}\n                        created={data.created}\n                        id={data.id}\n                        likes={data.likes}\n                        dislikes={data.dislikes}\n                        isLiked={data.is_liked}\n                        viewCount={data.view_count}\n                    />\n                    <Box className={classes.center} my={2}>\n                        {\n                            isLogin && data.is_owner &&\n                                <>\n                                    <DeleteButton id={parseInt(data.id)}/>\n                                    <EditButton id={parseInt(data.id)}/>\n                                </>\n                        }\n                    </Box>\n                    <Box width={'100%'} height={'40px'}> </Box>\n                    <div dangerouslySetInnerHTML={{__html: data.content}} className={insertedHTMLClasses.root} ref={HTMLStringContainerRef}/>\n                </Paper>\n                <CommentList comments={data.comments} isLogin={isLogin} postID={data.id} data={data.comments_data}/>\n            </>\n        )\n    }\n\n    return (\n        <div className={classes.root}>\n            { content }\n        </div>\n    )\n\n};\n\nexport default PostDetail\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function RouterScrollRestoration() {\n    const { pathname, search } = useLocation();\n\n    useEffect(() => {\n        window.scrollTo(0, 0);\n    }, [pathname, search]);\n\n    return null;\n}\n","import React from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Box, Paper, Typography} from \"@material-ui/core\";\n\ninterface SectionTitleProps {\n    sectionTitle: string\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        minHeight: '100px',\n    },\n    sectionTitle: {\n        width: '100%',\n        padding: theme.spacing(1, 2),\n        backgroundColor: theme.palette.primary.light,\n        fontWeight: 700,\n        color: '#fff'\n    },\n    content: {\n        width: '100%',\n        padding: theme.spacing(2),\n    }\n}));\n\nconst SectionWrapper: React.FC<SectionTitleProps> = ({children, sectionTitle}) => {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <Typography variant={'body1'} component={'h3'}>\n                <Box className={classes.sectionTitle}>\n                    { sectionTitle }\n                </Box>\n            </Typography>\n            <div className={classes.content}>\n                { children }\n            </div>\n        </div>\n    )\n};\n\nexport default SectionWrapper","import {Crop} from \"react-image-crop\";\n// import EXIF from \"exif-js/exif\";\n\nconst SIZE = 800;\n\nfunction getCroppedImg(image: HTMLImageElement, crop: Crop, scale: number, fileName: string) {\n    const [x, y, width, height] = [crop.x, crop.y, crop.width, crop.height].map(_ => _ === undefined ? 1 : _);\n\n    const canvas = document.createElement('canvas');\n    canvas.width = SIZE;\n    canvas.height = SIZE;\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return null;\n\n    // As Base64 string\n    // const base64Image = canvas.toDataURL('image/jpeg');\n\n    // As a blob\n    return new Promise<Blob>(async (resolve, reject) => {\n        try {\n            // await rotateAsPerExif(image, ctx, canvas.width, canvas.height);\n            ctx.drawImage(\n                image,\n                x * scale,\n                y * scale,\n                width * scale,\n                height * scale,\n                0,\n                0,\n                SIZE,\n                SIZE,\n            );\n            canvas.toBlob(blob => {\n                if (blob) {\n                    resolve(blob);\n                }\n            }, 'image/jpeg', 1);\n        } catch (e) {\n            throw e\n        }\n    });\n}\n\n// const rotateAsPerExif = (image: HTMLImageElement, ctx: CanvasRenderingContext2D, canvasWidth: number, canvasHeight: number) => {\n//     return new Promise((resolve, reject) => {\n//         // @ts-ignore\n//         EXIF.getData(image, function(this: HTMLImageElement) {\n//             console.log(ctx)\n//             const orientation = EXIF.getTag(this,\"Orientation\");\n//             switch (orientation) {\n//                 case 2: ctx.translate(canvasWidth, 0);     ctx.scale(-1,1); break;\n//                 case 3: ctx.translate(canvasWidth,canvasHeight); ctx.rotate(Math.PI); break;\n//                 case 4: ctx.translate(0,canvasHeight);     ctx.scale(1,-1); break;\n//                 case 5: ctx.rotate(0.5 * Math.PI);   ctx.scale(1,-1); break;\n//                 case 6:\n//                     ctx.rotate(0.5 * Math.PI);\n//                     ctx.translate(0,-canvasHeight);\n//                     break;\n//                 case 7: ctx.rotate(0.5 * Math.PI);   ctx.translate(canvasWidth,-canvasHeight); ctx.scale(-1,1); break;\n//                 case 8: ctx.rotate(-0.5 * Math.PI);  ctx.translate(-canvasWidth,0); break;\n//             }\n//             resolve()\n//         })\n//     })\n// };\n\nexport default getCroppedImg","import React, {useEffect, useMemo, useRef, useState} from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {GenericClickButton} from \"../../commons/generic-button\";\nimport {Box} from \"@material-ui/core\";\nimport ReactCrop, {Crop} from 'react-image-crop';\nimport 'react-image-crop/dist/ReactCrop.css';\nimport ErrorMessage from \"../../commons/error-message\";\nimport getCroppedImg from \"./get-cropped-image\";\nimport useUpdateAvatar from \"../../../requests/use-update-avatar\";\nimport useResizeImage, {getWidthHeight} from \"./use-resize-image\";\nimport loadImage from 'blueimp-load-image'\n\nenum Stage {\n    'UPLOAD' = 'UPLOAD',\n    'CROP' = 'CROP',\n    'CONFIRM' = 'CONFIRM',\n    'FINISH' = 'FINISH'\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center'\n    },\n    row: {\n        width: '100%',\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'flex-start'\n    },\n    backNextButtons: {\n        width: '100%',\n        margin: theme.spacing(1, 0),\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'space-between'\n    },\n    centering: {\n        width: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center'\n    }\n}));\n\ninterface FinishStageProps {\n    restart: () => void\n}\n\nconst FinishStage: React.FC<FinishStageProps> = ({restart}) => {\n    const classes = useStyles();\n\n    return (\n        <>\n            <div className={classes.backNextButtons}>\n                <GenericClickButton onClick={restart} width={'150px'} text={'Start Again'}/>\n            </div>\n            <div className={'centering'}>\n                <Box fontWeight={700} my={2}>\n                    All set\n                </Box>\n            </div>\n        </>\n    )\n};\n\ninterface ConfirmStageProps {\n    blob: Blob | null,\n    back: () => void,\n    next: () => void,\n}\n\nconst ConfirmStage: React.FC<ConfirmStageProps> = ({blob, back, next}) => {\n    const classes = useStyles();\n\n    const [loading, error, errorMessage, upload] = useUpdateAvatar();\n    const containerRef = useRef<HTMLDivElement>(null);\n    const src = useMemo(() => {\n        return URL.createObjectURL(blob)\n    }, [blob]);\n    const [imgWidth, imgHeight] = useResizeImage(containerRef, src);\n\n    const GoNext = async () => {\n        try {\n            if (blob) {\n                const uploaded = await upload(blob);\n                if (uploaded) {\n                    next();\n                }\n            }\n        } catch (e) {}\n    };\n\n    return (\n        <>\n            <div className={classes.backNextButtons}>\n                <Box>\n                    <GenericClickButton onClick={back} width={'150px'} text={'Redo Cropping'}/>\n                </Box>\n                <Box>\n                    <GenericClickButton onClick={GoNext} width={'150px'} text={'Update Avatar'} disabled={loading}/>\n                </Box>\n            </div>\n            <ErrorMessage loading={loading} error={error} errorMessage={errorMessage}/>\n            {\n                !loading &&\n                <div className={classes.centering} ref={containerRef}>\n                    <img\n                        src={src}\n                        alt={'cropped'}\n                        style={{\n                            width: imgWidth,\n                            height: imgHeight\n                        }}/>\n                </div>\n            }\n        </>\n    )\n};\n\ninterface CropStageProps {\n    src: string,\n    back: () => void,\n    next: (blob: Blob) => void\n}\n\nconst CropStage: React.FC<CropStageProps> = ({src, back, next}) => {\n    const classes = useStyles();\n    const [error, setError] = useState(false);\n    const [image, setImage] = useState<HTMLImageElement | null>(null);\n    const [crop, setCrop] = useState<Crop>({});\n    const cropperWrapperRef = useRef<HTMLDivElement>(null);\n    const [cropperSize, setCropperSize] = useState({\n        width: 1,\n        height: 1\n    });\n\n    const goNext = async () => {\n        try {\n            if (!image) return;\n            const croppedSrc = await getCroppedImg(image, crop, image.naturalWidth / cropperSize.width, ' ');\n            if (croppedSrc) {\n                next(croppedSrc);\n            }\n        } catch (e) {\n            console.log(e);\n        }\n    };\n\n    const handleImageLoaded = (image: HTMLImageElement) => {\n        setImage(image);\n        if (cropperWrapperRef.current) {\n            const [width, height] = getWidthHeight(\n                cropperWrapperRef.current.getBoundingClientRect().width,\n                image.naturalWidth,\n                image.naturalHeight\n            );\n            setCropperSize({\n                width,\n                height\n            });\n        }\n    };\n\n    useEffect(() => {\n        const width = cropperSize.width;\n        const height = cropperSize.height;\n        if (width >= height) {\n            const x = Math.round((width - height) / 2);\n            setCrop({\n                aspect: 1,\n                unit: 'px',\n                height: height,\n                width: height,\n                x,\n                y: 0\n            })\n        } else {\n            const y = Math.round((height - width) / 2);\n            setCrop({\n                aspect: 1,\n                unit: 'px',\n                height: width,\n                width: width,\n                x: 0,\n                y\n            })\n        }\n    }, [cropperSize.width, cropperSize.height]);\n\n\n    return (\n        <>\n            <div className={classes.backNextButtons}>\n                <Box justifySelf={'flex-start'}>\n                    <GenericClickButton onClick={back} width={'150px'} text={'Repick'}/>\n                </Box>\n                <Box justifySelf={'flex-end'}>\n                    <GenericClickButton onClick={goNext} width={'150px'} text={'Crop'}/>\n                </Box>\n            </div>\n            <ErrorMessage loading={false} error={false} errorMessage={''}/>\n            <div ref={cropperWrapperRef} className={classes.centering}>\n                <ReactCrop\n                    src={src}\n                    crop={crop}\n                    onChange={(newCrop) => setCrop(newCrop)}\n                    ruleOfThirds={true}\n                    onImageError={() => setError(true)}\n                    onImageLoaded = {handleImageLoaded}\n                    style={{\n                        width: cropperSize.width,\n                        height: cropperSize.height\n                    }}\n                />\n            </div>\n            {\n                error &&\n                <ErrorMessage loading={false} error={true} errorMessage={'Image can\\'t be loaded'}/>\n            }\n        </>\n    )\n};\n\ninterface UploadStageProps {\n    next: (src: string) => void,\n}\n\nconst UploadStage: React.FC<UploadStageProps> = ({next}) => {\n    const classes = useStyles();\n    const inputRef = useRef<HTMLInputElement>(null);\n    const [link, setLink] = useState('');\n    const [loading, setLoading] = useState(false);\n\n    const openFileInput = () => {\n        inputRef.current?.click();\n    };\n\n    const handleFiles = () => {\n        if (\n            inputRef.current &&\n            inputRef.current.files &&\n            inputRef.current.files.length\n        ) {\n            if (loading) return;\n            setLoading(true);\n            loadImage(\n                inputRef.current.files[0],\n                (img) => {\n                    // @ts-ignore\n                    next(img.toDataURL('image/jpeg'));\n                },\n                {\n                    orientation: true,\n                    canvas: true\n                }\n            );\n        }\n    };\n\n    useEffect(() => {\n        const input = inputRef.current;\n        input?.addEventListener('change', handleFiles);\n        return () => {\n            input?.removeEventListener('change', handleFiles);\n        }\n    }, []);\n\n    return (\n        <div style={{width: '100%'}}>\n            {/*<Box width={'80%'}>*/}\n                {/*<Box my={1}>*/}\n                {/*    <TextField label=\"From Link\" fullWidth value={link} onChange={(e) => setLink(e.currentTarget.value)}/>*/}\n                {/*</Box>*/}\n                <div className={classes.centering}>\n                    {/*<Box>*/}\n                    {/*    <GenericClickButton onClick={() => next(link)} width={'150px'} text={'Get Image'}/>*/}\n                    {/*</Box>*/}\n                    {/*<Box mx={1}> or </Box>*/}\n                    <Box my={2}>\n                        {\n                            loading ?\n                                <ErrorMessage loading={true} error={false} errorMessage={''} /> :\n                                <Box>\n                                    <GenericClickButton onClick={openFileInput} width={'150px'} text={'Upload From Disk'} disabled={loading}/>\n                                </Box>\n                        }\n                    </Box>\n                    <input type=\"file\" ref={inputRef} accept=\"image/*\" style={{display: 'none'}}/>\n                </div>\n            {/*</Box>*/}\n        </div>\n    )\n};\n\ninterface UpdateAvatarProps {\n\n}\n\nconst UpdateAvatar: React.FC<UpdateAvatarProps> = ({}) => {\n    const classes = useStyles();\n\n    const [stage, setStage] = useState(Stage.UPLOAD);\n    const [imageSrc, _setImageSrc] = useState('');\n    const [croppedImageBlob, _setCroppedImageBlob] = useState<Blob | null>(null);\n\n    const moveToUploadStage = () => {\n        setStage(Stage.UPLOAD)\n    };\n\n    const moveToCropStage = (src: string) => {\n        _setImageSrc(src);\n        setStage(Stage.CROP);\n    };\n\n    const backToCropStage = () => {\n        setStage(Stage.CROP);\n    };\n\n    const moveToConfirmStage = (cropped: Blob) => {\n        _setCroppedImageBlob(cropped);\n        setStage(Stage.CONFIRM);\n    };\n\n    const moveToFinishStage = () => {\n        setStage(Stage.FINISH);\n    };\n\n    let content;\n    switch (stage) {\n        case Stage.UPLOAD:\n            content = <UploadStage next={moveToCropStage} />;\n            break;\n        case Stage.CROP:\n            content = <CropStage src={imageSrc} back={moveToUploadStage} next={moveToConfirmStage}/>;\n            break;\n        case Stage.CONFIRM:\n            content = <ConfirmStage blob={croppedImageBlob} back={backToCropStage} next={moveToFinishStage}/>;\n            break;\n        case Stage.FINISH:\n            content = <FinishStage restart={moveToUploadStage}/>;\n            break;\n        default:\n            content = <UploadStage next={moveToCropStage} />;\n    }\n\n    return (\n        <div className={classes.root}>\n            { content }\n        </div>\n    )\n};\n\nexport default UpdateAvatar","import {useState} from \"react\";\nimport urls from \"./urls\";\nimport useFetchWithTokenVerification from \"./common/use-fetch-with-token-verification\";\n\nconst useUpdateAvatar = () => {\n    const fetchWithTokenVerification = useFetchWithTokenVerification();\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(false);\n    const [errorMessage, setErrorMessage] = useState('');\n\n    const upload = (\n        file: File | Blob\n    ) => {\n        return new Promise((resolve, reject) => {\n            if (loading) {\n                reject();\n                return\n            }\n\n            // reset states\n            setError(false);\n            setErrorMessage('');\n\n            // start fetching\n            setLoading(true);\n            const form = new FormData();\n            form.append('image', file, \"avatar.jpg\");\n\n            fetchWithTokenVerification(true, urls.updateAvatar, {\n                method: 'POST',\n                body: form\n            })\n                .then((res) => res.json())\n                .then(json => {\n                    setLoading(false);\n                    console.log(json);\n\n                    if (json.status === 'success') {\n                        resolve(true);\n                        return\n                    } else {\n                        setError(true);\n                        if (json.status === 'error') {\n                            setErrorMessage(json.message)\n                        } else {\n                            setErrorMessage('Server unavailable, please try again later.')\n                        }\n                        reject();\n                    }\n                })\n                .catch(e => {\n                    setLoading(false);\n\n                    setError(true);\n                    setErrorMessage('Server unavailable, please try again later.');\n                    reject();\n                });\n        });\n    };\n\n    return [loading, error, errorMessage, upload] as [boolean, boolean, string, typeof upload]\n\n};\n\nexport default useUpdateAvatar","import {RefObject, useEffect, useState} from \"react\";\n\nconst WIDTH = 500;\nconst HEIGHT = 500;\n// try to size the wrapper within the constraints\n// target is no bigger than WIDTH * HEIGHT\n// on smaller screens (maxWidth < WIDTH) the target is SHORTER_EDGE * SHORTER_EDGE\n\nconst useResizeImage = (ref: RefObject<HTMLDivElement>, src: string) => {\n    const [width, setWidth] = useState(0);\n    const [height, setHeight] = useState(0);\n\n    const loadImage = () => {\n        const image = new Image();\n        image.src = src;\n        image.onload = () => resize(image)\n    };\n\n    const resize = (image: HTMLImageElement) => {\n        if (!src || !ref.current) return;\n        const containerWidth = ref.current.getBoundingClientRect().width;\n        const [finalWidth, finalHeight] = getWidthHeight(containerWidth, image.naturalWidth, image.naturalHeight);\n\n        setWidth(finalWidth);\n        setHeight(finalHeight);\n    };\n\n    useEffect(() => {\n        loadImage()\n    }, [ref, src]);\n\n    return [width, height] as [typeof width, typeof height]\n};\n\nconst getWidthHeight = (containerWidth: number, imageNaturalWidth: number, imageNaturalHeight: number) => {\n    const maxWidth = Math.min(WIDTH, containerWidth) || 1;\n    const maxHeight = maxWidth;\n\n    let width = 1;\n    let height = 1;\n    if (imageNaturalWidth >= imageNaturalHeight) {\n        width = maxWidth;\n        height = (width / imageNaturalWidth) * imageNaturalHeight\n    } else {\n        height = maxHeight;\n        width = (height / imageNaturalHeight) * imageNaturalWidth\n    }\n\n    // do no enlarge\n    const finalWidth = Math.min(imageNaturalWidth, Math.round(width));\n    const finalHeight = Math.min(imageNaturalHeight, Math.round(height));\n\n    return [finalWidth, finalHeight] as [typeof finalWidth, typeof finalHeight]\n};\n\nexport {\n    useResizeImage as default,\n    getWidthHeight\n}","import React from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Box, Paper, Typography} from \"@material-ui/core\";\nimport SectionWrapper from \"./section-wrapper\";\nimport UpdateAvatar from \"./update-avatar/update-avatar\";\n\ninterface AccountSettingProps {\n    username: string\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        margin: theme.spacing(1, 0),\n        width: '100%'\n    },\n    paper: {\n        width: '100%',\n        minHeight: '100px',\n        overflow: 'hidden'\n        // display: 'flex',\n        // flexDirection: 'row',\n        // alignItems: 'center',\n        // justifyContent: 'flex-start'\n    }\n}));\n\nconst AccountSetting: React.FC<AccountSettingProps> = ({username}) => {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <Typography variant={'body1'} component={'h2'}>\n                <Box my={2} fontWeight={700}>\n                    { username }\n                </Box>\n            </Typography>\n            <Paper className={classes.paper} elevation={0}>\n                <SectionWrapper sectionTitle={'Avatar'}>\n                    <UpdateAvatar />\n                </SectionWrapper>\n            </Paper>\n        </div>\n    )\n};\n\nexport default AccountSetting","import {connect} from \"react-redux\";\nimport AccountSetting from \"../components/account-setting/account-setting\";\nimport {State} from \"../redux/state\";\n\nfunction mapStateToProps(state: State) {\n    return {\n        username: state.loginStatus.username\n    }\n}\n\nconst AccountSettingContainer = connect(\n    mapStateToProps\n)(AccountSetting);\n\nexport default AccountSettingContainer;\n","const COLORS = ['#ff4143', '#50c5e3', '#fcb415'];\n\nconst getColor = () => {\n    const index = Math.floor(Math.random() * COLORS.length);\n    return COLORS[index];\n};\n\nexport class ConfettiSprite {\n    color: string;\n    x: number;\n    y: number;\n    r: number;\n    rotation: number;\n    vx: number;\n    vy: number;\n    opacity: number;\n    finished: boolean;\n    params = {\n        dx: 0.92,\n        dy: 0.95,\n        g: 0.2,\n        dr: 0.99,\n        dOpacity: 0.015,\n        dRotation: Math.random() + 1,\n        ddRotation: 0.95\n    };\n\n    constructor(width: number, height: number) {\n        this.color = getColor();\n        this.x = 0.2 * width;\n        this.y = 0.4 * height;\n        this.r = 5;\n        this.rotation = Math.random() * Math.PI;\n        this.vx = (-7 * Math.random() + 1) * -(width / 90);\n        this.vy = (2.5 * Math.random() + 1) * -(height / 100);\n        this.opacity = 1;\n        this.finished = false;\n    }\n\n    move() {\n        // horizontal speed\n        this.vx = this.vx * this.params.dx;\n        this.x = this.x + this.vx;\n\n        // vertical speed\n        this.vy = this.vy * this.params.dy;\n        this.vy = this.vy + this.params.g;\n        this.y = this.y + this.vy;\n\n        // reduce opacity when it starts to fall\n        // set this.finished to true when opacity <= 0\n        if (this.vy >= 0) {\n            const nextOpacity = this.opacity - this.params.dOpacity;\n            if (nextOpacity > 0) {\n                this.opacity = nextOpacity\n            } else {\n                this.finished = true\n            }\n        }\n\n        // rotation\n        this.params.dRotation *= this.params.ddRotation;\n        this.rotation += this.params.dRotation\n    }\n}\n\ninterface ConfettiOptions extends Object {\n    width: number,\n    height: number,\n    spritesCount: number,\n    [key: string]: any\n}\n\nclass Confetti {\n    params: ConfettiOptions;\n    ID: string;\n    canvas: HTMLCanvasElement | null;\n    ctx: CanvasRenderingContext2D | null;\n    sprites: ConfettiSprite[];\n\n    constructor(ID: string, options?: Partial<ConfettiOptions>) {\n        this.params = this.initParams(options);\n        this.ID = ID;\n        this.canvas = null;\n        this.ctx = null;\n        this.sprites = [];\n        this.loop = this.loop.bind(this);\n    }\n\n    initParams(options?: Partial<ConfettiOptions>) {\n        const defaultOptions = {\n            width: 300,\n            height: 300,\n            spritesCount: 30,\n        } as ConfettiOptions;\n\n        if (options !== undefined) {\n            return {...defaultOptions, ...options}\n        }\n\n        return defaultOptions\n    }\n\n    initCanvas() {\n        this.canvas = document.getElementById(this.ID) as HTMLCanvasElement;\n        this.ctx = this.canvas.getContext('2d');\n\n        this.canvas.width = this.params.width;\n        this.canvas.height = this.params.height;\n    }\n\n    initSprites() {\n        for (let i=0; i<this.params.spritesCount; i++) {\n            this.sprites.push(new ConfettiSprite(this.params.width, this.params.height));\n        }\n    }\n\n    /**\n     * set drawer() according to if CanvasRenderingContext2D.ellipse() is supported\n     */\n    initDrawer() {\n        if (!this.ctx) return;\n\n        if (this.ctx.ellipse === undefined) {\n            this.drawer = (ctx: CanvasRenderingContext2D, x: number, y: number, r: number) => {\n                ctx.arc(x, y, r, 0, 2 * Math.PI);\n            }\n        } else {\n            this.drawer = (ctx: CanvasRenderingContext2D, x: number, y: number, r: number, rotation: number) => {\n                ctx.ellipse(x, y, r, r * 1.2, rotation, 0, 2 * Math.PI);\n            }\n        }\n    }\n\n    /**\n     * drawer draws ellipse if supported, otherwise draw arc\n     */\n    drawer(ctx: CanvasRenderingContext2D, x: number, y: number, r: number, rotation?: number) {}\n\n    draw() {\n        if (!this.ctx) return;\n        this.ctx.clearRect(0, 0, this.params.width, this.params.height);\n\n        this.sprites.forEach(_ => {\n            if (!this.ctx) return;\n\n            this.ctx.save();\n            this.ctx.beginPath();\n            this.drawer(this.ctx, _.x, _.y, _.r, _.rotation);\n            this.ctx.fillStyle = _.color;\n            this.ctx.globalAlpha = _.opacity;\n            this.ctx.fill();\n            this.ctx.restore();\n        })\n    }\n\n    update() {\n        this.sprites = this.sprites.filter(_ => {\n            _.move();\n            return !_.finished\n        });\n    }\n\n    loop() {\n        this.draw();\n        this.update();\n\n        if (this.sprites.length > 0) {\n            requestAnimationFrame(this.loop);\n        }\n    }\n\n    main() {\n        this.initCanvas();\n        this.initSprites();\n        this.initDrawer();\n        this.loop();\n    }\n}\n\nexport default Confetti","import React, {useEffect} from \"react\";\nimport Confetti from \"./confetti\";\n\nconst CANVAS_ID = 'confetti-canvas';\n\ninterface ConfettiWrapperProps {\n\n}\n\nconst ConfettiWrapper: React.FC<ConfettiWrapperProps> = () => {\n\n    useEffect(() => {\n        (new Confetti(CANVAS_ID)).main();\n    }, []);\n\n    return (\n        <canvas id={CANVAS_ID} />\n    )\n};\n\nexport default ConfettiWrapper","import React from 'react';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route\n} from \"react-router-dom\";\nimport {connect} from 'react-redux';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Login from \"./components/login/login\";\nimport Register from \"./components/login/register\";\nimport HeaderContainer from \"./containers/header-container\";\nimport MainPage from \"./components/main-page/main-page\";\nimport SnackbarContainer from \"./containers/snackbar-container\";\nimport Footer from \"./components/footer/footer\";\nimport PrivateRoute from \"./utils/protected-router\";\nimport PostEditor from \"./components/post-editor/post-editor\";\nimport {State} from \"./redux/state\";\nimport PostDetail from \"./components/post-detail/post-detail\";\nimport RouterScrollRestoration from \"./utils/router-scroll-restoration\";\nimport AccountSettingContainer from \"./containers/account-setting-container\";\nimport ConfettiWrapper from \"./components/confetti/confetti-wrapper\";\nimport routes from \"./routes\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        maxWidth: '100vw',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'flex-start'\n    },\n    widthWrapper: {\n        margin: theme.spacing(3, 0, 0, 0),\n        width: theme.breakpoints.values['md'],\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'flex-start',\n        [theme.breakpoints.down('sm')]: {\n            width: 'calc(100% - 16px)',\n            margin: theme.spacing(0, 1),\n        }\n    },\n    confetti: {\n        position: 'fixed',\n        zIndex: theme.zIndex.tooltip + 1,\n        bottom: '0',\n        width: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center'\n    }\n}));\n\ninterface InnerAppProps {\n    isLogin: boolean,\n    confetti: boolean\n}\n\nconst InnerApp: React.FC<InnerAppProps> = ({isLogin, confetti}) => {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <Router basename={process.env.PUBLIC_URL}>\n                <RouterScrollRestoration />\n                <HeaderContainer />\n                <div className={classes.widthWrapper}>\n                    <Switch>\n                        <Route path={routes.home} exact render={ () => <MainPage/> } />\n                        <Route path={routes.login} render={ () => <Login /> } />\n                        <Route path={routes.register} render={ () => <Register /> } />\n                        <Route path={routes.postDetail} render={ () => <PostDetail isLogin={isLogin}/> } />\n                        <PrivateRoute path={routes.editPost} isLogin={isLogin}>\n                            <PostEditor/>\n                        </PrivateRoute>\n                        <PrivateRoute path={routes.accountSetting} isLogin={isLogin}>\n                            <AccountSettingContainer/>\n                        </PrivateRoute>\n                        {/*<Route path=\"/welcome\" component={Welcome} />*/}\n\n                        {/*fall back*/}\n                        <Route path={routes.fallback} render={ () => <MainPage/>} />\n                    </Switch>\n                    <Footer />\n                </div>\n            </Router>\n\n            {\n                confetti &&\n                <div className={classes.confetti}>\n                    <ConfettiWrapper />\n                </div>\n            }\n            <SnackbarContainer />\n        </div>\n    )\n};\n\nfunction mapStateToProps(state: State) {\n    return {\n        isLogin: state.loginStatus.isLogin,\n        confetti: state.confetti\n    }\n}\n\nconst InnerAppContainer = connect(\n    mapStateToProps,\n)(InnerApp);\n\nexport default InnerAppContainer;\n","import React from 'react';\nimport {Provider} from 'react-redux';\nimport configureStore from \"./redux/configure-store\";\nimport { CssBaseline } from \"@material-ui/core\";\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport theme from './theme';\nimport InnerApp from \"./inner-app\";\n\nconst store = configureStore();\n\ninterface AppProps {\n\n}\n\nconst App: React.FC<AppProps> = () => {\n    return (\n        <Provider store={store}>\n        <ThemeProvider theme={theme}>\n        <CssBaseline />\n            <InnerApp />\n        </ThemeProvider>\n        </Provider>\n    )\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}