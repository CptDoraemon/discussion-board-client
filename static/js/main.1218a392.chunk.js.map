{"version":3,"sources":["redux/actions/login-status.ts","redux/state.ts","redux/reducers/login-status.ts","redux/actions/snackbar.ts","redux/reducers/snakbar.ts","redux/reducers/root-reducers.ts","redux/configure-store.ts","theme.tsx","utils/use-full-height.tsx","components/login/commons/login-common.tsx","components/commons/form-button.tsx","utils/use-input-field.tsx","utils/validators.ts","requests/urls.ts","requests/useLogin.tsx","components/commons/error-message.tsx","components/login/login.tsx","requests/useRegister.tsx","components/login/register.tsx","components/commons/theme-button.tsx","requests/useLogout.tsx","components/header/logged-in-user-panel.tsx","components/header/anonymous-user-panel.tsx","components/commons/logo.tsx","components/header/header.tsx","containers/header-container.tsx","requests/useGetPostList.tsx","components/post-list/post.tsx","components/post-list/post-list.tsx","containers/post-list-container.tsx","components/commons/generic-button.tsx","components/side-bar/side-bar.tsx","components/main-page/main-page.tsx","components/snackbar/snackbar.tsx","containers/snackbar-container.tsx","components/footer/footer-column.tsx","components/footer/footer.tsx","utils/protected-router.tsx","requests/useGetAuthorizationHeader.tsx","requests/useVerifyToken.tsx","requests/usePostSubmission.tsx","components/post-editor/post-editor.tsx","inner-app.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["LoginStatusActionTypes","defaultState","loginStatus","isLogin","username","token","access","refresh","snackbar","open","message","updateLoginStatus","newStatus","type","UPDATE_LOGIN_STATUS","SnackbarActionTypes","state","action","LOGOUT","REFRESH_TOKEN","Object","assign","newAccessToken","openSnackbar","OPEN","CLOSE","rootReducers","combineReducers","loggerMiddleware","createLogger","configureStore","createStore","applyMiddleware","theme","createMuiTheme","palette","primary","main","contrastText","secondary","text","typography","responsiveFontSizes","h1","fontFamily","join","fontWeight","fontSize","breakpoints","up","useFullHeight","ref","useState","height","setHeight","useEffect","current","getBoundingClientRect","useStyles","makeStyles","root","width","margin","spacing","display","flexDirection","alignItems","justifyContent","image","objectFit","down","content","padding","textField","link","color","LoginCommon","children","imageUrl","classes","containerRef","useRef","Paper","elevation","className","src","process","alt","style","title","button","backgroundColor","textTransform","borderBottom","borderRadius","opacity","FormButton","disabled","form","variant","disableElevation","useInputField","defaultValue","validator","value","setValue","error","setError","errorMessage","setErrorMessage","e","target","reference","validatorResult","isValid","usernameValidator","length","emailValidator","indexOf","passwordValidator","confirmPasswordValidator","postTitleValidator","execValidators","validators","validationResults","map","_","i","urls","login","accountBase","register","verifySession","getPostList","postBase","createPost","useLogin","loading","setLoading","dispatch","useDispatch","history","useHistory","location","useLocation","email","password","fetch","method","headers","body","JSON","stringify","then","res","json","status","data","from","pathname","replace","catch","ErrorMessage","Typography","component","Box","CircularProgress","Login","setEmail","emailError","emailErrorMessage","validateEmail","setPassword","passwordError","passwordErrorMessage","validatePassword","onSubmit","preventDefault","id","Grid","container","item","xs","textAlign","justify","TextField","label","name","onChange","helperText","Divider","to","useRegister","confirmPassword","Register","setUsername","usernameError","usernameErrorMessage","validateUsername","setConfirmPassword","confirmPasswordError","confirmPasswordErrorMessage","validateConfirmPassword","validationCheck1","validationCheck2","md","letterSpacing","ThemeButton","url","onClick","Link","useLogout","clientSideLogout","LoggedInUserPanel","logout","size","AnonymousUserPanel","Logo","headerDimension","position","zIndex","appBar","left","top","placeholder","Header","HeaderContainer","connect","useGetPostList","fetchPostList","console","log","months","paper","minHeight","avatar","actionArea","grey","likeButtons","buttonText","lineHeight","actionItem","Post","Avatar","IconButton","aria-label","ms","date","Date","hour","getHours","minute","getMinutes","getDate","getMonth","getFullYear","getTimeString","now","PostList","Array","fill","my","key","Skeleton","animation","PostListContainer","light","maxWidth","GenericClickButton","Button","GenericLinkButton","SideBar","right","MainPage","createStyles","Snackbar","closeSnackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","SnackbarContent","SnackbarContainer","userStyles","listStyleType","header","FooterColumn","href","rel","column1","copyright","Footer","PrivateRoute","rest","render","useGetAuthorizationHeader","accessToken","useStore","getState","useVerifyToken","refreshToken","accessHeader","Promise","resolve","reject","a","refreshRes","refreshJson","usePostSubmission","validateToken","push","editor","marginBottom","PostEditor","useParams","postID","quill","setQuill","titleChangeHandler","titleError","titleErrorMessage","validateTitle","submit","quillInstance","Quill","modules","toolbar","FormControl","InputLabel","htmlFor","Input","aria-describedby","FormHelperText","innerHTML","widthWrapper","InnerAppContainer","basename","path","exact","store","App","ThemeProvider","CssBaseline","Boolean","window","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1218a392.chunk.js","sourcesContent":["import {State, defaultState} from \"../state\";\n\nexport enum LoginStatusActionTypes {\n    'UPDATE_LOGIN_STATUS'='UPDATE_LOGIN_STATUS',\n    'LOGOUT'='LOGOUT',\n    'REFRESH_TOKEN'='REFRESH_TOKEN'\n}\n\n// export type LoginStatusAction =\n//     {\n//         type: typeof LoginStatusActionTypes.LOGOUT,\n//         newStatus: State['loginStatus']\n//     } |\n//     {\n//         type: typeof LoginStatusActionTypes.UPDATE_LOGIN_STATUS,\n//         newStatus: State['loginStatus']\n//     } |\n//     {\n//         type: typeof LoginStatusActionTypes.REFRESH_TOKEN,\n//         newStatus: State['loginStatus']\n//     }\n\nexport type LoginStatusAction = ReturnType<typeof logout> | ReturnType<typeof updateLoginStatus> | ReturnType<typeof refreshToken>\n\nexport function logout() {\n    return {\n        type: LoginStatusActionTypes.LOGOUT as typeof LoginStatusActionTypes.LOGOUT,\n        newStatus: defaultState.loginStatus\n    }\n}\n\nexport function updateLoginStatus(newStatus: State['loginStatus']) {\n    return {\n        type: LoginStatusActionTypes.UPDATE_LOGIN_STATUS as typeof LoginStatusActionTypes.UPDATE_LOGIN_STATUS,\n        newStatus\n    }\n}\n\nexport function refreshToken(newAccessToken: State['loginStatus']['token']['access']) {\n    return {\n        type: LoginStatusActionTypes.REFRESH_TOKEN as typeof LoginStatusActionTypes.REFRESH_TOKEN,\n        newAccessToken\n    }\n}","export interface State {\n    loginStatus: {\n        isLogin: boolean,\n        username: string,\n        token: {\n            access: string,\n            refresh: string\n        }\n    },\n    snackbar: {\n        open: boolean,\n        message: string\n    }\n}\n\nexport const defaultState: State = {\n    loginStatus: {\n        isLogin: false,\n        username: '',\n        token: {\n            access: '',\n            refresh: ''\n        }\n    },\n    snackbar: {\n        open: false,\n        message: ''\n    }\n};","import {defaultState, State} from \"../state\";\nimport {LoginStatusAction, LoginStatusActionTypes} from \"../actions/login-status\";\n\n\nfunction loginStatus(\n    state = defaultState.loginStatus,\n    action: LoginStatusAction\n): State['loginStatus'] {\n    switch (action.type) {\n        case LoginStatusActionTypes.UPDATE_LOGIN_STATUS:\n            return action.newStatus;\n        case LoginStatusActionTypes.LOGOUT:\n            return action.newStatus;\n        case LoginStatusActionTypes.REFRESH_TOKEN:\n            const newStatus = Object.assign({}, state);\n            newStatus.token.access = action.newAccessToken;\n            return newStatus;\n        default:\n            return state\n    }\n}\n\nexport default loginStatus;","export enum SnackbarActionTypes {\n    'CLOSE'='CLOSE',\n    'OPEN'='OPEN',\n}\n\nexport type SnackbarAction = ReturnType<typeof openSnackbar> | ReturnType<typeof closeSnackbar>\n\nexport function openSnackbar(message: string) {\n    return {\n        type: SnackbarActionTypes.OPEN as typeof SnackbarActionTypes.OPEN,\n        message\n    }\n}\n\nexport function closeSnackbar() {\n    return {\n        type: SnackbarActionTypes.CLOSE as typeof SnackbarActionTypes.CLOSE,\n    }\n}\n","import {defaultState, State} from \"../state\";\nimport {SnackbarAction, SnackbarActionTypes} from \"../actions/snackbar\";\n\n\nfunction snackbar (\n    state = defaultState.snackbar,\n    action: SnackbarAction\n): State['snackbar'] {\n    switch (action.type) {\n        case SnackbarActionTypes.OPEN:\n            return {\n                open: true,\n                message: action.message\n            };\n        case SnackbarActionTypes.CLOSE:\n            return defaultState.snackbar;\n        default:\n            return state\n    }\n}\n\nexport default snackbar;","import {combineReducers} from \"redux\";\nimport loginStatus from \"./login-status\";\nimport snackbar from \"./snakbar\";\n\nconst rootReducers = combineReducers({\n    loginStatus,\n    snackbar\n});\n\nexport default rootReducers;","import { createStore, applyMiddleware } from 'redux'\nimport thunkMiddleware from 'redux-thunk'\nimport rootReducers from \"./reducers/root-reducers\";\nimport {defaultState} from \"./state\";\n// import rootReducers from \"./reducers/root-reducers\";\n\nimport { createLogger } from 'redux-logger'\nconst loggerMiddleware = createLogger();\n\n\nexport default function configureStore() {\n    return createStore(\n        rootReducers,\n        defaultState,\n        // applyMiddleware(thunkMiddleware)\n        // applyMiddleware(thunkMiddleware, loggerMiddleware)\n        applyMiddleware(loggerMiddleware)\n    )\n}","import {createMuiTheme, responsiveFontSizes} from \"@material-ui/core/styles\";\n\nlet theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: '#805ad5',\n            contrastText: '#fff',\n        },\n        secondary: {\n            main: '#f6ad55',\n            contrastText: '#fff',\n        },\n        text: {\n            primary: '#4a5568'\n        }\n    },\n    typography: {\n        \"fontFamily\": \"system-ui,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,Noto Sans,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol,Noto Color Emoji\",\n        \"fontSize\": 14,\n        \"fontWeightLight\": 300,\n        \"fontWeightRegular\": 400,\n        \"fontWeightMedium\": 500\n    }\n});\ntheme = responsiveFontSizes(theme);\ntheme.typography.h1 = {\n    fontFamily: [\n        'Open-sans',\n        'sans-serif',\n    ].join(','),\n    fontWeight: 800,\n    fontSize: '1.25rem',\n    [theme.breakpoints.up('md')]: {\n        fontSize: '1.5rem',\n    },\n    fontStyle: \"normal\",\n    color: \"inherit\"\n};\n\nexport default theme;","import React, {useEffect, useState} from \"react\";\n\nconst useFullHeight = (ref: React.RefObject<HTMLDivElement>) => {\n    const [height, setHeight] = useState(0);\n\n    useEffect(() => {\n        if (!ref.current) return;\n        setHeight(ref.current.getBoundingClientRect().height)\n    }, [ref]);\n\n    return height\n};\n\nexport default useFullHeight","import React, {useRef} from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Paper} from \"@material-ui/core\";\nimport useFullHeight from \"../../../utils/use-full-height\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        margin: theme.spacing(2, 0),\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'center'\n    },\n    image: {\n        width: '40%',\n        height: '100%',\n        '& img': {\n            width: '100%',\n            height: '100%',\n            objectFit: 'cover'\n        },\n        [theme.breakpoints.down('sm')]: {\n            display:'none'\n        }\n    },\n    content: {\n        width: '60%',\n        padding: theme.spacing(10, 5),\n        [theme.breakpoints.down('sm')]: {\n            width: '100%'\n        }\n    },\n    textField: {\n        width: '100%',\n        fontWeight: 700\n    },\n    link: {\n        fontWeight: 700,\n        '& a:link': {\n            color: theme.palette.primary.main\n        },\n        '& a:visited': {\n            color: theme.palette.primary.main\n        },\n        '& a:hover': {\n            color: theme.palette.secondary.main\n        }\n    }\n}));\n\ninterface LoginCommonProps {\n    imageUrl: string\n}\n\nconst LoginCommon: React.FC<LoginCommonProps> = ({children, imageUrl}) => {\n    const classes = useStyles();\n\n    const containerRef = useRef<HTMLDivElement>(null);\n    const height = useFullHeight(containerRef);\n\n    return (\n        <Paper elevation={0} className={classes.root} ref={containerRef}>\n            <div className={classes.image}>\n                <img\n                    src={process.env.PUBLIC_URL + imageUrl}\n                    alt={'login background'}\n                    style={{height: `${height}px`}}\n                    title={'login background'}\n                />\n            </div>\n            <div className={classes.content}>\n                { children }\n            </div>\n        </Paper>\n    )\n};\n\nexport default LoginCommon","import React from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Button as MuiButton} from \"@material-ui/core\";\nimport {Link} from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n    button: {\n        width: '100%',\n        backgroundColor: theme.palette.primary.main,\n        color: '#fff',\n        fontWeight: 700,\n        textTransform: 'none',\n        borderBottom: '2px solid rgba(0,0,0,0.1)',\n        borderRadius: '5px',\n        '&:hover': {\n            backgroundColor: theme.palette.secondary.main\n        },\n        '&:disabled': {\n            backgroundColor: theme.palette.secondary.main,\n            opacity: 0.7\n        }\n    }\n}));\n\ninterface ButtonProps {\n    text: string,\n    disabled: boolean,\n    form: string\n}\n\nconst FormButton: React.FC<ButtonProps> = ({text, disabled, form}) => {\n    const classes = useStyles();\n\n    return (\n        <MuiButton variant=\"contained\" classes={{root: classes.button}} disableElevation type={'submit'} form={form} disabled={disabled}>\n            { text }\n        </MuiButton>\n    )\n};\n\nexport default FormButton\n","import React, {ChangeEvent, useEffect, useState} from \"react\";\nimport {Validator} from \"./validators\";\n\ntype ChangeHandler = (e: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => void\n\nconst useInputField = (\n    defaultValue: string,\n    validator: Validator\n) => {\n    const [value, setValue] = useState(defaultValue);\n    const [error, setError] = useState(false);\n    const [errorMessage, setErrorMessage] = useState('');\n\n    const validate = (reference?: string) => {\n        const validatorResult = reference ? validator(value, reference) : validator(value);\n        setError(!validatorResult.isValid);\n        setErrorMessage(validatorResult.message);\n\n        return validatorResult.isValid as boolean\n    };\n\n    const changeHandler: ChangeHandler = (e) => {\n        if (error) setError(false);\n        setValue(e.target.value)\n    };\n\n    return [value, changeHandler, error, errorMessage, validate] as [string, ChangeHandler, boolean, string, typeof validate]\n};\n\nexport default useInputField","export type Validator = (value: string, reference?: string) => {isValid: boolean, message: string}\n\nconst usernameValidator: Validator = (value) => {\n    let isValid = false;\n    let message = 'Invalid username';\n\n    if (value.length >= 30) {\n        message = 'Username length must be less than 30 characters';\n    } else if (value.length === 0) {\n        message = 'Username cannot be empty';\n    } else {\n        isValid = true;\n        message = '';\n    }\n\n    return {\n        isValid,\n        message\n    }\n};\n\nconst emailValidator: Validator = (value) => {\n    let isValid = false;\n    let message = 'Invalid Email format';\n\n    if (value.indexOf('@') === -1) {\n\n    } else if (value.indexOf('.') === -1) {\n\n    } else if (value.length === 0) {\n        message = 'Email cannot be empty';\n    } else if (value.length >= 60) {\n        message = 'Email too long';\n    }else {\n        isValid = true;\n        message = '';\n    }\n\n    return {\n        isValid,\n        message\n    }\n};\n\nconst passwordValidator: Validator = (value) => {\n    let isValid = false;\n    let message = '';\n\n    if (value.length === 0) {\n        message = 'Email cannot be empty';\n    } else {\n        isValid = true;\n        message = '';\n    }\n\n    return {\n        isValid,\n        message\n    }\n};\n\nconst confirmPasswordValidator: Validator = (value, reference) => {\n    let isValid = false;\n    let message = 'Not same as the password';\n\n    if (value === reference) {\n        message = '';\n        isValid = true;\n    }\n    return {\n        isValid,\n        message\n    }\n};\n\nconst postTitleValidator: Validator = (value) => {\n    let isValid = false;\n    let message = 'Title cannot be empty';\n\n    if (value.length > 0) {\n        message = '';\n        isValid = true;\n    }\n    return {\n        isValid,\n        message\n    }\n};\n\nconst execValidators = (validators: (()=>boolean)[]) => {\n    const validationResults = validators.map(_ => _());\n    for (let i=0; i<validationResults.length; i++) {\n        if (!validationResults[i]) {\n            return false\n        }\n    }\n\n    return true\n};\n\nexport {\n    usernameValidator,\n    emailValidator,\n    passwordValidator,\n    confirmPasswordValidator,\n    execValidators,\n    postTitleValidator\n}","const base = 'https://django-api-xiaoxihome.herokuapp.com/';\n\nconst accountBase = base + 'api/discussion_board/account/';\nconst login = accountBase + 'login/';\nconst register = accountBase + 'register/';\nconst verifySession = accountBase + 'verify_session/';\nconst refresh = accountBase + 'refresh/';\n\nconst postBase = base + 'api/discussion_board/post/';\nconst getPostList = postBase + 'all/';\nconst createPost = postBase + 'create/';\n\nconst urls = {\n    login,\n    register,\n    verifySession,\n    getPostList,\n    refresh,\n    createPost\n};\n\nexport default urls","import {useState} from \"react\";\nimport urls from \"./urls\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { useDispatch } from 'react-redux'\nimport { updateLoginStatus } from \"../redux/actions/login-status\";\nimport { openSnackbar } from \"../redux/actions/snackbar\";\n\nconst useLogin = () => {\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(false);\n    const [errorMessage, setErrorMessage] = useState('');\n    const dispatch = useDispatch();\n    let history = useHistory();\n    let location = useLocation();\n\n    const login = (\n        email: string,\n        password: string\n    ) => {\n        // reset states\n        setError(false);\n        setErrorMessage('');\n\n        // start fetching\n        setLoading(true);\n        fetch(urls.login, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                email,\n                password\n            })\n        })\n            .then((res) => res.json())\n            .then(json => {\n                setLoading(false);\n\n                if (json.status === 'success') {\n                    const username = json.data.username;\n                    dispatch(updateLoginStatus({\n                        isLogin: true,\n                        username: username,\n                        token: {\n                            access: json.data.access,\n                            refresh: json.data.refresh\n                        }\n                    }));\n                    let { from }: any = location.state || { from: { pathname: \"/\" } };\n                    history.replace(from);\n                    dispatch(openSnackbar(`Welcome back ${username}`))\n                } else {\n                    setError(true);\n                    if (json.status === 'error') {\n                        setErrorMessage(json.message)\n                    } else {\n                        setErrorMessage('Server unavailable, please try again later.')\n                    }\n                }\n            })\n            .catch(e => {\n                setLoading(false);\n\n                setError(true);\n                setErrorMessage('Server unavailable, please try again later.')\n            });\n    };\n\n    return [loading, error, errorMessage, login] as [boolean, boolean, string, typeof login]\n\n};\n\nexport default useLogin","import {Box, CircularProgress, Typography} from \"@material-ui/core\";\nimport React from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    errorMessage: {\n        fontWeight: 700,\n        color: theme.palette.error.main\n    }\n}));\n\ninterface ErrorMessageProps {\n    loading: boolean,\n    error: boolean,\n    errorMessage: string\n\n}\n\nconst ErrorMessage:React.FC<ErrorMessageProps> = ({loading, errorMessage, error}) => {\n    const classes = useStyles();\n\n    return (\n        <Typography variant={'body1'} component={'div'}>\n            <Box className={classes.errorMessage} height={40}>\n                {   loading ?\n                        <CircularProgress color=\"primary\" /> :\n                        error && errorMessage ?\n                            errorMessage :\n                            ' '\n                }\n            </Box>\n        </Typography>\n    )\n};\n\nexport default ErrorMessage","import React, {FormEvent} from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport LoginCommon from \"./commons/login-common\";\nimport {Box, CircularProgress, Divider, Grid, TextField, Typography} from \"@material-ui/core\";\nimport FormButton from \"../commons/form-button\";\nimport {Link} from \"react-router-dom\";\nimport useInputField from \"../../utils/use-input-field\";\nimport {emailValidator, execValidators, passwordValidator} from \"../../utils/validators\";\nimport useLogin from \"../../requests/useLogin\";\nimport ErrorMessage from \"../commons/error-message\";\n\nconst useStyles = makeStyles((theme) => ({\n    textField: {\n        width: '100%',\n        fontWeight: 700\n    },\n    link: {\n        fontWeight: 700,\n        '& a:link': {\n            color: theme.palette.primary.main\n        },\n        '& a:visited': {\n            color: theme.palette.primary.main\n        },\n        '& a:hover': {\n            color: theme.palette.secondary.main\n        }\n    }\n}));\n\ninterface LoginProps {\n\n}\n\nconst Login: React.FC<LoginProps> = () => {\n    const classes = useStyles();\n    const [email, setEmail, emailError, emailErrorMessage, validateEmail] = useInputField('', emailValidator);\n    const [password, setPassword, passwordError, passwordErrorMessage, validatePassword] = useInputField('', passwordValidator);\n\n    const [loading, error, errorMessage, login] = useLogin();\n\n    const submitHandler = (e: FormEvent) => {\n        e.preventDefault();\n\n        if (execValidators([validateEmail, validatePassword])) {\n            login(email, password)\n        }\n    };\n\n    return (\n        <LoginCommon imageUrl={'/images/login_bg.jpg'}>\n            <form onSubmit={submitHandler} id={'login-form'}>\n                <Grid container spacing={2}>\n                    <Grid item xs={12}>\n                        <Typography variant={'h1'} component={'h1'} color={\"textPrimary\"}>\n                            <Box textAlign={'center'}>\n                                Log In\n                            </Box>\n                        </Typography>\n                    </Grid>\n\n                    <Grid item xs={12}>\n                        <Grid container justify={'center'}>\n                            <TextField\n                                error={emailError}\n                                label=\"Email\"\n                                name=\"email\"\n                                value={email}\n                                onChange={setEmail}\n                                variant=\"outlined\"\n                                helperText={emailError ? emailErrorMessage: ' '}\n                                className={classes.textField}\n                            />\n                        </Grid>\n                    </Grid>\n\n                    <Grid item xs={12}>\n                        <Grid container justify={'center'}>\n                            <TextField\n                                error={passwordError}\n                                type=\"password\"\n                                label=\"Password\"\n                                name=\"password\"\n                                value={password}\n                                onChange={setPassword}\n                                variant=\"outlined\"\n                                helperText={passwordError ? passwordErrorMessage : ' '}\n                                className={classes.textField}\n                            />\n                        </Grid>\n                    </Grid>\n\n                    <Grid item xs={12}>\n                        <Grid container justify={'center'}>\n                            <FormButton text={'Log me in!'} form={'login-form'} disabled={loading}/>\n                        </Grid>\n                    </Grid>\n\n                    <Grid item xs={12}>\n                        <Grid container justify={'center'}>\n                            <ErrorMessage loading={loading} error={error} errorMessage={errorMessage}/>\n                        </Grid>\n                    </Grid>\n\n                    <Grid item xs={12}>\n                        <Divider />\n                    </Grid>\n\n                    <Grid item xs={12} className={classes.link}>\n                        <Grid container justify={'center'}>\n                            <Link to={'/register'}>\n                                Need an account?\n                            </Link>\n                        </Grid>\n                    </Grid>\n\n                </Grid>\n            </form>\n        </LoginCommon>\n    )\n\n};\n\nexport default Login","import {useState} from \"react\";\nimport urls from \"./urls\";\nimport {useHistory, useLocation} from \"react-router-dom\";\nimport { useDispatch } from 'react-redux'\nimport { updateLoginStatus } from \"../redux/actions/login-status\";\nimport {openSnackbar} from \"../redux/actions/snackbar\";\n\nconst useRegister = () => {\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(false);\n    const [errorMessage, setErrorMessage] = useState('');\n    const dispatch = useDispatch();\n    let history = useHistory();\n    let location = useLocation();\n\n    const register = (\n        username: string,\n        email: string,\n        password: string,\n        confirmPassword: string\n    ) => {\n        // reset states\n        setError(false);\n        setErrorMessage('');\n\n        // start fetching\n        setLoading(true);\n        fetch(urls.register, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                username,\n                email,\n                password,\n                'confirm_password': confirmPassword\n            })\n        })\n            .then((res) => res.json())\n            .then(json => {\n                setLoading(false);\n\n                if (json.status === 'success') {\n                    dispatch(updateLoginStatus({\n                        isLogin: true,\n                        username: json.data.username,\n                        token: {\n                            access: json.data.access,\n                            refresh: json.data.refresh\n                        }\n                    }));\n                    let { from }: any = location.state || { from: { pathname: \"/\" } };\n                    history.replace(from);\n\n                    dispatch(openSnackbar(`Welcome ${username}!`))\n                } else {\n                    setError(true);\n                    if (json.status === 'error') {\n                        setErrorMessage(json.message)\n                    } else {\n                        setErrorMessage('Server unavailable, please try again later.')\n                    }\n                }\n            })\n            .catch(e => {\n                setLoading(false);\n\n                setError(true);\n                setErrorMessage('Server unavailable, please try again later.')\n            });\n    };\n\n    return [loading, error, errorMessage, register] as [boolean, boolean, string, typeof register]\n\n};\n\nexport default useRegister","import React, {FormEvent} from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Box, Divider, Grid, TextField, Typography} from \"@material-ui/core\";\nimport FormButton from \"../commons/form-button\";\nimport {Link} from \"react-router-dom\";\nimport LoginCommon from \"./commons/login-common\";\nimport useInputField from \"../../utils/use-input-field\";\nimport {\n    confirmPasswordValidator,\n    emailValidator,\n    execValidators,\n    passwordValidator,\n    usernameValidator\n} from \"../../utils/validators\";\nimport ErrorMessage from \"../commons/error-message\";\nimport useRegister from \"../../requests/useRegister\";\n\nconst useStyles = makeStyles((theme) => ({\n    textField: {\n        width: '100%',\n        fontWeight: 700\n    },\n    link: {\n        fontWeight: 700,\n        '& a:link': {\n            color: theme.palette.primary.main\n        },\n        '& a:visited': {\n            color: theme.palette.primary.main\n        },\n        '& a:hover': {\n            color: theme.palette.secondary.main\n        }\n    }\n}));\n\ninterface RegisterProps {\n\n}\n\nconst Register: React.FC<RegisterProps> = () => {\n    const classes = useStyles();\n\n    const [username, setUsername, usernameError, usernameErrorMessage, validateUsername] = useInputField('', usernameValidator);\n    const [email, setEmail, emailError, emailErrorMessage, validateEmail] = useInputField('', emailValidator);\n    const [password, setPassword, passwordError, passwordErrorMessage, validatePassword] = useInputField('', passwordValidator);\n    const [confirmPassword, setConfirmPassword, confirmPasswordError, confirmPasswordErrorMessage, validateConfirmPassword] = useInputField('', confirmPasswordValidator);\n\n    const [loading, error, errorMessage, register] = useRegister();\n\n    const submitHandler = (e: FormEvent) => {\n        e.preventDefault();\n        const validationCheck1 = execValidators([validateUsername, validateEmail, validatePassword]);\n        const validationCheck2 =  validateConfirmPassword(password);\n        if (validationCheck1 && validationCheck2) {\n            register(username, email, password, confirmPassword)\n        }\n    };\n\n    const formID = 'register-form';\n\n    return (\n        <LoginCommon imageUrl={'/images/register_bg.jpg'}>\n            <form onSubmit={submitHandler} id={formID}>\n                <Grid container spacing={2}>\n                    <Grid item xs={12}>\n                        <Typography variant={'h1'} component={'h1'} color={\"textPrimary\"}>\n                            <Box textAlign={'center'}>\n                                Join Us\n                            </Box>\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Grid container justify={'center'}>\n                            <TextField\n                                error={usernameError}\n                                label=\"Username\"\n                                name=\"username\"\n                                value={username}\n                                onChange={setUsername}\n                                helperText={usernameError ? usernameErrorMessage: ' '}\n                                variant=\"outlined\"\n                                className={classes.textField}\n                            />\n                        </Grid>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Grid container justify={'center'}>\n                            <TextField\n                                error={emailError}\n                                label=\"Email\"\n                                name=\"email\"\n                                value={email}\n                                onChange={setEmail}\n                                helperText={emailError ? emailErrorMessage: ' '}\n                                variant=\"outlined\"\n                                className={classes.textField}\n                            />\n                        </Grid>\n                    </Grid>\n                    <Grid item xs={12} md={6}>\n                        <Grid container justify={'center'}>\n                            <TextField\n                                error={passwordError}\n                                label=\"Password\"\n                                name=\"password\"\n                                type=\"password\"\n                                value={password}\n                                onChange={setPassword}\n                                helperText={passwordError ? passwordErrorMessage: ' '}\n                                variant=\"outlined\"\n                                className={classes.textField}\n                            />\n                        </Grid>\n                    </Grid>\n                    <Grid item xs={12} md={6}>\n                        <Grid container justify={'center'}>\n                            <TextField\n                                error={confirmPasswordError}\n                                label=\"Confirm Password\"\n                                name=\"confirm-password\"\n                                type=\"password\"\n                                value={confirmPassword}\n                                onChange={setConfirmPassword}\n                                helperText={confirmPasswordError ? confirmPasswordErrorMessage: ' '}\n                                variant=\"outlined\"\n                                className={classes.textField}\n                            />\n                        </Grid>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Grid container justify={'center'}>\n                            <FormButton text={'I\\'m in!'} form={formID} disabled={false}/>\n                        </Grid>\n                    </Grid>\n\n                    <Grid item xs={12}>\n                        <Grid container justify={'center'}>\n                            <ErrorMessage loading={loading} error={error} errorMessage={errorMessage}/>\n                        </Grid>\n                    </Grid>\n\n                    <Grid item xs={12}>\n                        <Divider />\n                    </Grid>\n                    <Grid item xs={12} className={classes.link}>\n                        <Grid container justify={'center'}>\n                            <Link to={'/login'}>\n                                Already have an account?\n                            </Link>\n                        </Grid>\n                    </Grid>\n\n                </Grid>\n            </form>\n        </LoginCommon>\n    )\n};\n\nexport default Register","import React from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Button as MuiButton} from \"@material-ui/core\";\nimport {Link} from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n    button: {\n        backgroundColor: 'rgba(255,255,255,0.3)',\n        color: '#fff',\n        fontWeight: 700,\n        textTransform: 'capitalize',\n        letterSpacing: 'inherit',\n        borderBottom: '2px solid rgba(0,0,0,0.1)',\n        borderRadius: '5px',\n        // margin: '0 4px',\n        padding: '4px 10px',\n        '&:hover': {\n            backgroundColor: theme.palette.secondary.main\n        }\n    }\n}));\n\ninterface ButtonProps {\n    text: string,\n    url?: string,\n    onClick?: () => void\n}\n\nconst ThemeButton: React.FC<ButtonProps> = ({text, url, onClick}) => {\n    const classes = useStyles();\n\n    if (url) {\n        return (\n            <MuiButton variant=\"contained\" classes={{root: classes.button}} disableElevation component={Link} to={url}>\n                { text }\n            </MuiButton>\n        )\n    } else {\n        return (\n            <MuiButton variant=\"contained\" classes={{root: classes.button}} disableElevation onClick={onClick}>\n                { text }\n            </MuiButton>\n        )\n    }\n};\n\nexport default ThemeButton\n","import {useState} from \"react\";\nimport urls from \"./urls\";\nimport {useHistory, useLocation} from \"react-router-dom\";\nimport { useDispatch } from 'react-redux'\nimport {logout as logoutAction} from \"../redux/actions/login-status\";\nimport {openSnackbar} from \"../redux/actions/snackbar\";\n\nconst useLogout = () => {\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(false);\n    const [errorMessage, setErrorMessage] = useState('');\n    const dispatch = useDispatch();\n    let history = useHistory();\n    let location = useLocation();\n\n    const clientSideLogout = () => {\n        dispatch(logoutAction());\n        let { from }: any = location.state || { from: { pathname: \"/\" } };\n        history.replace(from);\n\n        dispatch(openSnackbar('Logout succeeded'))\n    };\n\n    const logout = () => {\n        clientSideLogout()\n    };\n\n    return [loading, error, errorMessage, logout] as [boolean, boolean, string, typeof logout]\n\n};\n\nexport default useLogout","import ThemeButton from \"../commons/theme-button\";\nimport React from \"react\";\nimport {Box, CircularProgress, Grid, Typography} from \"@material-ui/core\";\nimport useLogout from \"../../requests/useLogout\";\n\ninterface LoggedInUserPanelProps {\n    username: string\n}\n\nconst LoggedInUserPanel: React.FC<LoggedInUserPanelProps> = ({username}) => {\n    const [loading, error, errorMessage, logout] = useLogout();\n\n    return (\n        <Grid container alignItems={\"center\"} justify={\"center\"} spacing={1}>\n            <Grid item>\n                <Typography component={'div'}>\n                    <Box>\n                        { username }\n                    </Box>\n                </Typography>\n            </Grid>\n            <Grid item>\n                {\n                    loading ?\n                        <CircularProgress color=\"secondary\" size={'1rem'}/> :\n                        <ThemeButton text={'Logout'} onClick={logout}/>\n                }\n            </Grid>\n        </Grid>\n    )\n};\n\nexport default LoggedInUserPanel","import ThemeButton from \"../commons/theme-button\";\nimport React from \"react\";\nimport {Grid} from \"@material-ui/core\";\n\nconst AnonymousUserPanel: React.FC = () => {\n    return (\n        <Grid container alignItems={\"center\"} justify={\"center\"} spacing={1}>\n            <Grid item>\n                <ThemeButton text={'Join'} url={'/register'}/>\n            </Grid>\n            <Grid item>\n                <ThemeButton text={'Login'} url={'/login'}/>\n            </Grid>\n        </Grid>\n    )\n};\n\nexport default AnonymousUserPanel","import {Box, Typography} from \"@material-ui/core\";\nimport {Link} from \"react-router-dom\";\nimport React from \"react\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        fontFamily: [\n            'Oleo Script Swash Caps',\n            'sans-serif',\n        ].join(','),\n        fontWeight: 700,\n        fontSize: '1.5rem',\n        [theme.breakpoints.up('md')]: {\n            fontSize: '1.75rem',\n        },\n        fontStyle: \"normal\",\n        color: \"#fff\",\n        whiteSpace: 'nowrap'\n    }\n}));\n\nconst Logo: React.FC = () => {\n    const classes = useStyles();\n\n    return (\n        <Typography variant={'h1'} component={'h1'} className={classes.root}>\n            <Box fontWeight={700} textAlign={\"center\"}>\n                <Link to={'/'}>\n                    Blog | XiaoxiHome\n                </Link>\n            </Box>\n        </Typography>\n    )\n};\n\nexport default Logo","import React, {useContext} from 'react';\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Box, Grid, Typography} from \"@material-ui/core\";\nimport {Link} from \"react-router-dom\";\nimport LoggedInUserPanel from \"./logged-in-user-panel\";\nimport AnonymousUserPanel from \"./anonymous-user-panel\";\nimport Logo from \"../commons/logo\";\n\ninterface HeaderProps {\n    isLogin: boolean,\n    username: string,\n}\n\nconst useStyles = makeStyles((theme) => ({\n    headerDimension: {\n        width: '100%',\n        height: '80px',\n    },\n    root: {\n        backgroundColor: theme.palette.primary.main,\n        position: 'fixed',\n        zIndex: theme.zIndex.appBar,\n        left: 0,\n        top: 0,\n        color: theme.palette.primary.contrastText,\n        padding: theme.spacing(0, 1)\n    },\n    placeholder: {\n        position: 'relative',\n    },\n    button: {\n        backgroundColor: 'rgba(255,255,255,0.5)',\n        color: '#fff',\n        fontWeight: 700,\n        textTransform: 'capitalize',\n        '&:hover': {\n            backgroundColor: theme.palette.secondary.main\n        }\n    }\n}));\n\n\nconst Header: React.FC<HeaderProps> = ({isLogin, username}) => {\n    const classes = useStyles();\n\n    return (\n        <header className={`${classes.placeholder} ${classes.headerDimension}`}>\n            <Grid container alignItems={\"center\"} justify={\"center\"} className={`${classes.root} ${classes.headerDimension}`}>\n                <Grid item xs={6} md={4}>\n                    <Logo/>\n                </Grid>\n                <Grid item xs={1} md={4}>\n\n                </Grid>\n                <Grid item xs={5} md={4}>\n                    {\n                        isLogin ?\n                            <LoggedInUserPanel username={username}/> :\n                            <AnonymousUserPanel />\n                    }\n                </Grid>\n            </Grid>\n        </header>\n    )\n};\n\n\n\nexport default Header;\n","import {connect} from \"react-redux\";\nimport Header from \"../components/header/header\";\nimport {State} from \"../redux/state\";\n\nfunction mapStateToProps(state: State) {\n    return {\n        isLogin: state.loginStatus.isLogin,\n        username: state.loginStatus.username\n    }\n}\n\nconst HeaderContainer = connect(\n    mapStateToProps\n)(Header);\n\nexport default HeaderContainer;\n","import {useEffect, useState} from \"react\";\nimport urls from \"./urls\";\n\nconst useGetPostList = () => {\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(false);\n\n    useEffect(() => {\n        fetchPostList()\n    }, []);\n\n    const fetchPostList = (\n    ) => {\n        // reset states\n        setError(false);\n\n        // start fetching\n        setLoading(true);\n        fetch(urls.getPostList, {\n            method: 'GET',\n            // headers: {\n            //     'Content-Type': 'application/json'\n            // }\n        })\n            .then((res) => res.json())\n            .then(json => {\n                setLoading(false);\n                console.log(json);\n\n                if (json.status === 'success') {\n                    console.log(json.data)\n                } else {\n                    console.log(json);\n                    setError(true);\n                }\n            })\n            .catch(e => {\n                setLoading(false);\n                console.log(e);\n                setError(true);\n            });\n    };\n\n    return [loading, error] as [typeof loading, typeof error]\n\n};\n\nexport default useGetPostList","import React from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport useGetPostList from \"../../requests/useGetPostList\";\nimport {Paper} from \"@material-ui/core\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ThumbUpRoundedIcon from '@material-ui/icons/ThumbUpRounded';\nimport ThumbDownRoundedIcon from '@material-ui/icons/ThumbDownRounded';\n\nconst months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n\nconst getTimeString = (ms: number) => {\n    const date = new Date();\n    const hour = date.getHours() < 10 ? `0${date.getHours()}` : date.getHours();\n    const minute = date.getMinutes() < 10 ? `0${date.getMinutes()}` : date.getMinutes();\n    return `${date.getDate()} ${months[date.getMonth()]}, ${date.getFullYear()} - ${hour}:${minute}`\n};\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        margin: theme.spacing(1, 0)\n    },\n    paper: {\n        width: '100%',\n        minHeight: '100px',\n        padding: theme.spacing(2),\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'flex-start'\n    },\n    avatar: {\n        margin: theme.spacing(1)\n    },\n    content: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'flex-start',\n        justifyContent: 'center',\n    },\n    title: {\n        margin: theme.spacing(0, 2),\n        '& h2': {\n            fontSize: '1.25rem',\n            fontWeight: 700,\n            color: theme.palette.text.primary,\n            margin: theme.spacing(1, 0),\n        }\n    },\n    actionArea: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'flex-start',\n        color: theme.palette.grey[\"500\"],\n        fontSize: '0.875rem',\n        fontWeight: 700,\n        [theme.breakpoints.down('md')]: {\n            flexDirection: 'column',\n            alignItems: 'flex-start',\n            justifyContent: 'center',\n        }\n    },\n    likeButtons: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    button: {\n        color: theme.palette.grey[\"400\"],\n        fontSize: '1.25rem'\n    },\n    buttonText: {\n        lineHeight: 1\n    },\n    actionItem: {\n        margin: theme.spacing(0, 2)\n    }\n}));\n\ninterface PostProps {\n    isLogin: boolean\n}\n\nconst Post: React.FC<PostProps> = ({isLogin}) => {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <Paper className={classes.paper} elevation={0}>\n                <Avatar variant=\"square\" className={classes.avatar}>\n                    N\n                </Avatar>\n                <div className={classes.content}>\n                    <div className={classes.title}>\n                        <h2>\n                            This is the title title title title\n                        </h2>\n                    </div>\n                    <div className={classes.actionArea}>\n                        <div className={`${classes.actionItem} ${classes.likeButtons}`}>\n                            <IconButton aria-label=\"like post\">\n                                <ThumbUpRoundedIcon className={classes.button}/>\n                            </IconButton>\n                            <div className={classes.buttonText}>\n                                12\n                            </div>\n                            <IconButton aria-label=\"dislike post\" >\n                                <ThumbDownRoundedIcon className={classes.button}/>\n                            </IconButton>\n                            <div className={classes.buttonText}>\n                                9\n                            </div>\n                        </div>\n                        <div className={classes.actionItem}>\n                            55 comments\n                        </div>\n                        <div className={classes.actionItem}>\n                            { getTimeString(Date.now()) }\n                        </div>\n                    </div>\n                </div>\n            </Paper>\n        </div>\n    )\n};\n\nexport default Post","import React from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport useGetPostList from \"../../requests/useGetPostList\";\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport {Box, CircularProgress, Typography} from \"@material-ui/core\";\nimport Post from \"./post\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        // padding: theme.spacing(0, 2)\n    }\n}));\n\ninterface PostListProps {\n    isLogin: boolean\n}\n\nconst PostList: React.FC<PostListProps> = ({isLogin}) => {\n    const classes = useStyles();\n\n    const [loading, error] = useGetPostList();\n\n    let content;\n    if (loading) {\n        content = (new Array(10)).fill(0).map((_, i) => {\n                return (\n                    <Box width='100%' my={2} key={i}>\n                        <Skeleton variant=\"rect\" animation=\"wave\" width={'100%'} height={100}/>\n                    </Box>\n                )\n            })\n    } else if (error) {\n        content = (\n            <Typography variant={'body1'} component={'h2'}>\n                <Box fontWeight={700} color={'primary.main'} textAlign={'center'}>\n                    Server is unavailable now, please try again later\n                </Box>\n            </Typography>\n        )\n    } else {\n        content = (new Array(10)).fill(0).map((_, i) => {\n            return (\n                <Post key={i} isLogin={isLogin}/>\n            )\n        })\n    }\n\n    return (\n        <div className={classes.root}>\n            { content }\n        </div>\n    )\n};\n\nexport default PostList","import {connect} from \"react-redux\";\nimport {State} from \"../redux/state\";\nimport PostList from \"../components/post-list/post-list\";\n\nfunction mapStateToProps(state: State) {\n    return {\n        isLogin: state.loginStatus.isLogin\n    }\n}\n\n// function mapDispatchToProps(dispatch: Dispatch) {\n//     return {\n//         closeSnackbar: () => dispatch(closeSnackbar())\n//     }\n// }\n\nconst PostListContainer = connect(\n    mapStateToProps\n)(PostList);\n\nexport default PostListContainer;\n","import {Button} from \"@material-ui/core\";\nimport React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\n\nconst useStyles = makeStyles((theme) => ({\n    button: {\n        backgroundColor: theme.palette.primary.light,\n        maxWidth: '100%',\n        color: '#fff',\n        fontWeight: 700,\n        textTransform: 'capitalize',\n        letterSpacing: 'inherit',\n        borderBottom: '2px solid rgba(0,0,0,0.1)',\n        borderRadius: '5px',\n        padding: '4px 10px',\n        '& span': {\n            color: '#fff',\n        },\n        '&:hover': {\n            backgroundColor: theme.palette.secondary.main\n        }\n    }\n}));\n\ninterface BaseButtonProps {\n    width: string,\n    text: string\n}\n\ninterface GenericClickButtonProps extends BaseButtonProps {\n    onClick: any\n}\n\nconst GenericClickButton: React.FC<GenericClickButtonProps> = ({width, text, onClick}) => {\n    const classes = useStyles();\n\n    return (\n            <Button variant=\"contained\" classes={{root: classes.button}} disableElevation onClick={onClick} style={{width: width}}>\n                { text }\n            </Button>\n    )\n};\n\ninterface GenericLinkButtonProps extends BaseButtonProps {\n    link: string\n}\n\nconst GenericLinkButton: React.FC<GenericLinkButtonProps> = ({width, text, link}) => {\n    const classes = useStyles();\n\n    return (\n        <Button variant=\"contained\" classes={{root: classes.button}} disableElevation component={Link} to={link} style={{width: width}}>\n            { text }\n        </Button>\n    )\n};\n\nexport {GenericClickButton, GenericLinkButton};","import React from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport {GenericLinkButton} from \"../commons/generic-button\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        minHeight: '100px',\n        margin: theme.spacing(1),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center'\n    }\n}));\n\nconst SideBar: React.FC = () => {\n    const classes = useStyles();\n\n    return (\n        <Paper className={classes.root} elevation={0}>\n            <GenericLinkButton link={'/edit-post'} width={'80%'} text={'Create Post'}/>\n        </Paper>\n    )\n};\n\nexport default SideBar","import React from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport PostListContainer from \"../../containers/post-list-container\";\nimport SideBar from \"../side-bar/side-bar\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        margin: theme.spacing(2, 0),\n        width: '100%',\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'flex-start',\n        justifyContent: 'center',\n        [theme.breakpoints.down('md')]: {\n            flexDirection: 'column',\n        }\n    },\n    left: {\n        width: \"75%\",\n        [theme.breakpoints.down('md')]: {\n            width: \"100%\",\n        }\n    },\n    right: {\n        width: \"25%\",\n        [theme.breakpoints.down('md')]: {\n            width: \"100%\",\n        }\n    }\n}));\n\ninterface MainPageProps {\n\n}\n\nconst MainPage: React.FC<MainPageProps> = () => {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.left}>\n                <PostListContainer />\n            </div>\n            <div className={classes.right}>\n                <SideBar />\n            </div>\n        </div>\n    )\n};\n\nexport default MainPage","import React from \"react\";\nimport {\n    Box,\n    createStyles,\n    IconButton,\n    Snackbar as MuiSnackbar,\n    SnackbarContent,\n} from \"@material-ui/core\";\nimport Close from '@material-ui/icons/Close';\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles(() => createStyles({\n    root: {\n\n    },\n    content: {\n        backgroundColor: '#4a5568',\n    },\n}));\n\ninterface SnackbarProps {\n    open: boolean,\n    closeSnackbar: () => void,\n    message: string\n}\n\nconst Snackbar: React.FC<SnackbarProps> = ({open, closeSnackbar, message}) => {\n    const classes = useStyles();\n\n    return (\n        <MuiSnackbar\n            anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'center',\n            }}\n            open={open}\n            autoHideDuration={5000}\n            onClose={closeSnackbar}\n            className={classes.root}\n        >\n            <SnackbarContent\n                className={classes.content}\n                message={\n                    <Typography variant={'body1'} component={'div'}>\n                        <Box fontWeight={700}>\n                            { message }\n                        </Box>\n                    </Typography>\n                }\n                action={[\n                    <IconButton key=\"close\" aria-label=\"close\" color=\"inherit\" onClick={closeSnackbar}>\n                        <Close/>\n                    </IconButton>\n                ]}\n            />\n        </MuiSnackbar>\n    )\n};\n\nexport default Snackbar;","import {connect} from \"react-redux\";\nimport Snackbar from \"../components/snackbar/snackbar\";\nimport {State} from \"../redux/state\";\nimport {Dispatch} from \"redux\";\nimport {closeSnackbar} from \"../redux/actions/snackbar\";\n\nfunction mapStateToProps(state: State) {\n    return {\n        open: state.snackbar.open,\n        message: state.snackbar.message\n    }\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch) {\n    return {\n        closeSnackbar: () => dispatch(closeSnackbar())\n    }\n}\n\nconst SnackbarContainer = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Snackbar);\n\nexport default SnackbarContainer;\n","import React from \"react\";\nimport {Box, Grid, Paper, Typography} from \"@material-ui/core\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Logo from \"../commons/logo\";\nimport {Link} from \"react-router-dom\";\n\ntype FooterColumnData = {\n    title: string,\n    url: string\n}[]\n\ninterface FooterColumnProps {\n    data: FooterColumnData\n}\n\nconst userStyles = makeStyles((theme) => ({\n    root: {\n        listStyleType: 'none',\n        margin: 0,\n        padding: 0\n    },\n    header: {\n        fontSize: '1.25rem',\n        margin: '8px 0',\n        letterSpacing: '0',\n        fontWeight: 700\n    },\n    content: {\n        fontSize: '0.875rem',\n        padding: '2px',\n        '&:hover': {\n            color: theme.palette.secondary.main\n        }\n    }\n}));\n\nconst FooterColumn: React.FC<FooterColumnProps> = ({data}) => {\n    const classes = userStyles();\n\n    return (\n        <ul className={classes.root}>\n            {\n                data.map((item, i) => {\n                    if (i === 0) {\n                        return (\n                            <li key={i}>\n                                <div className={classes.header}>\n                                    { item.title }\n                                </div>\n                            </li>\n                        )\n                    } else {\n                        return (\n                            <li key={i}>\n                                <a href={item.url} target=\"_blank\" rel=\"noopener noreferrer\">\n                                    <div className={classes.content}>\n                                        { item.title }\n                                    </div>\n                                </a>\n                            </li>\n                            )\n                    }\n                })\n            }\n        </ul>\n    )\n};\n\nexport default FooterColumn","import React from \"react\";\nimport {Grid, Paper} from \"@material-ui/core\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Logo from \"../commons/logo\";\nimport FooterColumn from \"./footer-column\";\n\nconst column1 = [\n    {\n        title: 'Learn More',\n        url: ''\n    },\n    {\n        title: 'API Endpoints',\n        url: 'https://www.google.ca/'\n    },\n    {\n        title: 'GitHub',\n        url: 'https://github.com/CptDoraemon/discussion-board-client'\n    },\n    {\n        title: 'XiaoxiHome',\n        url: 'https://www.xiaoxihome.com/'\n    },\n];\n\nconst userStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        margin: '40px 0 8px 0'\n    },\n    paper: {\n        width: '100%',\n        backgroundColor: '#4a5568',\n        color: '#a0aec0',\n        padding: theme.spacing(5)\n    },\n    copyright: {\n        width: '100%',\n        margin: theme.spacing(5, 0, 0, 0),\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'center',\n        fontSize: '0.8rem'\n    }\n}));\n\nconst Footer: React.FC = () => {\n    const classes = userStyles();\n\n    return (\n        <footer className={classes.root}>\n            <Paper className={classes.paper}>\n                <Grid container spacing={5}>\n                    <Grid item>\n                        <Logo/>\n                    </Grid>\n                    <Grid item>\n                        <FooterColumn data={column1} />\n                    </Grid>\n                </Grid>\n                <div className={classes.copyright}>\n                    <div>\n                        © 2020 XiaoxiHome.com\n                    </div>\n                </div>\n            </Paper>\n        </footer>\n    )\n};\n\nexport default Footer","import {\n    Route,\n    Redirect\n} from \"react-router-dom\";\nimport React from \"react\";\n\ninterface PrivateRouteProps {\n    isLogin: boolean,\n    path: string\n}\n\nconst PrivateRoute: React.FC<PrivateRouteProps> = ({ children, isLogin, ...rest}) => {\n    return (\n        <Route\n            {...rest}\n            render={({ location }) =>\n                isLogin ? (\n                    children\n                ) : (\n                    <Redirect\n                        to={{\n                            pathname: \"/login\",\n                            state: { from: location }\n                        }}\n                    />\n                )\n            }\n        />\n    );\n};\n\nexport default PrivateRoute","import {useStore} from \"react-redux\";\nimport {State} from \"../redux/state\";\n\nconst useGetAuthorizationHeader = () => {\n    const state = useStore<State>().getState();\n    const accessToken = state.loginStatus.token.access;\n\n    const accessHeader = {\n        'Authorization': `Bearer ${accessToken}`\n    };\n\n    return accessHeader\n};\n\nexport default useGetAuthorizationHeader","import urls from \"./urls\";\nimport {useDispatch, useStore} from 'react-redux'\nimport useGetAuthorizationHeader from \"./useGetAuthorizationHeader\";\nimport { refreshToken as refreshTokenAction } from '../redux/actions/login-status'\nimport {State} from \"../redux/state\";\n\nconst useVerifyToken = () => {\n    const state = useStore<State>().getState();\n    const isLogin = state.loginStatus.isLogin;\n    const refreshToken = state.loginStatus.token.access;\n\n    const accessHeader = useGetAuthorizationHeader();\n    const dispatch = useDispatch();\n\n    const validate = () => {\n        return new Promise(async (resolve, reject) => {\n            try {\n                // not login\n                if (!isLogin) {\n                    resolve(false);\n                    return\n                }\n\n                // verify if access token still valid\n                const res = await fetch(urls.verifySession, {\n                            method: 'POST',\n                            headers: {\n                                'Content-Type': 'application/json',\n                                ...accessHeader\n                            }\n                });\n                const json = await res.json();\n                if (json.status === 'success') {\n                    // access token still valid\n                    resolve(true);\n                    return\n                }\n\n                // access token not valid\n                // try refresh\n                const refreshRes = await fetch(urls.refresh, {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json',\n                    },\n                    body: JSON.stringify({\n                        refresh: refreshToken\n                    })\n                });\n                const refreshJson = await refreshRes.json();\n                if (refreshJson.status === 'success') {\n                    // refresh successful\n                    dispatch(refreshTokenAction(refreshJson.data.access));\n                    resolve(true);\n                    return\n                }\n\n                // refresh failed\n                resolve(false);\n\n            } catch (e) {\n                console.log(e);\n                resolve(false)\n            }\n        });\n    };\n\n    return validate\n\n};\n\nexport default useVerifyToken","import {useState} from \"react\";\nimport urls from \"./urls\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { useDispatch } from 'react-redux'\nimport { updateLoginStatus } from \"../redux/actions/login-status\";\nimport { openSnackbar } from \"../redux/actions/snackbar\";\nimport useGetAuthorizationHeader from \"./useGetAuthorizationHeader\";\nimport useVerifyToken from \"./useVerifyToken\";\n\nconst usePostSubmission = () => {\n    const accessHeader = useGetAuthorizationHeader();\n    const validateToken = useVerifyToken();\n\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(false);\n    const [errorMessage, setErrorMessage] = useState('');\n    const dispatch = useDispatch();\n    let history = useHistory();\n    let location = useLocation();\n\n    const submit = async (\n        title: string,\n        content: string\n    ) => {\n        try {\n            // reset states\n            setError(false);\n            setErrorMessage(' ');\n            setLoading(true);\n\n            // redirect to login if token not valid\n            const isTokenValid = await validateToken();\n            if (!isTokenValid) {\n                setLoading(false);\n                history.push(\"/login\");\n                return\n            }\n\n            //\n            const res = await fetch(urls.createPost, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    ...accessHeader\n                },\n                body: JSON.stringify({\n                    title,\n                    content\n                })\n            });\n            const json = await res.json();\n            setLoading(false);\n            if (json.status === 'success') {\n                console.log(json)\n            } else {\n                setErrorMessage(json.message);\n                setError(true)\n            }\n        } catch (e) {\n            console.log(e);\n            setLoading(false);\n            setErrorMessage('Server is not available please try again later');\n            setError(true)\n        }\n    };\n\n    return [loading, error, errorMessage, submit] as [typeof loading, typeof error, typeof errorMessage, typeof submit]\n};\n\nexport default usePostSubmission","import React, {FormEvent, useEffect, useState} from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Quill from 'quill'\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport 'quill/dist/quill.snow.css';\nimport {FormControl, FormHelperText, Input, InputLabel, Paper} from \"@material-ui/core\";\nimport useInputField from \"../../utils/use-input-field\";\nimport {postTitleValidator} from \"../../utils/validators\";\nimport {GenericClickButton} from \"../commons/generic-button\";\nimport usePostSubmission from \"../../requests/usePostSubmission\";\nimport ErrorMessage from \"../commons/error-message\";\n\nconst ID = 'editor';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        padding: theme.spacing(2)\n    },\n    editor: {\n        width: '100%',\n        minHeight: '300px',\n        marginBottom: '16px',\n    },\n    title: {\n        width: '100%',\n    }\n}));\n\nconst PostEditor: React.FC = () => {\n    const classes = useStyles();\n    const {postID} = useParams();\n\n    const [quill, setQuill] = useState<any>(null);\n    const [title, titleChangeHandler, titleError, titleErrorMessage, validateTitle] = useInputField('', postTitleValidator);\n    const [loading, error, errorMessage, submit] = usePostSubmission();\n\n    const submitHandler = (e: FormEvent) => {\n        e.preventDefault();\n        if (!validateTitle()) return;\n\n        submit(title, quill.root.innerHTML)\n    };\n\n    useEffect(() => {\n        const quillInstance = new Quill(`#${ID}`, {\n            modules: {\n                toolbar: [\n                    [{header: [1, 2, false]}],\n                    ['bold', 'italic', 'underline'],\n                    ['image', 'code-block']\n                ]\n            },\n            placeholder: 'Compose an epic...',\n            theme: 'snow'  // or 'bubble'\n        });\n\n        setQuill(quillInstance)\n    }, []);\n\n    return (\n        <Paper className={classes.root} elevation={0}>\n\n            <form>\n                <FormControl className={classes.title}>\n                    <InputLabel htmlFor=\"post-editor-title\">Title</InputLabel>\n                    <Input\n                        id=\"post-editor-title\"\n                        aria-describedby=\"post-editor-title-helper-text\"\n                        value={title}\n                        onChange={titleChangeHandler}\n                    />\n                    <FormHelperText id=\"post-editor-title-helper-text\" error={titleError}>{titleError && titleErrorMessage ? titleErrorMessage : ' '}</FormHelperText>\n                </FormControl>\n\n                <div id={ID} className={classes.editor}/>\n                <GenericClickButton onClick={submitHandler} width={'250px'} text={'Submit'}/>\n                <ErrorMessage loading={loading} error={error} errorMessage={errorMessage}/>\n            </form>\n        </Paper>\n    )\n};\n\nexport default PostEditor","import React from 'react';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route\n} from \"react-router-dom\";\nimport {connect, Provider} from 'react-redux';\nimport configureStore from \"./redux/configure-store\";\nimport { CssBaseline } from \"@material-ui/core\";\nimport {makeStyles, ThemeProvider} from '@material-ui/core/styles';\nimport theme from './theme';\nimport Login from \"./components/login/login\";\nimport Register from \"./components/login/register\";\nimport HeaderContainer from \"./containers/header-container\";\nimport MainPage from \"./components/main-page/main-page\";\nimport SnackbarContainer from \"./containers/snackbar-container\";\nimport Footer from \"./components/footer/footer\";\nimport PrivateRoute from \"./utils/protected-router\";\nimport PostEditor from \"./components/post-editor/post-editor\";\nimport {State} from \"./redux/state\";\nimport {Dispatch} from \"redux\";\nimport {closeSnackbar} from \"./redux/actions/snackbar\";\nimport Snackbar from \"./components/snackbar/snackbar\";\n\nconst store = configureStore();\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        maxWidth: '100vw',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'flex-start'\n    },\n    widthWrapper: {\n        margin: theme.spacing(5, 0, 0, 0),\n        width: '1000px',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'flex-start',\n        [theme.breakpoints.down('sm')]: {\n            width: 'calc(100% - 16px)',\n            margin: theme.spacing(0, 1),\n        }\n    }\n}));\n\ninterface InnerAppProps {\n    isLogin: boolean\n}\n\nconst InnerApp: React.FC<InnerAppProps> = ({isLogin}) => {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <Router basename={process.env.PUBLIC_URL}>\n                <HeaderContainer />\n                <div className={classes.widthWrapper}>\n                    <Switch>\n                        <Route path=\"/\" exact render={ () => <MainPage /> } />\n                        <Route path=\"/login\" render={ () => <Login /> } />\n                        <Route path=\"/register\" render={ () => <Register /> } />\n                        <PrivateRoute path=\"/edit-post/:postID?\" isLogin={true}>\n                            <PostEditor/>\n                        </PrivateRoute>\n                        {/*<Route path=\"/welcome\" component={Welcome} />*/}\n                    </Switch>\n                    <Footer />\n                </div>\n            </Router>\n\n            <SnackbarContainer />\n        </div>\n    )\n};\n\nfunction mapStateToProps(state: State) {\n    return {\n        isLogin: state.loginStatus.isLogin\n    }\n}\n\nconst InnerAppContainer = connect(\n    mapStateToProps,\n)(InnerApp);\n\nexport default InnerAppContainer;\n","import React from 'react';\nimport {Provider} from 'react-redux';\nimport configureStore from \"./redux/configure-store\";\nimport { CssBaseline } from \"@material-ui/core\";\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport theme from './theme';\nimport InnerApp from \"./inner-app\";\n\nconst store = configureStore();\n\ninterface AppProps {\n\n}\n\nconst App: React.FC<AppProps> = () => {\n    return (\n        <Provider store={store}>\n        <ThemeProvider theme={theme}>\n        <CssBaseline />\n            <InnerApp />\n        </ThemeProvider>\n        </Provider>\n    )\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}